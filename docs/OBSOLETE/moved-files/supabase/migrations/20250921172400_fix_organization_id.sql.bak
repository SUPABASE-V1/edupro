-- Fix NULL organization_id with correct foreign key reference
-- Date: 2025-09-21
-- Purpose: Update profiles with NULL organization_id to use existing organizations

BEGIN;

-- ====================================================================
-- PART 1: UPDATE USERS WITH NULL ORGANIZATION_ID
-- ====================================================================

-- Update profiles that have NULL organization_id to use an existing organization
DO $$
DECLARE
    default_org_id UUID;
    orphaned_count INTEGER;
    principal_org_id UUID;
BEGIN
    -- Count users without organization_id (excluding superadmins)
    SELECT COUNT(*) INTO orphaned_count
    FROM profiles 
    WHERE organization_id IS NULL 
    AND role != 'superadmin';
    
    RAISE NOTICE 'Found % orphaned users (excluding superadmins)', orphaned_count;
    
    IF orphaned_count > 0 THEN
        -- First, try to find the organization that the principal user should belong to
        -- Look for "Young Eagles" organization since that's what's being queried
        SELECT id INTO principal_org_id
        FROM organizations 
        WHERE id = 'ba79097c-1b93-4b48-bcbe-df73878ab4d1'
        LIMIT 1;
        
        IF principal_org_id IS NOT NULL THEN
            -- Update the orphaned principal user to belong to Young Eagles org
            UPDATE profiles 
            SET organization_id = principal_org_id
            WHERE organization_id IS NULL 
            AND role = 'principal'
            AND id = '136cf31c-b37c-45c0-9cf7-755bd1b9afbf';
            
            RAISE NOTICE 'Updated principal user to Young Eagles organization';
        END IF;
        
        -- For any other orphaned users, assign them to the first available organization
        SELECT id INTO default_org_id
        FROM organizations 
        ORDER BY created_at ASC
        LIMIT 1;
        
        IF default_org_id IS NOT NULL THEN
            UPDATE profiles 
            SET organization_id = default_org_id
            WHERE organization_id IS NULL 
            AND role != 'superadmin'
            AND id != '136cf31c-b37c-45c0-9cf7-755bd1b9afbf';  -- Skip the principal we already updated
            
            RAISE NOTICE 'Updated remaining % orphaned users with organization_id: %', 
                         (SELECT COUNT(*) FROM profiles WHERE organization_id = default_org_id AND role != 'superadmin'), 
                         default_org_id;
        ELSE
            -- Create a default organization if none exist
            INSERT INTO organizations (id, name, email, is_active, created_at, updated_at)
            VALUES (
                gen_random_uuid(),
                'Default Organization',
                'admin@edudashpro.com',
                true,
                now(),
                now()
            )
            RETURNING id INTO default_org_id;
            
            UPDATE profiles 
            SET organization_id = default_org_id
            WHERE organization_id IS NULL 
            AND role != 'superadmin';
            
            RAISE NOTICE 'Created new default organization with ID: % and updated % users', 
                         default_org_id, orphaned_count;
        END IF;
    ELSE
        RAISE NOTICE 'No orphaned users found';
    END IF;
END
$$;

-- ====================================================================
-- PART 2: VERIFY THE FIX
-- ====================================================================

-- Check the results
SELECT 
    id,
    role,
    organization_id,
    CASE 
        WHEN organization_id IS NULL THEN 'NULL ❌'
        ELSE 'SET ✓'
    END as org_status
FROM profiles
ORDER BY role, organization_id;

COMMIT;