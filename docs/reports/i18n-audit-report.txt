üåç EduDash Pro I18N Audit Starting...

üîç Scanning directories: app, components, contexts, lib

üìä I18N AUDIT RESULTS
==================================================
Total hardcoded strings found: 9422
Files affected: 345

üö® CRITICAL ISSUES FOUND:

üìÑ app/(auth)/sign-in.tsx:
   Line 72: "Failed to load saved credentials:"
   Context: {
        console.error('Failed to load saved credentials:', error);
      }

   Line 79: "common.error"
   Context: {
    if (!email || !password) {
      Alert.alert(t('common.error', { defaultValue: 'Error' }

   Line 81: "Please enter email and password"
   Context: { defaultValue: 'Please enter email and password' }

   Line 88: "auth.sign_in.failed"
   Context: {
      // Use centralized session manager to avoid throwing on network/storage quirks
      const res = await signInWithSession(email.trim(), password);
      if (res.error) {
        Alert.alert(t('auth.sign_in.failed', { defaultValue: 'Sign In Failed' }

   Line 113: "Remember me save failed:"
   Context: {
        console.warn('Remember me save failed:', credErr);
      }

   Line 136: "=== SIGN IN ERROR DEBUG ==="
   Context: {
      // Enhanced debug logging to trace error source
      console.error('=== SIGN IN ERROR DEBUG ===');
      console.error('Error object:', _error);
      console.error('Error name:', _error?.name);
      console.error('Error message:', _error?.message);
      console.error('Error stack:', _error?.stack);
      console.error('Error cause:', _error?.cause);
      console.error('Error keys:', Object.keys(_error || {}

   Line 147: "An unexpected error occurred"
   Context: { defaultValue: 'An unexpected error occurred' }

   Line 153: "auth.biometric_not_available.title"
   Context: {
    if (!biometricAvailable) {
      Alert.alert(t('auth.biometric_not_available.title', { defaultValue: 'Biometric Not Available' }

   Line 155: "Please use your password to sign in."
   Context: { defaultValue: 'Please use your password to sign in.' }

   Line 164: "auth.biometric.prompt"
   Context: {
      // Authenticate with biometrics
      const authResult = await BiometricAuthService.authenticate(t('auth.biometric.prompt', { defaultValue: 'Sign in to EduDash Pro' }

   Line 172: "common.error"
   Context: {
          setShowBiometricLoading(false);
          Alert.alert(t('common.error', { defaultValue: 'Error' }

   Line 174: "No saved credentials found. Please sign in with your password."
   Context: { defaultValue: 'No saved credentials found. Please sign in with your password.' }

   Line 176: "t just cancel
        if (authResult.error && !authResult.error.includes("
   Context: {
        setShowBiometricLoading(false);
        // Only show alert if user didn't just cancel
        if (authResult.error && !authResult.error.includes('cancel')) {
          Alert.alert(t('auth.biometric_failed.title', { defaultValue: 'Authentication Failed' }

   Line 180: "Biometric authentication failed"
   Context: { defaultValue: 'Biometric authentication failed' }

   Line 183: "Biometric login error:"
   Context: {
      console.error('Biometric login error:', error);
      setShowBiometricLoading(false);
      Alert.alert(t('common.error', { defaultValue: 'Error' }

   Line 186: "An error occurred during biometric authentication"
   Context: { defaultValue: 'An error occurred during biometric authentication' }

   Line 221: "OAuth Error:"
   Context: {
        console.error('OAuth Error:', error);
        let errorMessage = t('auth.oauth.failed_start', { defaultValue: 'Failed to start social login' }

   Line 228: "auth.oauth.config_error"
   Context: {
          errorMessage = t('auth.oauth.config_error', { defaultValue: 'OAuth configuration error. Please contact support.' }

   Line 234: "Sign-in Unavailable"
   Context: { defaultValue: 'Sign-in Unavailable' }

   Line 237: "OAuth Exception:"
   Context: {
      console.error('OAuth Exception:', e);
      let errorMessage = t('auth.oauth.failed_start', { defaultValue: 'Failed to start social login' }

   Line 244: "common.unexpected_error"
   Context: {
        errorMessage = e?.message || t('common.unexpected_error', { defaultValue: 'An unexpected error occurred' }

   Line 248: "Sign-in Error"
   Context: { defaultValue: 'Sign-in Error' }

   Line 252: "Email required"
   Context: {
    if (!email) {
      Alert.alert('Email required', 'Enter your email above, then tap Resend.');
      return;
    }

   Line 267: "Failed to resend confirmation"
   Context: {
      let msg = e?.message || 'Failed to resend confirmation';
      if (msg.toLowerCase().includes('already confirmed')) {
        msg = 'This email is already confirmed. You can sign in now.';
      }

   Line 579: "face"
   Context: {biometricType === 'face' ? t('auth.biometric.authenticating_face', { defaultValue: 'Authenticating with Face ID' }

   Line 580: "Authenticating with Fingerprint"
   Context: { defaultValue: 'Authenticating with Fingerprint' }

   Line 584: "auth.biometric.please_verify"
   Context: {t('auth.biometric.please_verify', { defaultValue: 'Please verify your identity' }

   Line 630: "auth.biometric.enabled_for"
   Context: {t('auth.biometric.enabled_for', { defaultValue: 'Biometric login enabled' }

   Line 638: "auth.email"
   Context: {t('auth.email', { defaultValue: 'Email' }

   Line 650: "auth.password"
   Context: {t('auth.password', { defaultValue: 'Password' }

   Line 681: "auth.remember_me"
   Context: {t('auth.remember_me', { defaultValue: 'Remember me' }

   Line 691: "auth.sign_in.signing_in"
   Context: {loading ? t('auth.sign_in.signing_in', { defaultValue: 'Signing In...' }

   Line 691: "Sign In"
   Context: { defaultValue: 'Sign In' }

   Line 733: "auth.dont_have_account"
   Context: {t('auth.dont_have_account', { defaultValue: "Don't have an account?" }

   Line 743: "auth.sign_up_parent"
   Context: {t('auth.sign_up_parent', { defaultValue: 'Sign up as Parent' }

   Line 751: "auth.sign_up_teacher"
   Context: {t('auth.sign_up_teacher', { defaultValue: 'Sign up as Teacher' }

   Line 760: "auth.school_register_q"
   Context: {t('auth.school_register_q', { defaultValue: 'Looking to register a school?' }

   Line 760: "common.click_here"
   Context: {t('common.click_here', { defaultValue: 'Click here' }

   Line 73: "Failed to load saved credentials:"
   Context: console.error('Failed to load saved credentials:'

   Line 97: "Sign in successful:"
   Context: console.log('Sign in successful:'

   Line 114: "Remember me save failed:"
   Context: console.warn('Remember me save failed:'

   Line 139: "Error object:"
   Context: console.error('Error object:'

   Line 140: "Error name:"
   Context: console.error('Error name:'

   Line 141: "Error message:"
   Context: console.error('Error message:'

   Line 142: "Error stack:"
   Context: console.error('Error stack:'

   Line 143: "Error cause:"
   Context: console.error('Error cause:'

   Line 144: "Error keys:"
   Context: console.error('Error keys:'

   Line 184: "Biometric login error:"
   Context: console.error('Biometric login error:'

   Line 222: "OAuth Error:"
   Context: console.error('OAuth Error:'

   Line 238: "OAuth Exception:"
   Context: console.error('OAuth Exception:'

   Line 254: "Email required"
   Context: Alert.alert('Email required'

   Line 45: "Face ID"
   Context: 'Face ID'

   Line 81: "Please enter email and password"
   Context: 'Please enter email and password'

   Line 92: "Sign In Failed"
   Context: 'Sign In Failed'

   Line 147: "An unexpected error occurred"
   Context: 'An unexpected error occurred'

   Line 155: "Biometric Not Available"
   Context: 'Biometric Not Available'

   Line 166: "Sign in to EduDash Pro"
   Context: 'Sign in to EduDash Pro'

   Line 180: "Authentication Failed"
   Context: 'Authentication Failed'

   Line 180: "Biometric authentication failed"
   Context: 'Biometric authentication failed'

   Line 186: "An error occurred during biometric authentication"
   Context: 'An error occurred during biometric authentication'

   Line 223: "Failed to start social login"
   Context: 'Failed to start social login'

   Line 226: "Unsupported provider"
   Context: 'Unsupported provider'

   Line 223: "Failed to start social login"
   Context: 'Failed to start social login'

   Line 226: "Unsupported provider"
   Context: 'Unsupported provider'

   Line 147: "An unexpected error occurred"
   Context: 'An unexpected error occurred'

   Line 254: "Email required"
   Context: 'Email required'

   Line 268: "Failed to resend confirmation"
   Context: 'Failed to resend confirmation'

   Line 579: "Authenticating with Face ID"
   Context: 'Authenticating with Face ID'

   Line 580: "Authenticating with Fingerprint"
   Context: 'Authenticating with Fingerprint'

   Line 584: "Please verify your identity"
   Context: 'Please verify your identity'

   Line 630: "Biometric login enabled"
   Context: 'Biometric login enabled'

   Line 681: "Remember me"
   Context: 'Remember me'

   Line 691: "Sign In"
   Context: 'Sign In'

   Line 743: "Sign up as Parent"
   Context: 'Sign up as Parent'

   Line 751: "Sign up as Teacher"
   Context: 'Sign up as Teacher'

   Line 760: "Click here"
   Context: 'Click here'

üìÑ app/(public)/apply/[job_id].tsx:
   Line 52: "active"
   Context: {
    if (!job_id) return;

    try {
      setLoading(true);
      const data = await HiringHubService.getJobPostingById(job_id);
      
      if (!data || data.status !== 'active') {
        Alert.alert('Job Not Available', 'This job posting is no longer active.');
        return;
      }

   Line 65: "Job Expired"
   Context: {
        Alert.alert('Job Expired', 'This job posting has expired.');
        return;
      }

   Line 71: "Error loading job posting:"
   Context: {
      console.error('Error loading job posting:', error);
      Alert.alert('Error', error.message || 'Failed to load job posting');
    }

   Line 91: "File Too Large"
   Context: {
        Alert.alert('File Too Large', 'Resume must be less than 50MB');
        return;
      }

   Line 97: "Invalid File Type"
   Context: {
        Alert.alert('Invalid File Type', 'Please upload a PDF or Word document');
        return;
      }

   Line 103: "Error picking document:"
   Context: {
      console.error('Error picking document:', error);
      Alert.alert('Error', 'Failed to pick document');
    }

   Line 114: "Validation Error"
   Context: {
    if (!firstName.trim()) {
      Alert.alert('Validation Error', 'First name is required');
      return false;
    }

   Line 120: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Last name is required');
      return false;
    }

   Line 125: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Email is required');
      return false;
    }

   Line 130: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Please enter a valid email address');
      return false;
    }

   Line 135: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Phone number is required');
      return false;
    }

   Line 140: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Please enter valid years of experience (number)');
      return false;
    }

   Line 145: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Please upload your resume');
      return false;
    }

   Line 214: "Error submitting application:"
   Context: {
      console.error('Error submitting application:', error);
      Alert.alert('Error', error.message || 'Failed to submit application. Please try again.');
    }

   Line 249: "Apply for Job"
   Context: {{ title: 'Apply for Job', headerShown: false }

   Line 388: "Upload Resume/CV"
   Context: {resumeFile ? resumeFile.name : 'Upload Resume/CV'}

   Line 409: "Tell us why you"
   Context: placeholder="Tell us why you'

   Line 60: "Job Not Available"
   Context: Alert.alert('Job Not Available'

   Line 66: "Job Expired"
   Context: Alert.alert('Job Expired'

   Line 72: "Error loading job posting:"
   Context: console.error('Error loading job posting:'

   Line 92: "File Too Large"
   Context: Alert.alert('File Too Large'

   Line 98: "Invalid File Type"
   Context: Alert.alert('Invalid File Type'

   Line 104: "Error picking document:"
   Context: console.error('Error picking document:'

   Line 116: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 116: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 116: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 116: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 116: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 116: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 116: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 194: "Application Submitted! üéâ"
   Context: Alert.alert(
        'Application Submitted! üéâ'

   Line 215: "Error submitting application:"
   Context: console.error('Error submitting application:'

   Line 60: "Job Not Available"
   Context: 'Job Not Available'

   Line 66: "Job Expired"
   Context: 'Job Expired'

   Line 73: "Failed to load job posting"
   Context: 'Failed to load job posting'

   Line 92: "File Too Large"
   Context: 'File Too Large'

   Line 98: "Invalid File Type"
   Context: 'Invalid File Type'

   Line 98: "Please upload a PDF or Word document"
   Context: 'Please upload a PDF or Word document'

   Line 105: "Failed to pick document"
   Context: 'Failed to pick document'

   Line 116: "Validation Error"
   Context: 'Validation Error'

   Line 116: "First name is required"
   Context: 'First name is required'

   Line 116: "Validation Error"
   Context: 'Validation Error'

   Line 121: "Last name is required"
   Context: 'Last name is required'

   Line 116: "Validation Error"
   Context: 'Validation Error'

   Line 126: "Email is required"
   Context: 'Email is required'

   Line 116: "Validation Error"
   Context: 'Validation Error'

   Line 131: "Please enter a valid email address"
   Context: 'Please enter a valid email address'

   Line 116: "Validation Error"
   Context: 'Validation Error'

   Line 136: "Phone number is required"
   Context: 'Phone number is required'

   Line 116: "Validation Error"
   Context: 'Validation Error'

   Line 116: "Validation Error"
   Context: 'Validation Error'

   Line 146: "Please upload your resume"
   Context: 'Please upload your resume'

   Line 249: "Apply for Job"
   Context: 'Apply for Job'

   Line 409: "Tell us why you"
   Context: "Tell us why you'

üìÑ app/+not-found.tsx:
   Line 17: "function"
   Context: {
    // Gather debug information
    const gatherDebugInfo = () => {
      try {
        const canGo = typeof router.canGoBack === 'function' ? router.canGoBack() : false;
        setCanGoBack(canGo);
        
        const info = {
          pathname,
          segments,
          canGoBack: canGo,
          userRole: profile?.role || 'unknown',
          isAuthenticated: !!user,
          windowLocation: typeof window !== 'undefined' ? window.location.href : 'N/A',
          timestamp: new Date().toISOString(),
        }

   Line 75: "Smart back navigation failed:"
   Context: {
      console.error('Smart back navigation failed:', error);
      router.replace('/');
    }

   Line 88: "not_found.title"
   Context: {{ title: t('not_found.title', { defaultValue: 'Route Not Found' }

   Line 93: "not_found.title"
   Context: {t('not_found.title', { defaultValue: 'Route Not Found' }

   Line 94: "not_found.subtitle"
   Context: {t('not_found.subtitle', { defaultValue: "The requested page doesn't exist in the app." }

   Line 102: "navigation.back"
   Context: {t('navigation.back', { defaultValue: 'Back' }

   Line 107: "not_found.go_to_dashboard"
   Context: {t('not_found.go_to_dashboard', { defaultValue: 'Go to Dashboard' }

   Line 113: "not_found.go_to_home"
   Context: {t('not_found.go_to_home', { defaultValue: 'Go to Home' }

   Line 120: "not_found.debug.title"
   Context: {t('not_found.debug.title', { defaultValue: 'Debug Information' }

   Line 122: "not_found.debug.path"
   Context: {t('not_found.debug.path', { defaultValue: 'Path' }

   Line 123: "not_found.debug.user_role"
   Context: {t('not_found.debug.user_role', { defaultValue: 'User Role' }

   Line 124: "not_found.debug.authenticated"
   Context: {t('not_found.debug.authenticated', { defaultValue: 'Authenticated' }

   Line 124: "common.yes"
   Context: {debugInfo.isAuthenticated ? t('common.yes', { defaultValue: 'Yes' }

   Line 125: "not_found.debug.can_go_back"
   Context: {t('not_found.debug.can_go_back', { defaultValue: 'Can Go Back' }

   Line 125: "common.yes"
   Context: {debugInfo.canGoBack ? t('common.yes', { defaultValue: 'Yes' }

   Line 126: "not_found.debug.segments"
   Context: {t('not_found.debug.segments', { defaultValue: 'Segments' }

   Line 127: "not_found.debug.timestamp"
   Context: {t('not_found.debug.timestamp', { defaultValue: 'Timestamp' }

   Line 76: "Smart back navigation failed:"
   Context: console.error('Smart back navigation failed:'

   Line 88: "Route Not Found"
   Context: 'Route Not Found'

   Line 88: "Route Not Found"
   Context: 'Route Not Found'

   Line 94: "The requested page doesn"
   Context: "The requested page doesn'

   Line 107: "Go to Dashboard"
   Context: 'Go to Dashboard'

   Line 113: "Go to Home"
   Context: 'Go to Home'

   Line 120: "Debug Information"
   Context: 'Debug Information'

   Line 123: "User Role"
   Context: 'User Role'

   Line 125: "Can Go Back"
   Context: 'Can Go Back'

üìÑ app/_layout.tsx:
   Line 48: "EventEmitter3 not available, using basic polyfill"
   Context: {
      // Fallback if eventemitter3 is not available
      console.warn('EventEmitter3 not available, using basic polyfill');
      (global as any).DeviceEventEmitter = {
        addListener: () => ({ remove: () => {}

   Line 134: "Go back"
   Context: label="Go back"

   Line 134: "Go back"
   Context: label="Go back"

   Line 50: "EventEmitter3 not available, using basic polyfill"
   Context: console.warn('EventEmitter3 not available, using basic polyfill'

   Line 134: "Go back"
   Context: "Go back"

   Line 134: "Go back"
   Context: "Go back"

üìÑ app/admin-dashboard.tsx:
   Line 160: "login_success"
   Context: {
    setRefreshing(true);
    // Simulate API call
    await new Promise(resolve => setTimeout(resolve, 1500));
    
    // Add a new activity item to show refresh worked
    const newActivity = {
      id: Date.now().toString(),
      type: 'login_success' as const,
      email: 'admin@school.edu',
      ipAddress: '192.168.1.200',
      userAgent: 'Admin Panel',
      timestamp: new Date(),
      details: { device: 'Web Dashboard', action: 'Data Refreshed' }

   Line 181: "Dashboard data has been updated with the latest information."
   Context: { defaultValue: 'Dashboard data has been updated with the latest information.' }

   Line 187: "Are you sure you want to {{action}} this user?"
   Context: { defaultValue: 'Are you sure you want to {{action}} this user?', action: action.toLowerCase() }

   Line 189: "navigation.cancel"
   Context: { text: t('navigation.cancel', { defaultValue: 'Cancel' }

   Line 198: "User has been {{action}} successfully."
   Context: { defaultValue: 'User has been {{action}} successfully.', action: action.toLowerCase() + 'ed' }

   Line 207: "The invitation has been sent again to the user."
   Context: { defaultValue: 'The invitation has been sent again to the user.' }

   Line 211: "The invitation has been cancelled."
   Context: { defaultValue: 'The invitation has been cancelled.' }

   Line 260: "admin.last_seen"
   Context: {t('admin.last_seen', { defaultValue: 'Last seen' }

   Line 310: "time.just_now"
   Context: {
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffMins = Math.floor(diffMs / 60000);
    const diffHours = Math.floor(diffMins / 60);
    const diffDays = Math.floor(diffHours / 24);

    if (diffMins < 1) return t('time.just_now', { defaultValue: 'Just now' }

   Line 336: "admin.header.subtitle"
   Context: {t('admin.header.subtitle', { defaultValue: 'Real-time school management' }

   Line 355: "admin.stats.total_users"
   Context: {renderStatCard(t('admin.stats.total_users', { defaultValue: 'Total Users' }

   Line 356: "admin.stats.active_today"
   Context: {renderStatCard(t('admin.stats.active_today', { defaultValue: 'Active Today' }

   Line 359: "admin.stats.pending_invites"
   Context: {renderStatCard(t('admin.stats.pending_invites', { defaultValue: 'Pending Invites' }

   Line 360: "admin.stats.security_alerts"
   Context: {renderStatCard(t('admin.stats.security_alerts', { defaultValue: 'Security Alerts' }

   Line 372: "admin.add_user_title"
   Context: {() => Alert.alert(t('admin.add_user_title', { defaultValue: 'Add User' }

   Line 372: "Coming Soon"
   Context: { defaultValue: 'Coming Soon' }

   Line 394: "admin.sent"
   Context: {t('admin.sent', { defaultValue: 'Sent' }

   Line 437: "Opening security management..."
   Context: { defaultValue: 'Opening security management...' }

   Line 441: "admin.security_settings_label"
   Context: {t('admin.security_settings_label', { defaultValue: 'Security Settings' }

   Line 447: "Opening analytics dashboard..."
   Context: { defaultValue: 'Opening analytics dashboard...' }

   Line 451: "admin.view_analytics"
   Context: {t('admin.view_analytics', { defaultValue: 'View Analytics' }

   Line 457: "Starting system backup..."
   Context: { defaultValue: 'Starting system backup...' }

   Line 461: "admin.system_backup_label"
   Context: {t('admin.system_backup_label', { defaultValue: 'System Backup' }

   Line 96: "Mobile App"
   Context: 'Mobile App'

   Line 109: "John Smith"
   Context: 'John Smith'

   Line 120: "Invalid credentials"
   Context: 'Invalid credentials'

   Line 171: "Admin Panel"
   Context: 'Admin Panel'

   Line 173: "Web Dashboard"
   Context: 'Web Dashboard'

   Line 173: "Data Refreshed"
   Context: 'Data Refreshed'

   Line 260: "Last seen"
   Context: 'Last seen'

   Line 317: "Just now"
   Context: 'Just now'

   Line 355: "Total Users"
   Context: 'Total Users'

   Line 356: "Active Today"
   Context: 'Active Today'

   Line 359: "Pending Invites"
   Context: 'Pending Invites'

   Line 360: "Security Alerts"
   Context: 'Security Alerts'

   Line 372: "Add User"
   Context: 'Add User'

   Line 372: "Coming Soon"
   Context: 'Coming Soon'

   Line 441: "Security Settings"
   Context: 'Security Settings'

   Line 461: "System Backup"
   Context: 'System Backup'

üìÑ app/auth-callback.tsx:
   Line 7: "Finalizing sign-in‚Ä¶"
   Context: {
  const handled = useRef(false);
  const [message, setMessage] = useState('Finalizing sign-in‚Ä¶');

  async function handle(urlStr?: string | null) {
    if (handled.current) return;
    handled.current = true;
    try {
      // Try to extract tokens from hash fragment first
      if (urlStr && urlStr.includes('#')) {
        const hash = urlStr.slice(urlStr.indexOf('#') + 1);
        const h = new URLSearchParams(hash);
        const access_token = h.get('access_token');
        const refresh_token = h.get('refresh_token');
        if (access_token && refresh_token) {
const { error }

   Line 46: "Sign-in failed."
   Context: {
      setMessage(e?.message || 'Sign-in failed.');
    }

üìÑ app/auth-demo.tsx:
   Line 51: "signin"
   Context: {
      id: 'signin' as DemoComponent,
      title: 'üîê Enhanced Sign-In',
      description: 'Multi-factor authentication, social login, account lockout protection',
      features: ['MFA Support', 'Social Login', 'Account Lockout', 'Remember Me'],
      color: theme.primary
    }

   Line 58: "2fa"
   Context: {
      id: '2fa' as DemoComponent,
      title: 'üì± Two-Factor Auth',
      description: 'QR codes, SMS verification, backup codes management',
      features: ['TOTP Setup', 'QR Codes', 'Backup Codes', 'SMS Option'],
      color: theme.secondary
    }

   Line 65: "profile"
   Context: {
      id: 'profile' as DemoComponent,
      title: 'üë§ User Profile',
      description: 'Profile editing, security settings, activity monitoring',
      features: ['Profile Editing', 'Security Settings', 'Privacy Controls', 'Activity Logs'],
      color: theme.accent
    }

   Line 72: "recovery"
   Context: {
      id: 'recovery' as DemoComponent,
      title: 'üîë Password Recovery',
      description: 'Multi-step recovery with email verification and security questions',
      features: ['Email Verification', 'Security Questions', 'Admin Reset', 'Progress Tracking'],
      color: theme.warning
    }

   Line 79: "invitations"
   Context: {
      id: 'invitations' as DemoComponent,
      title: 'üìß Invitation Manager',
      description: 'Invite teachers and parents with bulk support',
      features: ['Individual Invites', 'Bulk CSV', 'Role-Specific Fields', 'Status Tracking'],
      color: theme.success
    }

   Line 96: "Demo Info"
   Context: {(error) => {
              Alert.alert('Demo Info', `Error: ${error}

   Line 99: "Demo Tip"
   Context: {() => {
              Alert.alert('Demo Tip', 'This would open the password recovery flow. Want to see it? Close this and tap the Password Recovery demo!');
            }

   Line 102: "Demo Info"
   Context: {() => {
              Alert.alert('Demo Info', 'This would open the registration flow (not shown in this demo).');
            }

   Line 118: "‚úÖ Verification Success!"
   Context: {() => {
              Alert.alert('‚úÖ Verification Success!', 'Two-factor authentication verified successfully!');
            }

   Line 96: "Demo Info"
   Context: {(error) => {
              Alert.alert('Demo Info', `Error: ${error}

   Line 131: "‚úÖ Profile Updated!"
   Context: {(updatedUser) => {
              Alert.alert('‚úÖ Profile Updated!', 'Your profile changes have been saved successfully!');
            }

   Line 134: "üîë Password Changed!"
   Context: {(current, newPassword) => {
              Alert.alert('üîë Password Changed!', 'Your password has been updated successfully!');
            }

   Line 137: "üîê Security Updated!"
   Context: {(settings) => {
              Alert.alert('üîê Security Updated!', 'Your security settings have been saved!');
            }

   Line 96: "Demo Info"
   Context: {(error) => {
              Alert.alert('Demo Info', `Error: ${error}

   Line 96: "Demo Info"
   Context: {(error) => {
              Alert.alert('Demo Info', `Error: ${error}

   Line 96: "Demo Info"
   Context: {(error) => {
              Alert.alert('Demo Info', `Error: ${error}

   Line 97: "Demo Info"
   Context: Alert.alert('Demo Info'

   Line 100: "Demo Tip"
   Context: Alert.alert('Demo Tip'

   Line 97: "Demo Info"
   Context: Alert.alert('Demo Info'

   Line 97: "Demo Info"
   Context: Alert.alert('Demo Info'

   Line 97: "Demo Info"
   Context: Alert.alert('Demo Info'

   Line 97: "Demo Info"
   Context: Alert.alert('Demo Info'

   Line 97: "Demo Info"
   Context: Alert.alert('Demo Info'

   Line 55: "MFA Support"
   Context: 'MFA Support'

   Line 55: "Social Login"
   Context: 'Social Login'

   Line 55: "Account Lockout"
   Context: 'Account Lockout'

   Line 55: "Remember Me"
   Context: 'Remember Me'

   Line 62: "TOTP Setup"
   Context: 'TOTP Setup'

   Line 62: "QR Codes"
   Context: 'QR Codes'

   Line 62: "Backup Codes"
   Context: 'Backup Codes'

   Line 62: "SMS Option"
   Context: 'SMS Option'

   Line 69: "Profile Editing"
   Context: 'Profile Editing'

   Line 69: "Security Settings"
   Context: 'Security Settings'

   Line 69: "Privacy Controls"
   Context: 'Privacy Controls'

   Line 69: "Activity Logs"
   Context: 'Activity Logs'

   Line 76: "Email Verification"
   Context: 'Email Verification'

   Line 76: "Security Questions"
   Context: 'Security Questions'

   Line 76: "Admin Reset"
   Context: 'Admin Reset'

   Line 76: "Progress Tracking"
   Context: 'Progress Tracking'

   Line 82: "Invite teachers and parents with bulk support"
   Context: 'Invite teachers and parents with bulk support'

   Line 83: "Individual Invites"
   Context: 'Individual Invites'

   Line 83: "Bulk CSV"
   Context: 'Bulk CSV'

   Line 83: "Status Tracking"
   Context: 'Status Tracking'

   Line 97: "Demo Info"
   Context: 'Demo Info'

   Line 100: "Demo Tip"
   Context: 'Demo Tip'

   Line 97: "Demo Info"
   Context: 'Demo Info'

   Line 97: "Demo Info"
   Context: 'Demo Info'

   Line 97: "Demo Info"
   Context: 'Demo Info'

   Line 97: "Demo Info"
   Context: 'Demo Info'

   Line 97: "Demo Info"
   Context: 'Demo Info'

üìÑ app/biometric-test.tsx:
   Line 39: "Error loading debug info:"
   Context: {
      console.error('Error loading debug info:', error);
    }

   Line 44: "Test biometric authentication"
   Context: {
    setLoading(true);
    try {
      const result = await BiometricAuthService.authenticate('Test biometric authentication');
      Alert.alert(
        'Test Result',
        result.success ? 'Authentication successful!' : `Authentication failed: ${result.error}

   Line 53: "Test Error"
   Context: {
      Alert.alert('Test Error', `Error during test: ${error}

   Line 59: "Tests Complete"
   Context: {
    setLoading(true);
    try {
      const results = await BiometricDebugger.testAuthentication();
      setTestResults(results);
      Alert.alert('Tests Complete', 'Check the results below', [{ text: 'OK' }

   Line 65: "Test Error"
   Context: {
      Alert.alert('Test Error', `Error during comprehensive tests: ${error}

   Line 71: "Biometric Debug Report"
   Context: {
    try {
      const report = await BiometricDebugger.generateReport();
      await Share.share({
        message: report,
        title: 'Biometric Debug Report',
      }

   Line 78: "Share Error"
   Context: {
      Alert.alert('Share Error', `Could not share report: ${error}

   Line 89: "Available & Enrolled"
   Context: {
    if (available && enrolled) return 'Available & Enrolled';
    if (available && !enrolled) return 'Available but Not Enrolled';
    return 'Not Available';
  }

   Line 98: "Biometric Test"
   Context: {{
          title: 'Biometric Test',
          headerShown: true,
        }

   Line 26: "Translation hook loaded:"
   Context: console.log('Translation hook loaded:'

   Line 40: "Error loading debug info:"
   Context: console.error('Error loading debug info:'

   Line 48: "Test Result"
   Context: Alert.alert(
        'Test Result'

   Line 54: "Test Error"
   Context: Alert.alert('Test Error'

   Line 64: "Tests Complete"
   Context: Alert.alert('Tests Complete'

   Line 54: "Test Error"
   Context: Alert.alert('Test Error'

   Line 79: "Share Error"
   Context: Alert.alert('Share Error'

   Line 47: "Test biometric authentication"
   Context: 'Test biometric authentication'

   Line 49: "Test Result"
   Context: 'Test Result'

   Line 54: "Test Error"
   Context: 'Test Error'

   Line 64: "Tests Complete"
   Context: 'Tests Complete'

   Line 64: "Check the results below"
   Context: 'Check the results below'

   Line 54: "Test Error"
   Context: 'Test Error'

   Line 76: "Biometric Debug Report"
   Context: 'Biometric Debug Report'

   Line 79: "Share Error"
   Context: 'Share Error'

   Line 91: "Available but Not Enrolled"
   Context: 'Available but Not Enrolled'

   Line 92: "Not Available"
   Context: 'Not Available'

   Line 99: "Biometric Test"
   Context: 'Biometric Test'

   Line 92: "Not Available"
   Context: 'Not Available'

üìÑ app/debug-user.tsx:
   Line 32: "Debug data loading failed:"
   Context: {
      console.error('Debug data loading failed:', error);
    }

   Line 42: "Test routing failed:"
   Context: {
      console.error('Test routing failed:', error);
    }

   Line 50: "Debug User Info"
   Context: {{ title: 'Debug User Info' }

   Line 58: "Debug User Info"
   Context: {{ title: 'Debug User Info', headerShown: true }

   Line 85: "access_mobile_app"
   Context: {enhancedProfile.hasCapability('access_mobile_app') ? 'Yes' : 'No'}

   Line 33: "Debug data loading failed:"
   Context: console.error('Debug data loading failed:'

   Line 43: "Test routing failed:"
   Context: console.error('Test routing failed:'

   Line 50: "Debug User Info"
   Context: 'Debug User Info'

   Line 50: "Debug User Info"
   Context: 'Debug User Info'

üìÑ app/demo-index.tsx:
   Line 21: "admin-dashboard"
   Context: {
      id: 'admin-dashboard',
      title: 'üéõÔ∏è Admin Dashboard',
      description: 'Real-time user management, invitations, and security monitoring',
      features: ['Live User Management', 'Invitation Tracking', 'Security Activity', 'Real-time Updates'],
      color: theme.primary,
      status: '100% Complete',
      url: '/admin-dashboard'
    }

   Line 30: "auth-demo"
   Context: {
      id: 'auth-demo',
      title: 'üîê Authentication Demo',
      description: 'Interactive showcase of all 5 authentication components',
      features: ['Sign-In Flow', 'Two-Factor Auth', 'User Profile', 'Password Recovery', 'Invitations'],
      color: theme.secondary,
      status: '100% Complete',
      url: '/auth-demo'
    }

   Line 42: "Enhanced Sign-In Screen"
   Context: { name: 'Enhanced Sign-In Screen', status: '‚úÖ', details: '776 lines - MFA, social login, account lockout' }

   Line 43: "Two-Factor Authentication"
   Context: { name: 'Two-Factor Authentication', status: '‚úÖ', details: '975 lines - QR codes, backup codes, SMS' }

   Line 44: "User Profile Management"
   Context: { name: 'User Profile Management', status: '‚úÖ', details: '1,301 lines - Security settings, activity logs' }

   Line 45: "Password Recovery Flow"
   Context: { name: 'Password Recovery Flow', status: '‚úÖ', details: '1,077 lines - Multi-step verification' }

   Line 46: "Invitation Management"
   Context: { name: 'Invitation Management', status: '‚úÖ', details: '1,000 lines - Bulk CSV, role-specific fields' }

   Line 47: "Admin Dashboard"
   Context: { name: 'Admin Dashboard', status: '‚úÖ', details: '716 lines - Real-time management interface' }

   Line 378: "ios"
   Context: {
    fontSize: 12,
    fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace',
  }

   Line 25: "Live User Management"
   Context: 'Live User Management'

   Line 25: "Invitation Tracking"
   Context: 'Invitation Tracking'

   Line 25: "Security Activity"
   Context: 'Security Activity'

   Line 34: "User Profile"
   Context: 'User Profile'

   Line 34: "Password Recovery"
   Context: 'Password Recovery'

   Line 44: "User Profile Management"
   Context: 'User Profile Management'

   Line 45: "Password Recovery Flow"
   Context: 'Password Recovery Flow'

   Line 46: "Invitation Management"
   Context: 'Invitation Management'

   Line 47: "Admin Dashboard"
   Context: 'Admin Dashboard'

   Line 54: "Mobile Responsive"
   Context: 'Mobile Responsive'

   Line 54: "Theme Support"
   Context: 'Theme Support'

üìÑ app/index.tsx:
   Line 249: "principal_admin"
   Context: {(roleNorm === 'principal_admin' || roleNorm === 'super_admin') ? 'Contact Sales' : 'See Pricing'}

   Line 347: "How does the Quantum AI Brain work?"
   Context: {
  const [selectedQuestion, setSelectedQuestion] = useState<number | null>(null);
  const qaData = [
    { question: 'How does the Quantum AI Brain work?', answer: 'Server-side AI with strict privacy and compliance.' }

   Line 351: "Is the Neural Interface safe for children?"
   Context: { question: 'Is the Neural Interface safe for children?', answer: 'Yes ‚Äî child safety and privacy first.' }

   Line 134: "Initializing Neural Network..."
   Context: message="Initializing Neural Network..."

   Line 219: "AI Neurons"
   Context: label="AI Neurons"

   Line 219: "AI Neurons"
   Context: "AI Neurons"

   Line 249: "Contact Sales"
   Context: 'Contact Sales'

   Line 249: "See Pricing"
   Context: 'See Pricing'

üìÑ app/landing.tsx:
   Line 75: "error"
   Context: {
            setStatus('error');
            setMessage(e?.message || 'Email verification failed.');
            // Still try to open the app so the user can continue there
            if (isWeb) tryOpenApp(`/post-verify-error`);
            return;
          }

   Line 119: "error"
   Context: {
        setStatus('error');
        setMessage(e?.message || 'Something went wrong.');
      }

üìÑ app/marketing/_layout.tsx:
   Line 20: "EduDash Pro Pricing"
   Context: {{ 
          title: 'EduDash Pro Pricing',
          headerShown: false 
        }

   Line 27: "EduDash Pro Features"
   Context: {{ 
          title: 'EduDash Pro Features',
          headerShown: false 
        }

   Line 34: "Contact Sales"
   Context: {{ 
          title: 'Contact Sales',
          headerShown: false 
        }

   Line 41: "Request Demo"
   Context: {{ 
          title: 'Request Demo',
          headerShown: false 
        }

   Line 21: "EduDash Pro Pricing"
   Context: 'EduDash Pro Pricing'

   Line 28: "EduDash Pro Features"
   Context: 'EduDash Pro Features'

   Line 35: "Contact Sales"
   Context: 'Contact Sales'

   Line 42: "Request Demo"
   Context: 'Request Demo'

üìÑ app/marketing/pricing.tsx:
   Line 100: "Failed to load pricing plans:"
   Context: {
      console.error('Failed to load pricing plans:', err);
      setError(t('pricing.load_error', { defaultValue: 'Unable to load pricing information. Please try again later.' }

   Line 138: "Contact Sales"
   Context: { defaultValue: 'Contact Sales' }

   Line 138: "Start Free"
   Context: { defaultValue: 'Start Free' }

   Line 144: "Perfect for small preschools getting started"
   Context: {
    const tierLower = tier.toLowerCase();
    const configs: Record<string, any> = {
      free: {
        description: 'Perfect for small preschools getting started',
        descriptionKey: 'pricing.tier.free.desc',
        defaultFeatures: ['Basic dashboard', 'Student management', 'Parent communication'],
        recommended: false,
        color: ['#00f5ff', '#0080ff'],
      }

   Line 154: "Essential features for growing schools"
   Context: {
        description: 'Essential features for growing schools',
        descriptionKey: 'pricing.tier.starter.desc',
        defaultFeatures: ['Advanced dashboard', 'AI-powered insights', 'Priority support'],
        recommended: true,
        color: ['#8000ff', '#ff0080'],
      }

   Line 161: "Comprehensive tools for active schools"
   Context: {
        description: 'Comprehensive tools for active schools',
        descriptionKey: 'pricing.tier.basic.desc',
        defaultFeatures: ['Full feature set', 'Advanced analytics', 'Multi-teacher support'],
        recommended: false,
        color: ['#00f5ff', '#8000ff'],
      }

   Line 168: "Professional features for established schools"
   Context: {
        description: 'Professional features for established schools',
        descriptionKey: 'pricing.tier.premium.desc',
        defaultFeatures: ['Premium features', 'Advanced reporting', 'Priority support'],
        recommended: false,
        color: ['#ff0080', '#8000ff'],
      }

   Line 175: "Advanced solution for large schools"
   Context: {
        description: 'Advanced solution for large schools',
        descriptionKey: 'pricing.tier.pro.desc',
        defaultFeatures: ['All features', 'Custom integrations', 'Dedicated support'],
        recommended: false,
        color: ['#ff8000', '#ff0080'],
      }

   Line 182: "Complete solution for large organizations"
   Context: {
        description: 'Complete solution for large organizations',
        descriptionKey: 'pricing.tier.enterprise.desc',
        defaultFeatures: ['Unlimited features', 'Custom integrations', 'Dedicated success manager'],
        recommended: false,
        color: ['#ff8000', '#ff0080'],
      }

   Line 204: "pricing.loading"
   Context: {t('pricing.loading', { defaultValue: 'Loading pricing plans...' }

   Line 218: "pricing.unable_title"
   Context: {t('pricing.unable_title', { defaultValue: 'Unable to Load Pricing' }

   Line 221: "common.try_again"
   Context: {t('common.try_again', { defaultValue: 'Try Again' }

   Line 309: "marketing.pricing.back_to_home"
   Context: {t('marketing.pricing.back_to_home', { defaultValue: 'Back to Home' }

   Line 323: "auth.signIn"
   Context: {t('auth.signIn', { defaultValue: 'Sign In' }

   Line 333: "pricing.choose_your_plan"
   Context: {t('pricing.choose_your_plan', { defaultValue: 'Choose Your Plan' }

   Line 335: "pricing.subtitle_marketing"
   Context: {t('pricing.subtitle_marketing', { defaultValue: 'Flexible pricing for schools of all sizes. Start free and scale as you grow.' }

   Line 349: "pricing.monthly"
   Context: {t('pricing.monthly', { defaultValue: 'Monthly' }

   Line 355: "pricing.annual"
   Context: {t('pricing.annual', { defaultValue: 'Annual' }

   Line 356: "pricing.save_percent"
   Context: {t('pricing.save_percent', { defaultValue: 'Save 10%' }

   Line 382: "pricing.most_popular"
   Context: {t('pricing.most_popular', { defaultValue: 'Most Popular' }

   Line 444: "pricing.need_custom"
   Context: {t('pricing.need_custom', { defaultValue: 'Need Something Custom?' }

   Line 446: "pricing.enterprise_subtitle"
   Context: {t('pricing.enterprise_subtitle', { defaultValue: 'Our enterprise solutions are designed for large school districts, government education departments, and multi-national education providers.' }

   Line 449: "pricing.enterprise.features.multi_tenant"
   Context: {t('pricing.enterprise.features.multi_tenant', { defaultValue: 'Multi-tenant architecture' }

   Line 450: "pricing.enterprise.features.advanced_security"
   Context: {t('pricing.enterprise.features.advanced_security', { defaultValue: 'Advanced security & compliance' }

   Line 451: "pricing.enterprise.features.custom_integrations"
   Context: {t('pricing.enterprise.features.custom_integrations', { defaultValue: 'Custom integrations & APIs' }

   Line 452: "pricing.enterprise.features.dedicated_support"
   Context: {t('pricing.enterprise.features.dedicated_support', { defaultValue: 'Dedicated support team' }

   Line 459: "pricing.schedule_enterprise_demo"
   Context: {t('pricing.schedule_enterprise_demo', { defaultValue: 'Schedule Enterprise Demo' }

   Line 471: "pricing.faq_title"
   Context: {t('pricing.faq_title', { defaultValue: 'Frequently Asked Questions' }

   Line 474: "pricing.faq.q1"
   Context: {t('pricing.faq.q1', { defaultValue: 'Can I upgrade or downgrade my plan anytime?' }

   Line 475: "pricing.faq.a1"
   Context: {t('pricing.faq.a1', { defaultValue: 'Yes! You can change your plan at any time. Upgrades take effect immediately, and downgrades take effect at the start of your next billing cycle.' }

   Line 478: "pricing.faq.q2"
   Context: {t('pricing.faq.q2', { defaultValue: 'Is there a setup fee?' }

   Line 479: "pricing.faq.a2"
   Context: {t('pricing.faq.a2', { defaultValue: 'No setup fees for Starter and Professional plans. Enterprise plans may include implementation services.' }

   Line 482: "pricing.faq.q3"
   Context: {t('pricing.faq.q3', { defaultValue: 'What payment methods do you accept?' }

   Line 483: "pricing.faq.a3"
   Context: {t('pricing.faq.a3', { defaultValue: 'We accept all major credit cards, PayFast, and bank transfers for South African customers.' }

   Line 101: "Failed to load pricing plans:"
   Context: console.error('Failed to load pricing plans:'

   Line 138: "Contact Sales"
   Context: 'Contact Sales'

   Line 138: "Start Free"
   Context: 'Start Free'

   Line 148: "Perfect for small preschools getting started"
   Context: 'Perfect for small preschools getting started'

   Line 150: "Basic dashboard"
   Context: 'Basic dashboard'

   Line 150: "Student management"
   Context: 'Student management'

   Line 150: "Parent communication"
   Context: 'Parent communication'

   Line 155: "Essential features for growing schools"
   Context: 'Essential features for growing schools'

   Line 157: "Advanced dashboard"
   Context: 'Advanced dashboard'

   Line 157: "Priority support"
   Context: 'Priority support'

   Line 162: "Comprehensive tools for active schools"
   Context: 'Comprehensive tools for active schools'

   Line 164: "Full feature set"
   Context: 'Full feature set'

   Line 164: "Advanced analytics"
   Context: 'Advanced analytics'

   Line 169: "Professional features for established schools"
   Context: 'Professional features for established schools'

   Line 171: "Premium features"
   Context: 'Premium features'

   Line 171: "Advanced reporting"
   Context: 'Advanced reporting'

   Line 157: "Priority support"
   Context: 'Priority support'

   Line 176: "Advanced solution for large schools"
   Context: 'Advanced solution for large schools'

   Line 178: "All features"
   Context: 'All features'

   Line 178: "Custom integrations"
   Context: 'Custom integrations'

   Line 178: "Dedicated support"
   Context: 'Dedicated support'

   Line 183: "Complete solution for large organizations"
   Context: 'Complete solution for large organizations'

   Line 185: "Unlimited features"
   Context: 'Unlimited features'

   Line 178: "Custom integrations"
   Context: 'Custom integrations'

   Line 185: "Dedicated success manager"
   Context: 'Dedicated success manager'

   Line 218: "Unable to Load Pricing"
   Context: 'Unable to Load Pricing'

   Line 221: "Try Again"
   Context: 'Try Again'

   Line 309: "Back to Home"
   Context: 'Back to Home'

   Line 323: "Sign In"
   Context: 'Sign In'

   Line 333: "Choose Your Plan"
   Context: 'Choose Your Plan'

   Line 382: "Most Popular"
   Context: 'Most Popular'

   Line 452: "Dedicated support team"
   Context: 'Dedicated support team'

   Line 459: "Schedule Enterprise Demo"
   Context: 'Schedule Enterprise Demo'

   Line 471: "Frequently Asked Questions"
   Context: 'Frequently Asked Questions'

üìÑ app/premium-feature-modal.tsx:
   Line 21: "Premium Feature"
   Context: {params.featureName || 'Premium Feature'}

   Line 22: "This feature requires a premium subscription."
   Context: {params.description || 'This feature requires a premium subscription.'}

   Line 21: "Premium Feature"
   Context: 'Premium Feature'

üìÑ app/pricing.tsx:
   Line 37: "free"
   Context: {
      key: 'free',
      render: () => (
        <PlanCard
          name="Free"
          price={priceStr(0)}

   Line 44: "Mobile app access"
   Context: {[
            'Mobile app access',
            'Homework Helper (limited)',
            'Lesson generator (limited)',
            'Community support',
          ]}

   Line 50: "pricing.cta.start_free"
   Context: {t('pricing.cta.start_free', { defaultValue: 'Start Free' }

   Line 55: "parent-starter"
   Context: {
      key: 'parent-starter',
      render: () => (
        <PlanCard
          name="Parent Starter"
          price={priceStr(49)}

   Line 62: "Homework Helper ¬∑ 30/mo"
   Context: {[
            'Homework Helper ¬∑ 30/mo',
            'Child-safe explanations',
            'Email support',
          ]}

   Line 67: "pricing.cta.choose_named"
   Context: {t('pricing.cta.choose_named', { defaultValue: 'Choose Parent Starter', name: 'Parent Starter' }

   Line 72: "parent-plus"
   Context: {
      key: 'parent-plus',
      render: () => (
        <PlanCard
          name="Parent Plus"
          price={priceStr(149)}

   Line 79: "Homework Helper ¬∑ 100/mo"
   Context: {[
            'Homework Helper ¬∑ 100/mo',
            'Priority processing',
            'Basic analytics',
          ]}

   Line 84: "pricing.cta.choose_named"
   Context: {t('pricing.cta.choose_named', { defaultValue: 'Choose Parent Plus', name: 'Parent Plus' }

   Line 89: "private-teacher"
   Context: {
      key: 'private-teacher',
      render: () => (
        <PlanCard
          name="Private Teacher"
          price={priceStr(299)}

   Line 96: "Lesson Generator ¬∑ 20/mo"
   Context: {[
            'Lesson Generator ¬∑ 20/mo',
            'Grading Assistance ¬∑ 20/mo',
            'Homework Helper ¬∑ 100/mo',
          ]}

   Line 101: "pricing.cta.choose_named"
   Context: {t('pricing.cta.choose_named', { defaultValue: 'Choose Private Teacher', name: 'Private Teacher' }

   Line 106: "pro"
   Context: {
      key: 'pro',
      render: () => (
        <PlanCard
          name="Pro"
          price={priceStr(599)}

   Line 113: "Most popular"
   Context: {['Most popular']}

   Line 114: "All Free features"
   Context: {[
            'All Free features',
            'AI Homework Helper increased limits',
            'AI Lesson Generator increased limits',
            'AI Grading Assistance increased limits',
            'Model selection (Haiku/Sonnet/Opus)',
            'Priority support',
          ]}

   Line 122: "subscription.upgradeToPro"
   Context: {t('subscription.upgradeToPro', { defaultValue: 'Upgrade to Pro' }

   Line 131: "pricing.title"
   Context: {{ title: t('pricing.title', { defaultValue: 'Pricing' }

   Line 138: "pricing.free_ribbon"
   Context: {t('pricing.free_ribbon', { defaultValue: 'You are on the Free plan' }

   Line 140: "common.upgrade"
   Context: {t('common.upgrade', { defaultValue: 'Upgrade' }

   Line 144: "pricing.plans_title"
   Context: {t('pricing.plans_title', { defaultValue: 'Plans & Pricing' }

   Line 145: "pricing.subtitle_app"
   Context: {t('pricing.subtitle_app', { defaultValue: 'Flexible options for individuals, preschools and schools. AI usage includes monthly quotas. Overages require prepayment.' }

   Line 150: "pricing.monthly"
   Context: {t('pricing.monthly', { defaultValue: 'Monthly' }

   Line 153: "pricing.annual"
   Context: {t('pricing.annual', { defaultValue: 'Annual' }

   Line 193: "Mobile app access"
   Context: {[
                'Mobile app access',
                'Homework Helper (limited)',
                'Lesson generator (limited)',
                'Community support',
              ]}

   Line 207: "Homework Helper ¬∑ 30/mo"
   Context: {[
                'Homework Helper ¬∑ 30/mo',
                'Child-safe explanations',
                'Email support',
              ]}

   Line 220: "Homework Helper ¬∑ 100/mo"
   Context: {[
                'Homework Helper ¬∑ 100/mo',
                'Priority processing',
                'Basic analytics',
              ]}

   Line 233: "Lesson Generator ¬∑ 20/mo"
   Context: {[
                'Lesson Generator ¬∑ 20/mo',
                'Grading Assistance ¬∑ 20/mo',
                'Homework Helper ¬∑ 100/mo',
              ]}

   Line 113: "Most popular"
   Context: {['Most popular']}

   Line 247: "All Free features"
   Context: {[
                'All Free features',
                'AI Homework Helper increased limits',
                'AI Lesson Generator increased limits',
                'AI Grading Assistance increased limits',
                'Model selection (Haiku/Sonnet/Opus)',
                'Priority support',
              ]}

   Line 259: "Preschool Pro"
   Context: {canRequestEnterprise && (
              <PlanCard
                name="Preschool Pro"
                price={annual ? 'Custom (annual)' : 'Custom'}

   Line 264: "Org allocation available"
   Context: {['Org allocation available']}

   Line 265: "All Pro features"
   Context: {[
                'All Pro features',
                'Org-level AI usage allocation',
                'Seat-based licensing',
                'Admin controls',
              ]}

   Line 272: "Contact sales"
   Context: {canRequestEnterprise ? 'Contact sales' : 'Admin only'}

   Line 273: "common.restricted"
   Context: {() => {
                if (!canRequestEnterprise) {
                  Alert.alert(t('common.restricted', { defaultValue: 'Restricted' }

   Line 275: "Only principals or school admins can request Preschool Pro."
   Context: { defaultValue: 'Only principals or school admins can request Preschool Pro.' }

   Line 283: "Enterprise (K-12)"
   Context: {canRequestEnterprise && (
              <PlanCard
                name="Enterprise (K-12)"
                price={annual ? 'Special pricing (annual)' : 'Special pricing'}

   Line 288: "Best for schools"
   Context: {['Best for schools']}

   Line 289: "All Pro features"
   Context: {[
                'All Pro features',
                'Enterprise-grade security',
                'Unlimited or pooled AI usage (as contracted)',
                'Org-level AI usage allocation',
                'SSO, advanced analytics',
                'Dedicated support',
              ]}

   Line 272: "Contact sales"
   Context: {canRequestEnterprise ? 'Contact sales' : 'Admin only'}

   Line 273: "common.restricted"
   Context: {() => {
                if (!canRequestEnterprise) {
                  Alert.alert(t('common.restricted', { defaultValue: 'Restricted' }

   Line 301: "Only principals or school admins can request Enterprise."
   Context: { defaultValue: 'Only principals or school admins can request Enterprise.' }

   Line 312: "pricing.notes.title"
   Context: {t('pricing.notes.title', { defaultValue: 'Notes' }

   Line 313: "pricing.notes.quota"
   Context: {t('pricing.notes.quota', { defaultValue: 'AI quotas are monthly and reset at the start of each month.' }

   Line 314: "pricing.notes.overages"
   Context: {t('pricing.notes.overages', { defaultValue: 'Overages require prepayment; once paid, access resumes immediately.' }

   Line 315: "pricing.notes.model_selection"
   Context: {t('pricing.notes.model_selection', { defaultValue: 'Model selection affects cost; Opus > Sonnet > Haiku. We recommend Haiku for most classroom use.' }

   Line 316: "pricing.notes.enterprise_contact"
   Context: {t('pricing.notes.enterprise_contact', { defaultValue: 'For K-12 Enterprise pricing, contact sales. We tailor seat counts and AI usage pools to your school size and needs.' }

   Line 323: "preschool-pro"
   Context: {(planId) => {
              if (planId === 'preschool-pro' || planId === 'enterprise') {
                if (!canRequestEnterprise) {
                  Alert.alert(t('common.restricted', { defaultValue: 'Restricted' }

   Line 326: "Only principals or school admins can submit these requests."
   Context: { defaultValue: 'Only principals or school admins can submit these requests.' }

   Line 43: "Get started with basics"
   Context: description="Get started with basics"

   Line 59: "Parent Starter"
   Context: name="Parent Starter"

   Line 61: "Affordable AI help for families"
   Context: description="Affordable AI help for families"

   Line 76: "Parent Plus"
   Context: name="Parent Plus"

   Line 78: "Expanded AI support for families"
   Context: description="Expanded AI support for families"

   Line 93: "Private Teacher"
   Context: name="Private Teacher"

   Line 95: "For tutors and private teachers"
   Context: description="For tutors and private teachers"

   Line 112: "For individual teachers"
   Context: description="For individual teachers"

   Line 43: "Get started with basics"
   Context: description="Get started with basics"

   Line 199: "Start free"
   Context: ctaText="Start free"

   Line 59: "Parent Starter"
   Context: name="Parent Starter"

   Line 61: "Affordable AI help for families"
   Context: description="Affordable AI help for families"

   Line 212: "Choose Parent Starter"
   Context: ctaText="Choose Parent Starter"

   Line 76: "Parent Plus"
   Context: name="Parent Plus"

   Line 78: "Expanded AI support for families"
   Context: description="Expanded AI support for families"

   Line 225: "Choose Parent Plus"
   Context: ctaText="Choose Parent Plus"

   Line 93: "Private Teacher"
   Context: name="Private Teacher"

   Line 95: "For tutors and private teachers"
   Context: description="For tutors and private teachers"

   Line 238: "Choose Private Teacher"
   Context: ctaText="Choose Private Teacher"

   Line 112: "For individual teachers"
   Context: description="For individual teachers"

   Line 255: "Upgrade to Pro"
   Context: ctaText="Upgrade to Pro"

   Line 261: "Preschool Pro"
   Context: name="Preschool Pro"

   Line 263: "For preschools"
   Context: description="For preschools"

   Line 271: "Org allocation available on Pro (R599) and up for preschools"
   Context: footnote="Org allocation available on Pro (R599) and up for preschools"

   Line 285: "Enterprise (K-12)"
   Context: name="Enterprise (K-12)"

   Line 287: "For K-12 schools and districts"
   Context: description="For K-12 schools and districts"

   Line 297: "Org allocation available only on Enterprise for K-12"
   Context: footnote="Org allocation available only on Enterprise for K-12"

   Line 43: "Get started with basics"
   Context: "Get started with basics"

   Line 45: "Mobile app access"
   Context: 'Mobile app access'

   Line 48: "Community support"
   Context: 'Community support'

   Line 50: "Start Free"
   Context: 'Start Free'

   Line 59: "Parent Starter"
   Context: "Parent Starter"

   Line 61: "Affordable AI help for families"
   Context: "Affordable AI help for families"

   Line 65: "Email support"
   Context: 'Email support'

   Line 67: "Choose Parent Starter"
   Context: 'Choose Parent Starter'

   Line 67: "Parent Starter"
   Context: 'Parent Starter'

   Line 76: "Parent Plus"
   Context: "Parent Plus"

   Line 78: "Expanded AI support for families"
   Context: "Expanded AI support for families"

   Line 81: "Priority processing"
   Context: 'Priority processing'

   Line 82: "Basic analytics"
   Context: 'Basic analytics'

   Line 84: "Choose Parent Plus"
   Context: 'Choose Parent Plus'

   Line 84: "Parent Plus"
   Context: 'Parent Plus'

   Line 93: "Private Teacher"
   Context: "Private Teacher"

   Line 95: "For tutors and private teachers"
   Context: "For tutors and private teachers"

   Line 101: "Choose Private Teacher"
   Context: 'Choose Private Teacher'

   Line 101: "Private Teacher"
   Context: 'Private Teacher'

   Line 112: "For individual teachers"
   Context: "For individual teachers"

   Line 113: "Most popular"
   Context: 'Most popular'

   Line 115: "All Free features"
   Context: 'All Free features'

   Line 116: "AI Homework Helper increased limits"
   Context: 'AI Homework Helper increased limits'

   Line 117: "AI Lesson Generator increased limits"
   Context: 'AI Lesson Generator increased limits'

   Line 118: "AI Grading Assistance increased limits"
   Context: 'AI Grading Assistance increased limits'

   Line 120: "Priority support"
   Context: 'Priority support'

   Line 122: "Upgrade to Pro"
   Context: 'Upgrade to Pro'

   Line 138: "You are on the Free plan"
   Context: 'You are on the Free plan'

   Line 43: "Get started with basics"
   Context: "Get started with basics"

   Line 45: "Mobile app access"
   Context: 'Mobile app access'

   Line 48: "Community support"
   Context: 'Community support'

   Line 199: "Start free"
   Context: "Start free"

   Line 59: "Parent Starter"
   Context: "Parent Starter"

   Line 61: "Affordable AI help for families"
   Context: "Affordable AI help for families"

   Line 65: "Email support"
   Context: 'Email support'

   Line 212: "Choose Parent Starter"
   Context: "Choose Parent Starter"

   Line 76: "Parent Plus"
   Context: "Parent Plus"

   Line 78: "Expanded AI support for families"
   Context: "Expanded AI support for families"

   Line 81: "Priority processing"
   Context: 'Priority processing'

   Line 82: "Basic analytics"
   Context: 'Basic analytics'

   Line 225: "Choose Parent Plus"
   Context: "Choose Parent Plus"

   Line 93: "Private Teacher"
   Context: "Private Teacher"

   Line 95: "For tutors and private teachers"
   Context: "For tutors and private teachers"

   Line 238: "Choose Private Teacher"
   Context: "Choose Private Teacher"

   Line 112: "For individual teachers"
   Context: "For individual teachers"

   Line 113: "Most popular"
   Context: 'Most popular'

   Line 115: "All Free features"
   Context: 'All Free features'

   Line 116: "AI Homework Helper increased limits"
   Context: 'AI Homework Helper increased limits'

   Line 117: "AI Lesson Generator increased limits"
   Context: 'AI Lesson Generator increased limits'

   Line 118: "AI Grading Assistance increased limits"
   Context: 'AI Grading Assistance increased limits'

   Line 120: "Priority support"
   Context: 'Priority support'

   Line 255: "Upgrade to Pro"
   Context: "Upgrade to Pro"

   Line 261: "Preschool Pro"
   Context: "Preschool Pro"

   Line 263: "For preschools"
   Context: "For preschools"

   Line 264: "Org allocation available"
   Context: 'Org allocation available'

   Line 266: "All Pro features"
   Context: 'All Pro features'

   Line 269: "Admin controls"
   Context: 'Admin controls'

   Line 272: "Contact sales"
   Context: 'Contact sales'

   Line 272: "Admin only"
   Context: 'Admin only'

   Line 286: "Special pricing"
   Context: 'Special pricing'

   Line 288: "Best for schools"
   Context: 'Best for schools'

   Line 266: "All Pro features"
   Context: 'All Pro features'

   Line 295: "Dedicated support"
   Context: 'Dedicated support'

   Line 272: "Contact sales"
   Context: 'Contact sales'

   Line 272: "Admin only"
   Context: 'Admin only'

üìÑ app/profiles-gate.tsx:
   Line 24: "parent"
   Context: {
    value: 'parent' as Role,
    label: 'Parent',
    description: 'Access your child\'s learning journey',
    icon: 'people',
  }

   Line 30: "teacher"
   Context: {
    value: 'teacher' as Role,
    label: 'Teacher',
    description: 'Manage your classroom and students',
    icon: 'school',
  }

   Line 36: "principal_admin"
   Context: {
    value: 'principal_admin' as Role,
    label: 'Principal/Administrator',
    description: 'Oversee school operations',
    icon: 'business',
  }

   Line 57: "Profiles-gate: No profile found, checking if existing user..."
   Context: {
    // Special case: If user came from biometric login and has no profile data,
    // they might be an existing user - try to detect their role
    const handleExistingUser = async () => {
      if (!profile && user) {
        console.log('Profiles-gate: No profile found, checking if existing user...');
        try {
          // Try to detect user role from legacy methods
          const { detectRoleAndSchool }

   Line 68: "Profiles-gate: Found existing user role:"
   Context: {
            console.log('Profiles-gate: Found existing user role:', role);
            navigationInProgressRef.current = true;
            // Route based on detected role
            const routes = {
              'parent': '/screens/parent-dashboard',
              'teacher': '/screens/teacher-dashboard', 
              'principal_admin': '/screens/principal-dashboard',
              'super_admin': '/screens/super-admin-dashboard'
            }

   Line 82: "Error detecting existing user role:"
   Context: {
          console.error('Error detecting existing user role:', error);
        }

   Line 111: "Profile gate: Continuing with selected role:"
   Context: {
    if (!selectedRole || !user) return;

    setIsSubmitting(true);
    
    try {
      console.log('Profile gate: Continuing with selected role:', selectedRole);
      
      track('edudash.profile_gate.role_submitted', {
        user_id: user.id,
        submitted_role: selectedRole,
      }

   Line 136: "Failed to update user metadata:"
   Context: {
            console.error('Failed to update user metadata:', updateError);
          }

   Line 138: "Successfully updated user metadata with role:"
   Context: {
            console.log('Successfully updated user metadata with role:', selectedRole);
          }

   Line 143: "Error updating user metadata:"
   Context: {
        console.error('Error updating user metadata:', metadataError);
        // Continue anyway, as this is not critical for routing
      }

   Line 155: "Error fetching enhanced profile:"
   Context: {
        console.error('Error fetching enhanced profile:', profileError);
      }

   Line 160: "Profile gate: Using enhanced routing with profile:"
   Context: {
        console.log('Profile gate: Using enhanced routing with profile:', updatedProfile);
        await routeAfterLogin(user, updatedProfile);
        return;
      }

   Line 175: "Profile gate: Routing to:"
   Context: {
        console.log('Profile gate: Routing to:', targetRoute);
        navigationInProgressRef.current = true;
        router.replace(targetRoute as any);
        return;
      }

   Line 187: "Profile gate: Continue failed:"
   Context: {
      console.error('Profile gate: Continue failed:', error);
      reportError(new Error('Profile setup failed'), {
        userId: user.id,
        selectedRole,
        error,
      }

   Line 223: "Sign out failed:"
   Context: {
      console.error('Sign out failed:', error);
    }

   Line 245: "Account Access"
   Context: title="Account Access"

   Line 265: "Contact support for help"
   Context: accessibilityLabel="Contact support for help"

   Line 273: "Sign out"
   Context: accessibilityLabel="Sign out"

   Line 286: "Complete Your Profile"
   Context: title="Complete Your Profile"

   Line 352: "Continue with selected role"
   Context: accessibilityLabel="Continue with selected role"

   Line 273: "Sign out"
   Context: accessibilityLabel="Sign out"

   Line 62: "Profiles-gate: No profile found, checking if existing user..."
   Context: console.log('Profiles-gate: No profile found, checking if existing user...'

   Line 69: "Profiles-gate: Found existing user role:"
   Context: console.log('Profiles-gate: Found existing user role:'

   Line 83: "Error detecting existing user role:"
   Context: console.error('Error detecting existing user role:'

   Line 117: "Profile gate: Continuing with selected role:"
   Context: console.log('Profile gate: Continuing with selected role:'

   Line 137: "Failed to update user metadata:"
   Context: console.error('Failed to update user metadata:'

   Line 139: "Successfully updated user metadata with role:"
   Context: console.log('Successfully updated user metadata with role:'

   Line 144: "Error updating user metadata:"
   Context: console.error('Error updating user metadata:'

   Line 156: "Error fetching enhanced profile:"
   Context: console.error('Error fetching enhanced profile:'

   Line 161: "Profile gate: Using enhanced routing with profile:"
   Context: console.log('Profile gate: Using enhanced routing with profile:'

   Line 167: "Profile gate: Using fallback routing for role:"
   Context: console.log('Profile gate: Using fallback routing for role:'

   Line 176: "Profile gate: Routing to:"
   Context: console.log('Profile gate: Routing to:'

   Line 188: "Profile gate: Continue failed:"
   Context: console.error('Profile gate: Continue failed:'

   Line 195: "Setup Error"
   Context: Alert.alert(
        'Setup Error'

   Line 211: "Contact Support"
   Context: Alert.alert(
      'Contact Support'

   Line 224: "Sign out failed:"
   Context: console.error('Sign out failed:'

   Line 33: "Manage your classroom and students"
   Context: 'Manage your classroom and students'

   Line 39: "Oversee school operations"
   Context: 'Oversee school operations'

   Line 189: "Profile setup failed"
   Context: 'Profile setup failed'

   Line 196: "Setup Error"
   Context: 'Setup Error'

   Line 212: "Contact Support"
   Context: 'Contact Support'

   Line 245: "Account Access"
   Context: "Account Access"

   Line 265: "Contact support for help"
   Context: "Contact support for help"

   Line 273: "Sign out"
   Context: "Sign out"

   Line 286: "Complete Your Profile"
   Context: "Complete Your Profile"

   Line 352: "Continue with selected role"
   Context: "Continue with selected role"

   Line 273: "Sign out"
   Context: "Sign out"

   Line 189: "Profile setup failed"
   Context: new Error('Profile setup failed'

üìÑ app/sales/contact.tsx:
   Line 44: "sales.email_required"
   Context: {
    if (!form.contact_email) {
      Alert.alert(t('sales.email_required', { defaultValue: 'Email required' }

   Line 46: "Please provide a contact email."
   Context: { defaultValue: 'Please provide a contact email.' }

   Line 49: "sales.not_allowed_title"
   Context: {
      if (!canSubmit) {
        Alert.alert(t('sales.not_allowed_title', { defaultValue: 'Not allowed' }

   Line 51: "Only principals or school admins can submit enterprise requests."
   Context: { defaultValue: 'Only principals or school admins can submit enterprise requests.' }

   Line 67: "Thank you"
   Context: { defaultValue: 'Thank you' }

   Line 67: "Our team will contact you shortly."
   Context: { defaultValue: 'Our team will contact you shortly.' }

   Line 69: "sales.submission_failed"
   Context: {
      Alert.alert(t('sales.submission_failed', { defaultValue: 'Submission failed' }

   Line 70: "Try Again"
   Context: { defaultValue: 'Try Again' }

   Line 78: "sales.contact_sales"
   Context: {{
        title: t('sales.contact_sales', { defaultValue: 'Contact Sales' }

   Line 86: "navigation.back"
   Context: {t('navigation.back', { defaultValue: 'Back' }

   Line 94: "sales.talk_to_sales"
   Context: {t('sales.talk_to_sales', { defaultValue: 'Talk to Sales' }

   Line 95: "sales.subtitle"
   Context: {t('sales.subtitle', { defaultValue: 'Tell us about your school and needs. We‚Äôll follow up shortly.' }

   Line 99: "common.restricted"
   Context: {t('common.restricted', { defaultValue: 'Restricted' }

   Line 100: "sales.restricted_desc"
   Context: {t('sales.restricted_desc', { defaultValue: 'Only principals or school admins can submit enterprise contact requests.' }

   Line 102: "pricing.back_to_pricing"
   Context: {t('pricing.back_to_pricing', { defaultValue: 'Back to Pricing' }

   Line 107: "sales.label.name"
   Context: {t('sales.label.name', { defaultValue: 'Name' }

   Line 108: "auth.email"
   Context: {t('auth.email', { defaultValue: 'Email' }

   Line 109: "sales.label.phone"
   Context: {t('sales.label.phone', { defaultValue: 'Phone' }

   Line 110: "sales.label.organization"
   Context: {t('sales.label.organization', { defaultValue: 'Organization' }

   Line 111: "sales.label.country"
   Context: {t('sales.label.country', { defaultValue: 'Country' }

   Line 112: "sales.label.your_role"
   Context: {t('sales.label.your_role', { defaultValue: 'Your role' }

   Line 112: "sales.placeholder.role"
   Context: {t('sales.placeholder.role', { defaultValue: 'Principal / Admin / Teacher / Parent' }

   Line 113: "sales.label.school_size"
   Context: {t('sales.label.school_size', { defaultValue: 'School size' }

   Line 114: "sales.label.plan_interest"
   Context: {t('sales.label.plan_interest', { defaultValue: 'Plan interest' }

   Line 115: "sales.label.notes"
   Context: {t('sales.label.notes', { defaultValue: 'Notes' }

   Line 118: "common.submitting"
   Context: {submitting ? t('common.submitting', { defaultValue: 'Submitting‚Ä¶' }

   Line 46: "Email required"
   Context: 'Email required'

   Line 51: "Not allowed"
   Context: 'Not allowed'

   Line 67: "Thank you"
   Context: 'Thank you'

   Line 70: "Submission failed"
   Context: 'Submission failed'

   Line 70: "Try Again"
   Context: 'Try Again'

   Line 79: "Contact Sales"
   Context: 'Contact Sales'

   Line 94: "Talk to Sales"
   Context: 'Talk to Sales'

   Line 102: "Back to Pricing"
   Context: 'Back to Pricing'

   Line 112: "Your role"
   Context: 'Your role'

   Line 113: "School size"
   Context: 'School size'

   Line 114: "Plan interest"
   Context: 'Plan interest'

üìÑ app/screens/account-old.tsx:
   Line 115: "Error loading biometric info"
   Context: {
        console.error("Error loading biometric info");
        // Fallback to original method
        const [supported, enrolled, enabled] = await Promise.all([
          isHardwareAvailable(),
          isEnrolled(),
          getBiometricsEnabled(),
        ]);
        setBiometricSupported(supported);
        setBiometricEnrolled(enrolled);
        setBiometricEnabled(enabled);
      }

   Line 141: "Permission needed"
   Context: {
        Alert.alert(
          "Permission needed",
          "We need camera roll permissions to select a profile picture.",
        );
        return;
      }

   Line 169: "Permission needed"
   Context: {
        Alert.alert(
          "Permission needed",
          "We need camera permissions to take a photo.",
        );
        return;
      }

   Line 206: "file://"
   Context: {
        if (uri.startsWith('file://') && typeof window !== 'undefined') {
          // Web environment with file:// URI - this shouldn't happen but handle gracefully
          console.warn('File URI detected in web environment, cannot process:', uri);
          Alert.alert('Error', 'Image selection not supported in web environment');
          return;
        }

   Line 219: "Error fetching image:"
   Context: {
        console.error('Error fetching image:', fetchError);
        Alert.alert('Error', 'Failed to load selected image');
        return;
      }

   Line 237: "Storage upload failed:"
   Context: {
          console.warn("Storage upload failed:", uploadError);
          throw uploadError;
        }

   Line 248: "Storage upload failed, using local URI:"
   Context: {
        console.warn("Storage upload failed, using local URI:", storageError);
        // Fallback: just use the local URI for now
        publicUrl = uri;
      }

   Line 260: "Profile update error:"
   Context: {
        console.warn("Profile update error:", updateError);
        // Still update local state even if DB update fails
      }

   Line 268: "Upload error:"
   Context: {
      console.error("Upload error:", error);
      Alert.alert(
        "Error",
        "Failed to update profile picture. Please try again.",
      );
    }

   Line 279: "Update Profile Picture"
   Context: {
    Alert.alert(
      "Update Profile Picture",
      "Choose an option",
      [
        { text: "Take Photo", onPress: takePhoto }

   Line 285: "Choose from Library"
   Context: { text: "Choose from Library", onPress: pickImage }

   Line 292: "Biometric Setup Required"
   Context: {
    if (!biometricEnrolled) {
      Alert.alert(
        "Biometric Setup Required",
        "Please set up fingerprint or face recognition in your device settings first.",
        [{ text: "OK" }

   Line 311: "Biometric Login Disabled"
   Context: {
        // Disable biometric authentication
        await BiometricAuthService.disableBiometric();
        await setBiometricsEnabled(false);
        setBiometricEnabled(false);
        Alert.alert(
          "Biometric Login Disabled",
          "You will need to use your password to sign in.",
        );
      }

   Line 335: "Error toggling biometric:"
   Context: {
      console.error("Error toggling biometric:", error);
      Alert.alert("Error", "Failed to update biometric settings.");
    }

   Line 363: "Profile update error:"
   Context: {
        console.warn("Profile update error:", profileError);
        Alert.alert(
          "Warning",
          "Profile updated locally but failed to sync to database.",
        );
      }

   Line 377: "Error saving profile:"
   Context: {
      console.error("Error saving profile:", error);
      Alert.alert("Error", "Failed to save profile changes.");
    }

   Line 391: "Invalid PIN"
   Context: {
    if (!backupPin || backupPin.length < 4) {
      Alert.alert("Invalid PIN", "Please enter a PIN with at least 4 digits.");
      return;
    }

   Line 397: "PIN Mismatch"
   Context: {
      Alert.alert("PIN Mismatch", "Please make sure both PIN entries match.");
      return;
    }

   Line 433: "Error setting up backup methods:"
   Context: {
      console.error("Error setting up backup methods:", error);
      Alert.alert("Error", "Failed to set up backup authentication.");
    }

   Line 554: "Not set"
   Context: {email || "Not set"}

   Line 814: "Set Up Biometric Authentication"
   Context: {() =>
                  Alert.alert(
                    "Set Up Biometric Authentication",
                    "To use biometric login:\n\n1. Go to your device Settings\n2. Find Security or Biometrics\n3. Set up fingerprint or face recognition\n4. Come back here to enable biometric login",
                    [{ text: "OK" }

   Line 847: "Backup Methods"
   Context: {() => {
                  if (hasBackupMethods) {
                    Alert.alert(
                      "Backup Methods",
                      "You have backup authentication methods set up. You can test them or disable them.",
                      [
                        {
                          text: "Test Backup",
                          onPress: () =>
                            BiometricBackupManager.showFallbackOptions(),
                        }

   Line 858: "Disable Backup"
   Context: {
                          text: "Disable Backup",
                          onPress: async () => {
                            await BiometricBackupManager.disableBiometricBackup();
                            setHasBackupMethods(false);
                            Alert.alert("Success", "Backup methods disabled.");
                          }

   Line 886: "Backup methods configured"
   Context: {hasBackupMethods
                        ? "Backup methods configured"
                        : "Set up backup authentication methods"}

   Line 899: "Coming Soon"
   Context: {() =>
                Alert.alert(
                  "Coming Soon",
                  "Theme settings will be available in the next update.",
                )
              }

   Line 920: "Coming Soon"
   Context: {() =>
                Alert.alert(
                  "Coming Soon",
                  "Notification settings will be available in the next update.",
                )
              }

   Line 939: "Privacy & Security"
   Context: {() =>
                Alert.alert(
                  "Privacy & Security",
                  "Your data is encrypted and stored securely. Biometric data never leaves your device.",
                )
              }

   Line 996: "Enter your first name"
   Context: placeholder="Enter your first name"

   Line 1008: "Enter your last name"
   Context: placeholder="Enter your last name"

   Line 1064: "Enter backup PIN"
   Context: placeholder="Enter backup PIN"

   Line 1078: "Confirm backup PIN"
   Context: placeholder="Confirm backup PIN"

   Line 116: "Error loading biometric info"
   Context: console.error("Error loading biometric info"

   Line 142: "Permission needed"
   Context: Alert.alert(
          "Permission needed"

   Line 142: "Permission needed"
   Context: Alert.alert(
          "Permission needed"

   Line 209: "File URI detected in web environment, cannot process:"
   Context: console.warn('File URI detected in web environment, cannot process:'

   Line 220: "Error fetching image:"
   Context: console.error('Error fetching image:'

   Line 238: "Storage upload failed:"
   Context: console.warn("Storage upload failed:"

   Line 249: "Storage upload failed, using local URI:"
   Context: console.warn("Storage upload failed, using local URI:"

   Line 261: "Profile update error:"
   Context: console.warn("Profile update error:"

   Line 269: "Upload error:"
   Context: console.error("Upload error:"

   Line 280: "Update Profile Picture"
   Context: Alert.alert(
      "Update Profile Picture"

   Line 294: "Biometric Setup Required"
   Context: Alert.alert(
        "Biometric Setup Required"

   Line 316: "Biometric Login Disabled"
   Context: Alert.alert(
          "Biometric Login Disabled"

   Line 329: "Biometric Login Enabled"
   Context: Alert.alert(
            "Biometric Login Enabled"

   Line 336: "Error toggling biometric:"
   Context: console.error("Error toggling biometric:"

   Line 261: "Profile update error:"
   Context: console.warn("Profile update error:"

   Line 378: "Error saving profile:"
   Context: console.error("Error saving profile:"

   Line 393: "Invalid PIN"
   Context: Alert.alert("Invalid PIN"

   Line 398: "PIN Mismatch"
   Context: Alert.alert("PIN Mismatch"

   Line 434: "Error setting up backup methods:"
   Context: console.error("Error setting up backup methods:"

   Line 815: "Set Up Biometric Authentication"
   Context: Alert.alert(
                    "Set Up Biometric Authentication"

   Line 849: "Backup Methods"
   Context: Alert.alert(
                      "Backup Methods"

   Line 900: "Coming Soon"
   Context: Alert.alert(
                  "Coming Soon"

   Line 900: "Coming Soon"
   Context: Alert.alert(
                  "Coming Soon"

   Line 940: "Privacy & Security"
   Context: Alert.alert(
                  "Privacy & Security"

   Line 116: "Error loading biometric info"
   Context: "Error loading biometric info"

   Line 143: "Permission needed"
   Context: "Permission needed"

   Line 161: "Failed to select image"
   Context: "Failed to select image"

   Line 143: "Permission needed"
   Context: "Permission needed"

   Line 189: "Failed to take photo"
   Context: "Failed to take photo"

   Line 200: "User not found"
   Context: "User not found"

   Line 210: "Image selection not supported in web environment"
   Context: 'Image selection not supported in web environment'

   Line 221: "Failed to load selected image"
   Context: 'Failed to load selected image'

   Line 281: "Update Profile Picture"
   Context: "Update Profile Picture"

   Line 282: "Choose an option"
   Context: "Choose an option"

   Line 284: "Take Photo"
   Context: "Take Photo"

   Line 285: "Choose from Library"
   Context: "Choose from Library"

   Line 295: "Biometric Setup Required"
   Context: "Biometric Setup Required"

   Line 200: "User not found"
   Context: "User not found"

   Line 317: "Biometric Login Disabled"
   Context: "Biometric Login Disabled"

   Line 330: "Biometric Login Enabled"
   Context: "Biometric Login Enabled"

   Line 200: "User not found"
   Context: "User not found"

   Line 393: "Invalid PIN"
   Context: "Invalid PIN"

   Line 398: "PIN Mismatch"
   Context: "PIN Mismatch"

   Line 200: "User not found"
   Context: "User not found"

   Line 537: "Not set"
   Context: "Not set"

   Line 537: "Not set"
   Context: "Not set"

   Line 601: "Setup Required"
   Context: 'Setup Required'

   Line 740: "Use biometric authentication to sign in"
   Context: "Use biometric authentication to sign in"

   Line 741: "Setup required in device settings"
   Context: "Setup required in device settings"

   Line 816: "Set Up Biometric Authentication"
   Context: "Set Up Biometric Authentication"

   Line 850: "Backup Methods"
   Context: "Backup Methods"

   Line 854: "Test Backup"
   Context: "Test Backup"

   Line 859: "Disable Backup"
   Context: "Disable Backup"

   Line 887: "Backup methods configured"
   Context: "Backup methods configured"

   Line 888: "Set up backup authentication methods"
   Context: "Set up backup authentication methods"

   Line 901: "Coming Soon"
   Context: "Coming Soon"

   Line 901: "Coming Soon"
   Context: "Coming Soon"

   Line 996: "Enter your first name"
   Context: "Enter your first name"

   Line 1008: "Enter your last name"
   Context: "Enter your last name"

   Line 1064: "Enter backup PIN"
   Context: "Enter backup PIN"

   Line 1078: "Confirm backup PIN"
   Context: "Confirm backup PIN"

üìÑ app/screens/account.tsx:
   Line 29: "Icon rendering error:"
   Context: {
      console.warn('Icon rendering error:', error);
    }

   Line 416: "Failed to convert profile image URI:"
   Context: {
          console.error('Failed to convert profile image URI:', error);
          setDisplayUri(profileImage); // Fallback to original URI
        }

   Line 428: "Biometric security info:"
   Context: {
    (async () => {
      try {
        const securityInfo = await BiometricAuthService.getSecurityInfo();
        console.log('Biometric security info:', securityInfo);
        setBiometricSupported(securityInfo.capabilities.isAvailable);
        setBiometricEnrolled(securityInfo.capabilities.isEnrolled);
        setBiometricEnabled(securityInfo.isEnabled);
      }

   Line 436: "Error loading biometric info:"
   Context: {
        console.error("Error loading biometric info:", error);
        // Fallback to original method
        try {
          const [supported, enrolled, enabled] = await Promise.all([
            isHardwareAvailable(),
            isEnrolled(),
            getBiometricsEnabled(),
          ]);
          console.log('Biometric fallback check:', { supported, enrolled, enabled }

   Line 449: "Biometric fallback error:"
   Context: {
          console.error('Biometric fallback error:', fallbackError);
        }

   Line 467: "Permission needed"
   Context: {
        Alert.alert(
          "Permission needed",
          "We need camera roll permissions to select a profile picture.",
        );
        return;
      }

   Line 495: "Permission needed"
   Context: {
        Alert.alert(
          "Permission needed",
          "We need camera permissions to take a photo.",
        );
        return;
      }

   Line 532: "Invalid Image"
   Context: {
        Alert.alert('Invalid Image', validation.error || 'Please select a valid image');
        return;
      }

   Line 549: "Bucket not found"
   Context: {
        // Provide specific error message for missing bucket
        const errorMessage = result.error?.includes('Bucket not found') || result.error?.includes('not found') 
          ? "Avatar storage is not set up. Please contact support."
          : result.error || "Failed to update profile picture. Please try again.";
        Alert.alert("Upload Failed", errorMessage);
      }

   Line 556: "Upload error:"
   Context: {
      console.error("Upload error:", error);
      Alert.alert(
        "Error",
        "Failed to update profile picture. Please try again.",
      );
    }

   Line 567: "Update Profile Picture"
   Context: {
    Alert.alert(
      "Update Profile Picture",
      "Choose an option",
      [
        { text: "Take Photo", onPress: takePhoto }

   Line 573: "Choose from Library"
   Context: { text: "Choose from Library", onPress: pickImage }

   Line 580: "Biometric Setup Required"
   Context: {
    if (!biometricEnrolled) {
      Alert.alert(
        "Biometric Setup Required",
        "Please set up fingerprint or face recognition in your device settings first.",
        [{ text: "OK" }

   Line 599: "Biometric Login Disabled"
   Context: {
        // Disable biometric authentication
        await BiometricAuthService.disableBiometric();
        await setBiometricsEnabled(false);
        setBiometricEnabled(false);
        Alert.alert(
          "Biometric Login Disabled",
          "You will need to use your password to sign in.",
        );
      }

   Line 623: "Error toggling biometric:"
   Context: {
      console.error("Error toggling biometric:", error);
      Alert.alert("Error", "Failed to update biometric settings.");
    }

   Line 651: "Profile update error:"
   Context: {
        console.warn("Profile update error:", profileError);
        Alert.alert(
          "Warning",
          "Profile updated locally but failed to sync to database.",
        );
      }

   Line 665: "Error saving profile:"
   Context: {
      console.error("Error saving profile:", error);
      Alert.alert("Error", "Failed to save profile changes.");
    }

   Line 703: "Router back fallback"
   Context: {
          // Fallback handled by router
          console.log('Router back fallback', error);
        }

   Line 760: "account.info.title"
   Context: {t('account.info.title', { defaultValue: 'Account Information' }

   Line 766: "account.info.full_name"
   Context: {t('account.info.full_name', { defaultValue: 'Full Name' }

   Line 770: "Not set"
   Context: { defaultValue: 'Not set' }

   Line 786: "auth.email"
   Context: {t('auth.email', { defaultValue: 'Email' }

   Line 787: "common.not_set"
   Context: {email || t('common.not_set', { defaultValue: 'Not set' }

   Line 797: "account.info.role"
   Context: {t('account.info.role', { defaultValue: 'Role' }

   Line 809: "account.info.school_id"
   Context: {t('account.info.school_id', { defaultValue: 'School ID' }

   Line 823: "navigation.switch_account"
   Context: {t('navigation.switch_account', { defaultValue: 'Switch account' }

   Line 858: "settings.biometric.title"
   Context: {biometricSupported ? toggleBiometric : () => {
                  Alert.alert(
                    t('settings.biometric.title', { defaultValue: 'Biometric Authentication' }

   Line 861: "Biometric authentication is not available on this device. This feature requires fingerprint or face recognition hardware."
   Context: { defaultValue: 'Biometric authentication is not available on this device. This feature requires fingerprint or face recognition hardware.' }

   Line 862: "common.ok"
   Context: { text: t('common.ok', { defaultValue: 'OK' }

   Line 874: "settings.biometric.title"
   Context: {t('settings.biometric.title', { defaultValue: 'Biometric Authentication' }

   Line 877: "common.not_available"
   Context: {!biometricSupported ? t('common.not_available', { defaultValue: 'Not available' }

   Line 911: "common.coming_soon"
   Context: {() =>
                Alert.alert(
                  t('common.coming_soon', { defaultValue: 'Coming Soon' }

   Line 914: "Notification settings will be available in the next update."
   Context: { defaultValue: 'Notification settings will be available in the next update.' }

   Line 921: "settings.notifications"
   Context: {t('settings.notifications', { defaultValue: 'Notifications' }

   Line 922: "settings.manage_alerts"
   Context: {t('settings.manage_alerts', { defaultValue: 'Manage your alerts' }

   Line 931: "Privacy & Security"
   Context: {() =>
                Alert.alert(
                  "Privacy & Security",
                  "Your data is encrypted and stored securely. Biometric data never leaves your device.",
                )
              }

   Line 941: "settings.privacy_security.title"
   Context: {t('settings.privacy_security.title', { defaultValue: 'Privacy & Security' }

   Line 943: "settings.privacy_security.info"
   Context: {t('settings.privacy_security.info', { defaultValue: 'Data protection info' }

   Line 965: "account.edit.title"
   Context: {t('account.edit.title', { defaultValue: 'Edit Profile' }

   Line 980: "account.edit.personal_information"
   Context: {t('account.edit.personal_information', { defaultValue: 'Personal Information' }

   Line 983: "auth.firstName"
   Context: {t('auth.firstName', { defaultValue: 'First Name' }

   Line 988: "account.placeholders.first_name"
   Context: {t('account.placeholders.first_name', { defaultValue: 'Enter your first name' }

   Line 995: "auth.lastName"
   Context: {t('auth.lastName', { defaultValue: 'Last Name' }

   Line 1000: "account.placeholders.last_name"
   Context: {t('account.placeholders.last_name', { defaultValue: 'Enter your last name' }

   Line 30: "Icon rendering error:"
   Context: console.warn('Icon rendering error:'

   Line 417: "Failed to convert profile image URI:"
   Context: console.error('Failed to convert profile image URI:'

   Line 432: "Biometric security info:"
   Context: console.log('Biometric security info:'

   Line 437: "Error loading biometric info:"
   Context: console.error("Error loading biometric info:"

   Line 445: "Biometric fallback check:"
   Context: console.log('Biometric fallback check:'

   Line 450: "Biometric fallback error:"
   Context: console.error('Biometric fallback error:'

   Line 468: "Permission needed"
   Context: Alert.alert(
          "Permission needed"

   Line 468: "Permission needed"
   Context: Alert.alert(
          "Permission needed"

   Line 533: "Invalid Image"
   Context: Alert.alert('Invalid Image'

   Line 554: "Upload Failed"
   Context: Alert.alert("Upload Failed"

   Line 557: "Upload error:"
   Context: console.error("Upload error:"

   Line 568: "Update Profile Picture"
   Context: Alert.alert(
      "Update Profile Picture"

   Line 582: "Biometric Setup Required"
   Context: Alert.alert(
        "Biometric Setup Required"

   Line 604: "Biometric Login Disabled"
   Context: Alert.alert(
          "Biometric Login Disabled"

   Line 617: "Biometric Login Enabled"
   Context: Alert.alert(
            "Biometric Login Enabled"

   Line 624: "Error toggling biometric:"
   Context: console.error("Error toggling biometric:"

   Line 652: "Profile update error:"
   Context: console.warn("Profile update error:"

   Line 666: "Error saving profile:"
   Context: console.error("Error saving profile:"

   Line 705: "Router back fallback"
   Context: console.log('Router back fallback'

   Line 932: "Privacy & Security"
   Context: Alert.alert(
                  "Privacy & Security"

   Line 469: "Permission needed"
   Context: "Permission needed"

   Line 487: "Failed to select image"
   Context: "Failed to select image"

   Line 469: "Permission needed"
   Context: "Permission needed"

   Line 515: "Failed to take photo"
   Context: "Failed to take photo"

   Line 526: "User not found"
   Context: 'User not found'

   Line 533: "Invalid Image"
   Context: 'Invalid Image'

   Line 533: "Please select a valid image"
   Context: 'Please select a valid image'

   Line 551: "Bucket not found"
   Context: 'Bucket not found'

   Line 554: "Upload Failed"
   Context: "Upload Failed"

   Line 569: "Update Profile Picture"
   Context: "Update Profile Picture"

   Line 570: "Choose an option"
   Context: "Choose an option"

   Line 572: "Take Photo"
   Context: "Take Photo"

   Line 573: "Choose from Library"
   Context: "Choose from Library"

   Line 583: "Biometric Setup Required"
   Context: "Biometric Setup Required"

   Line 595: "User not found"
   Context: "User not found"

   Line 605: "Biometric Login Disabled"
   Context: "Biometric Login Disabled"

   Line 618: "Biometric Login Enabled"
   Context: "Biometric Login Enabled"

   Line 595: "User not found"
   Context: "User not found"

   Line 705: "Router back fallback"
   Context: 'Router back fallback'

   Line 760: "Account Information"
   Context: 'Account Information'

   Line 766: "Full Name"
   Context: 'Full Name'

   Line 770: "Not set"
   Context: 'Not set'

   Line 770: "Not set"
   Context: 'Not set'

   Line 809: "School ID"
   Context: 'School ID'

   Line 823: "Switch account"
   Context: 'Switch account'

   Line 860: "Biometric Authentication"
   Context: 'Biometric Authentication'

   Line 860: "Biometric Authentication"
   Context: 'Biometric Authentication'

   Line 877: "Not available"
   Context: 'Not available'

   Line 913: "Coming Soon"
   Context: 'Coming Soon'

   Line 922: "Manage your alerts"
   Context: 'Manage your alerts'

   Line 943: "Data protection info"
   Context: 'Data protection info'

   Line 965: "Edit Profile"
   Context: 'Edit Profile'

   Line 980: "Personal Information"
   Context: 'Personal Information'

   Line 983: "First Name"
   Context: 'First Name'

   Line 988: "Enter your first name"
   Context: 'Enter your first name'

   Line 995: "Last Name"
   Context: 'Last Name'

   Line 1000: "Enter your last name"
   Context: 'Enter your last name'

üìÑ app/screens/activity-detail.tsx:
   Line 73: "parent"
   Context: {
    const userRole = profile?.role || 'parent';
    const schoolId = profile?.organization_id;
    const userId = user?.id;
    
    if (!schoolId || !userId) {
      console.warn('Missing schoolId or userId for activity feed');
      return [];
    }

   Line 107: "Error loading activity feed:"
   Context: {
        console.error('Error loading activity feed:', feedError);
      }

   Line 109: "system"
   Context: {
        // Transform activity feed data to Activity format
        activityFeed.forEach(feed => {
          const actor = Array.isArray(feed.users) ? feed.users[0] : feed.users;
          activities.push({
            id: feed.id,
            type: feed.target_type || 'system',
            title: feed.action || 'Activity',
            description: feed.metadata?.description || `${feed.action}

   Line 150: "Error loading announcements:"
   Context: {
        console.error('Error loading announcements:', announcementError);
      }

   Line 212: "Error loading activities from database:"
   Context: {
      console.error('Error loading activities from database:', error);
      return [];
    }

   Line 283: "Failed to load activities:"
   Context: {
      console.error('Failed to load activities:', error);
      Alert.alert('Error', 'Failed to load activity feed');
    }

   Line 355: "Just now"
   Context: {
    const now = new Date();
    const time = new Date(timestamp);
    const diffInMinutes = Math.floor((now.getTime() - time.getTime()) / (1000 * 60));

    if (diffInMinutes < 1) return 'Just now';
    if (diffInMinutes < 60) return `${diffInMinutes}

   Line 383: "Access Denied"
   Context: {
    if (!canManageActivity()) {
      Alert.alert('Access Denied', 'Only principals can delete activities.');
      return;
    }

   Line 485: "today"
   Context: {[
                { key: 'today', label: 'Today' }

   Line 487: "week"
   Context: { key: 'week', label: 'This Week' }

   Line 488: "month"
   Context: { key: 'month', label: 'This Month' }

   Line 489: "all"
   Context: { key: 'all', label: 'All Time' }

   Line 565: "Search activities..."
   Context: placeholder="Search activities..."

   Line 79: "Missing schoolId or userId for activity feed"
   Context: console.warn('Missing schoolId or userId for activity feed'

   Line 108: "Error loading activity feed:"
   Context: console.error('Error loading activity feed:'

   Line 151: "Error loading announcements:"
   Context: console.error('Error loading announcements:'

   Line 213: "Error loading activities from database:"
   Context: console.error('Error loading activities from database:'

   Line 284: "Failed to load activities:"
   Context: console.error('Failed to load activities:'

   Line 385: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 389: "Delete Activity"
   Context: Alert.alert(
      'Delete Activity'

   Line 79: "Missing schoolId or userId for activity feed"
   Context: 'Missing schoolId or userId for activity feed'

   Line 285: "Failed to load activity feed"
   Context: 'Failed to load activity feed'

   Line 360: "Just now"
   Context: 'Just now'

   Line 385: "Access Denied"
   Context: 'Access Denied'

   Line 390: "Delete Activity"
   Context: 'Delete Activity'

   Line 487: "This Week"
   Context: 'This Week'

   Line 488: "This Month"
   Context: 'This Month'

   Line 489: "All Time"
   Context: 'All Time'

üìÑ app/screens/admin-ai-allocation.tsx:
   Line 27: "AI Quota Management"
   Context: title="AI Quota Management"

   Line 27: "AI Quota Management"
   Context: "AI Quota Management"

üìÑ app/screens/admin/data-export.tsx:
   Line 40: "students"
   Context: {
    id: 'students',
    title: 'Student Records',
    description: 'Complete student information, enrollment details, and contact data',
    icon: 'people',
    format: 'Excel',
    category: 'academic',
    estimatedSize: '~2.5 MB'
  }

   Line 49: "teachers"
   Context: {
    id: 'teachers', 
    title: 'Teacher Directory',
    description: 'Staff information, roles, and contact details',
    icon: 'school',
    format: 'Excel',
    category: 'administrative',
    estimatedSize: '~500 KB'
  }

   Line 58: "grades"
   Context: {
    id: 'grades',
    title: 'Academic Reports',
    description: 'Student grades, assessments, and progress reports',
    icon: 'trophy',
    format: 'PDF',
    category: 'academic',
    estimatedSize: '~8 MB'
  }

   Line 67: "attendance"
   Context: {
    id: 'attendance',
    title: 'Attendance Records',
    description: 'Daily attendance data for all students and staff',
    icon: 'checkmark-circle',
    format: 'CSV',
    category: 'academic',
    estimatedSize: '~1.2 MB'
  }

   Line 78: "payments"
   Context: {
    id: 'payments',
    title: 'Payment Records',
    description: 'School fees, payments, and outstanding balances',
    icon: 'card',
    format: 'Excel',
    category: 'financial',
    estimatedSize: '~3.1 MB'
  }

   Line 87: "expenses"
   Context: {
    id: 'expenses',
    title: 'Expense Reports',
    description: 'School expenses, petty cash, and budget tracking',
    icon: 'receipt',
    format: 'PDF',
    category: 'financial',
    estimatedSize: '~1.8 MB'
  }

   Line 98: "communications"
   Context: {
    id: 'communications',
    title: 'Communications Log',
    description: 'Announcements, messages, and parent communications',
    icon: 'mail',
    format: 'CSV',
    category: 'administrative',
    estimatedSize: '~900 KB'
  }

   Line 107: "audit"
   Context: {
    id: 'audit',
    title: 'Audit Trail',
    description: 'System activity logs and user actions',
    icon: 'shield-checkmark',
    format: 'CSV',
    category: 'administrative',
    estimatedSize: '~5.2 MB'
  }

   Line 136: "Access Denied"
   Context: {
    const preschoolId = getPreschoolId();
    if (!preschoolId || !canAccessExports()) {
      Alert.alert('Access Denied', 'You do not have permission to export data.');
      return;
    }

   Line 287: "all"
   Context: {[
            { id: 'all', label: 'All Data', icon: 'grid' }

   Line 289: "academic"
   Context: { id: 'academic', label: 'Academic', icon: 'school' }

   Line 290: "financial"
   Context: { id: 'financial', label: 'Financial', icon: 'card' }

   Line 291: "administrative"
   Context: { id: 'administrative', label: 'Admin', icon: 'settings' }

   Line 139: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 42: "Student Records"
   Context: 'Student Records'

   Line 51: "Teacher Directory"
   Context: 'Teacher Directory'

   Line 60: "Academic Reports"
   Context: 'Academic Reports'

   Line 69: "Attendance Records"
   Context: 'Attendance Records'

   Line 70: "Daily attendance data for all students and staff"
   Context: 'Daily attendance data for all students and staff'

   Line 80: "Payment Records"
   Context: 'Payment Records'

   Line 89: "Expense Reports"
   Context: 'Expense Reports'

   Line 100: "Communications Log"
   Context: 'Communications Log'

   Line 109: "Audit Trail"
   Context: 'Audit Trail'

   Line 110: "System activity logs and user actions"
   Context: 'System activity logs and user actions'

   Line 139: "Access Denied"
   Context: 'Access Denied'

   Line 288: "All Data"
   Context: 'All Data'

üìÑ app/screens/admin/school-settings.tsx:
   Line 78: "grid"
   Context: {
    dashboardLayout: 'grid' | 'list';
    showWeatherWidget: boolean;
    showCalendarWidget: boolean;
    defaultLanguage: string;
    dateFormat: 'DD/MM/YYYY' | 'MM/DD/YYYY' | 'YYYY-MM-DD';
    timeFormat: '12h' | '24h';
  }

   Line 112: "My School"
   Context: {
  schoolName: 'My School',
  primaryColor: '#4F46E5',
  secondaryColor: '#6B7280',
  timezone: 'Africa/Johannesburg',
  currency: 'ZAR',
  features: {
    activityFeed: {
      enabled: true,
      allowTeacherDelete: false,
      allowParentComment: true,
      showPriorityBadges: true,
    }

   Line 146: "Office Supplies"
   Context: {
      enabled: true,
      dailyLimit: 500,
      requireApprovalAbove: 200,
      allowedCategories: ['Office Supplies', 'Maintenance', 'Emergency', 'Utilities'],
      requireReceipts: true,
    }

   Line 154: "grid"
   Context: {
    dashboardLayout: 'grid',
    showWeatherWidget: true,
    showCalendarWidget: true,
    defaultLanguage: 'en',
    dateFormat: 'DD/MM/YYYY',
    timeFormat: '24h',
  }

   Line 213: "Failed to load school settings:"
   Context: {
      console.error('Failed to load school settings:', error);
    }

   Line 232: "Failed to save settings:"
   Context: {
      console.error('Failed to save settings:', error);
      Alert.alert(
        'Save Failed', 
        'There was an error saving your settings. Please check your connection and try again.',
        [{ text: 'OK', style: 'default' }

   Line 292: "school_settings.access_denied_text"
   Context: {t('school_settings.access_denied_text', { defaultValue: 'Only school principals can access these settings.' }

   Line 295: "navigation.back"
   Context: {t('navigation.back', { defaultValue: 'Back' }

   Line 311: "school_settings.title"
   Context: {t('school_settings.title', { defaultValue: 'School Settings' }

   Line 312: "school_settings.hero_subtitle"
   Context: {t('school_settings.hero_subtitle', { defaultValue: 'Manage features, permissions and policies' }

   Line 318: "school_settings.section.school_information"
   Context: {t('school_settings.section.school_information', { defaultValue: 'School Information' }

   Line 319: "school_settings.label.school_name"
   Context: {renderSettingRow(t('school_settings.label.school_name', { defaultValue: 'School Name' }

   Line 319: "school_settings.prompt.school_name_title"
   Context: {
            Alert.prompt(t('school_settings.prompt.school_name_title', { defaultValue: 'School Name' }

   Line 320: "Enter school name"
   Context: { defaultValue: 'Enter school name' }

   Line 324: "school_settings.label.currency"
   Context: {renderSettingRow(t('school_settings.label.currency', { defaultValue: 'Currency' }

   Line 324: "school_settings.alert.currency_title"
   Context: {
            Alert.alert(t('school_settings.alert.currency_title', { defaultValue: 'Currency' }

   Line 325: "Change currency?"
   Context: { defaultValue: 'Change currency?' }

   Line 327: "school_settings.label.timezone"
   Context: {renderSettingRow(t('school_settings.label.timezone', { defaultValue: 'Timezone' }

   Line 327: "school_settings.alert.timezone_title"
   Context: {
            Alert.alert(t('school_settings.alert.timezone_title', { defaultValue: 'Timezone' }

   Line 328: "Change timezone?"
   Context: { defaultValue: 'Change timezone?' }

   Line 334: "school_settings.section.display_language"
   Context: {t('school_settings.section.display_language', { defaultValue: 'Display & Language' }

   Line 335: "school_settings.label.language"
   Context: {renderSettingRow(t('school_settings.label.language', { defaultValue: 'Language' }

   Line 335: "school_settings.alert.language_title"
   Context: {
            Alert.alert(t('school_settings.alert.language_title', { defaultValue: 'Language' }

   Line 336: "Change language?"
   Context: { defaultValue: 'Change language?' }

   Line 338: "school_settings.label.date_format"
   Context: {renderSettingRow(t('school_settings.label.date_format', { defaultValue: 'Date Format' }

   Line 338: "school_settings.alert.date_format_title"
   Context: {
            Alert.alert(t('school_settings.alert.date_format_title', { defaultValue: 'Date Format' }

   Line 339: "Change date format?"
   Context: { defaultValue: 'Change date format?' }

   Line 341: "school_settings.label.time_format"
   Context: {renderSettingRow(t('school_settings.label.time_format', { defaultValue: 'Time Format' }

   Line 341: "school_settings.alert.time_format_title"
   Context: {
            Alert.alert(t('school_settings.alert.time_format_title', { defaultValue: 'Time Format' }

   Line 342: "Change time format?"
   Context: { defaultValue: 'Change time format?' }

   Line 348: "school_settings.section.features"
   Context: {t('school_settings.section.features', { defaultValue: 'Features' }

   Line 349: "school_settings.label.activity_feed"
   Context: {renderSettingRow(t('school_settings.label.activity_feed', { defaultValue: 'Activity Feed' }

   Line 352: "school_settings.label.students_directory"
   Context: {renderSettingRow(t('school_settings.label.students_directory', { defaultValue: 'Students Directory' }

   Line 355: "school_settings.label.financial_reports"
   Context: {renderSettingRow(t('school_settings.label.financial_reports', { defaultValue: 'Financial Reports' }

   Line 358: "school_settings.label.petty_cash_system"
   Context: {renderSettingRow(t('school_settings.label.petty_cash_system', { defaultValue: 'Petty Cash System' }

   Line 365: "school_settings.section.permissions"
   Context: {t('school_settings.section.permissions', { defaultValue: 'Permissions' }

   Line 366: "school_settings.label.allow_teacher_reports"
   Context: {renderSettingRow(t('school_settings.label.allow_teacher_reports', { defaultValue: 'Allow Teacher Reports' }

   Line 369: "school_settings.label.allow_parent_messaging"
   Context: {renderSettingRow(t('school_settings.label.allow_parent_messaging', { defaultValue: 'Allow Parent Messaging' }

   Line 372: "school_settings.label.session_timeout"
   Context: {renderSettingRow(t('school_settings.label.session_timeout', { defaultValue: 'Session Timeout' }

   Line 372: "school_settings.alert.session_timeout_title"
   Context: {
            Alert.alert(t('school_settings.alert.session_timeout_title', { defaultValue: 'Session Timeout' }

   Line 373: "Choose timeout duration:"
   Context: { defaultValue: 'Choose timeout duration:' }

   Line 378: "navigation.cancel"
   Context: { text: t('navigation.cancel', { defaultValue: 'Cancel' }

   Line 385: "school_settings.section.notifications"
   Context: {t('school_settings.section.notifications', { defaultValue: 'Notifications' }

   Line 386: "school_settings.label.email_notifications"
   Context: {renderSettingRow(t('school_settings.label.email_notifications', { defaultValue: 'Email Notifications' }

   Line 389: "school_settings.label.sms_notifications"
   Context: {renderSettingRow(t('school_settings.label.sms_notifications', { defaultValue: 'SMS Notifications' }

   Line 392: "school_settings.label.push_notifications"
   Context: {renderSettingRow(t('school_settings.label.push_notifications', { defaultValue: 'Push Notifications' }

   Line 395: "school_settings.label.daily_reports"
   Context: {renderSettingRow(t('school_settings.label.daily_reports', { defaultValue: 'Daily Reports' }

   Line 402: "school_settings.section.security_backup"
   Context: {t('school_settings.section.security_backup', { defaultValue: 'Security & Backup' }

   Line 403: "school_settings.label.two_factor_auth"
   Context: {renderSettingRow(t('school_settings.label.two_factor_auth', { defaultValue: 'Two-Factor Authentication' }

   Line 406: "school_settings.label.auto_backup"
   Context: {renderSettingRow(t('school_settings.label.auto_backup', { defaultValue: 'Auto Backup' }

   Line 409: "school_settings.label.backup_frequency"
   Context: {renderSettingRow(t('school_settings.label.backup_frequency', { defaultValue: 'Backup Frequency' }

   Line 409: "school_settings.alert.backup_frequency_title"
   Context: {
            Alert.alert(t('school_settings.alert.backup_frequency_title', { defaultValue: 'Backup Frequency' }

   Line 410: "Choose frequency"
   Context: { defaultValue: 'Choose frequency' }

   Line 411: "school_settings.option.daily"
   Context: { text: t('school_settings.option.daily', { defaultValue: 'Daily' }

   Line 412: "school_settings.option.weekly"
   Context: { text: t('school_settings.option.weekly', { defaultValue: 'Weekly' }

   Line 413: "school_settings.option.monthly"
   Context: { text: t('school_settings.option.monthly', { defaultValue: 'Monthly' }

   Line 378: "navigation.cancel"
   Context: { text: t('navigation.cancel', { defaultValue: 'Cancel' }

   Line 417: "school_settings.label.data_retention"
   Context: {renderSettingRow(t('school_settings.label.data_retention', { defaultValue: 'Data Retention' }

   Line 417: "school_settings.alert.data_retention_title"
   Context: {
            Alert.alert(t('school_settings.alert.data_retention_title', { defaultValue: 'Data Retention' }

   Line 418: "Choose retention period:"
   Context: { defaultValue: 'Choose retention period:' }

   Line 378: "navigation.cancel"
   Context: { text: t('navigation.cancel', { defaultValue: 'Cancel' }

   Line 430: "school_settings.section.advanced_settings"
   Context: {t('school_settings.section.advanced_settings', { defaultValue: 'Advanced Settings' }

   Line 431: "school_settings.label.dashboard_layout"
   Context: {renderSettingRow(t('school_settings.label.dashboard_layout', { defaultValue: 'Dashboard Layout' }

   Line 431: "school_settings.alert.dashboard_layout_title"
   Context: {
            Alert.alert(t('school_settings.alert.dashboard_layout_title', { defaultValue: 'Dashboard Layout' }

   Line 432: "Choose layout"
   Context: { defaultValue: 'Choose layout' }

   Line 433: "school_settings.option.grid"
   Context: { text: t('school_settings.option.grid', { defaultValue: 'Grid' }

   Line 434: "school_settings.option.list"
   Context: { text: t('school_settings.option.list', { defaultValue: 'List' }

   Line 378: "navigation.cancel"
   Context: { text: t('navigation.cancel', { defaultValue: 'Cancel' }

   Line 438: "school_settings.label.weather_widget"
   Context: {renderSettingRow(t('school_settings.label.weather_widget', { defaultValue: 'Weather Widget' }

   Line 441: "school_settings.label.calendar_widget"
   Context: {renderSettingRow(t('school_settings.label.calendar_widget', { defaultValue: 'Calendar Widget' }

   Line 444: "school_settings.label.financial_reports_limit"
   Context: {renderSettingRow(t('school_settings.label.financial_reports_limit', { defaultValue: 'Financial Reports Limit' }

   Line 444: "school_settings.alert.approval_limit_title"
   Context: {
            Alert.alert(t('school_settings.alert.approval_limit_title', { defaultValue: 'Approval Limit' }

   Line 445: "Choose amount requiring approval:"
   Context: { defaultValue: 'Choose amount requiring approval:' }

   Line 446: "school_settings.option.r500"
   Context: { text: t('school_settings.option.r500', { defaultValue: 'R500' }

   Line 447: "school_settings.option.r1000"
   Context: { text: t('school_settings.option.r1000', { defaultValue: 'R1000' }

   Line 448: "school_settings.option.r2500"
   Context: { text: t('school_settings.option.r2500', { defaultValue: 'R2500' }

   Line 449: "school_settings.option.r5000"
   Context: { text: t('school_settings.option.r5000', { defaultValue: 'R5000' }

   Line 378: "navigation.cancel"
   Context: { text: t('navigation.cancel', { defaultValue: 'Cancel' }

   Line 453: "school_settings.label.petty_cash_daily_limit"
   Context: {renderSettingRow(t('school_settings.label.petty_cash_daily_limit', { defaultValue: 'Petty Cash Daily Limit' }

   Line 453: "school_settings.alert.daily_limit_title"
   Context: {
            Alert.alert(t('school_settings.alert.daily_limit_title', { defaultValue: 'Daily Limit' }

   Line 454: "Choose daily petty cash limit:"
   Context: { defaultValue: 'Choose daily petty cash limit:' }

   Line 455: "school_settings.option.r200"
   Context: { text: t('school_settings.option.r200', { defaultValue: 'R200' }

   Line 446: "school_settings.option.r500"
   Context: { text: t('school_settings.option.r500', { defaultValue: 'R500' }

   Line 447: "school_settings.option.r1000"
   Context: { text: t('school_settings.option.r1000', { defaultValue: 'R1000' }

   Line 458: "school_settings.option.r2000"
   Context: { text: t('school_settings.option.r2000', { defaultValue: 'R2000' }

   Line 378: "navigation.cancel"
   Context: { text: t('navigation.cancel', { defaultValue: 'Cancel' }

   Line 468: "navigation.close"
   Context: {t('navigation.close', { defaultValue: 'Close' }

   Line 472: "school_settings.save_changes"
   Context: {t('school_settings.save_changes', { defaultValue: 'Save changes' }

   Line 214: "Failed to load school settings:"
   Context: console.error('Failed to load school settings:'

   Line 227: "Settings Saved"
   Context: Alert.alert(
        'Settings Saved'

   Line 233: "Failed to save settings:"
   Context: console.error('Failed to save settings:'

   Line 234: "Save Failed"
   Context: Alert.alert(
        'Save Failed'

   Line 113: "My School"
   Context: 'My School'

   Line 150: "Office Supplies"
   Context: 'Office Supplies'

   Line 228: "Settings Saved"
   Context: 'Settings Saved'

   Line 235: "Save Failed"
   Context: 'Save Failed'

   Line 311: "School Settings"
   Context: 'School Settings'

   Line 318: "School Information"
   Context: 'School Information'

   Line 319: "School Name"
   Context: 'School Name'

   Line 319: "School Name"
   Context: 'School Name'

   Line 320: "Enter school name"
   Context: 'Enter school name'

   Line 338: "Date Format"
   Context: 'Date Format'

   Line 338: "Date Format"
   Context: 'Date Format'

   Line 341: "Time Format"
   Context: 'Time Format'

   Line 341: "Time Format"
   Context: 'Time Format'

   Line 349: "Activity Feed"
   Context: 'Activity Feed'

   Line 352: "Students Directory"
   Context: 'Students Directory'

   Line 355: "Financial Reports"
   Context: 'Financial Reports'

   Line 358: "Petty Cash System"
   Context: 'Petty Cash System'

   Line 366: "Allow Teacher Reports"
   Context: 'Allow Teacher Reports'

   Line 369: "Allow Parent Messaging"
   Context: 'Allow Parent Messaging'

   Line 372: "Session Timeout"
   Context: 'Session Timeout'

   Line 372: "Session Timeout"
   Context: 'Session Timeout'

   Line 386: "Email Notifications"
   Context: 'Email Notifications'

   Line 389: "SMS Notifications"
   Context: 'SMS Notifications'

   Line 392: "Push Notifications"
   Context: 'Push Notifications'

   Line 395: "Daily Reports"
   Context: 'Daily Reports'

   Line 406: "Auto Backup"
   Context: 'Auto Backup'

   Line 409: "Backup Frequency"
   Context: 'Backup Frequency'

   Line 409: "Backup Frequency"
   Context: 'Backup Frequency'

   Line 410: "Choose frequency"
   Context: 'Choose frequency'

   Line 417: "Data Retention"
   Context: 'Data Retention'

   Line 417: "Data Retention"
   Context: 'Data Retention'

   Line 430: "Advanced Settings"
   Context: 'Advanced Settings'

   Line 431: "Dashboard Layout"
   Context: 'Dashboard Layout'

   Line 431: "Dashboard Layout"
   Context: 'Dashboard Layout'

   Line 432: "Choose layout"
   Context: 'Choose layout'

   Line 438: "Weather Widget"
   Context: 'Weather Widget'

   Line 441: "Calendar Widget"
   Context: 'Calendar Widget'

   Line 444: "Financial Reports Limit"
   Context: 'Financial Reports Limit'

   Line 445: "Approval Limit"
   Context: 'Approval Limit'

   Line 453: "Petty Cash Daily Limit"
   Context: 'Petty Cash Daily Limit'

   Line 454: "Daily Limit"
   Context: 'Daily Limit'

   Line 472: "Save changes"
   Context: 'Save changes'

üìÑ app/screens/ai-homework-grader-live.tsx:
   Line 49: "Please provide the student submission text."
   Context: {
    setPending(true)
    if (!submissionContent.trim()) {
      toast.warn('Please provide the student submission text.')
      return
    }

   Line 55: "Homework grader is not enabled in this build."
   Context: {
      toast.warn('Homework grader is not enabled in this build.')
      setPending(false)
      return
    }

   Line 62: "grading_assistance"
   Context: {
      const status = await getQuotaStatus('grading_assistance')
      Alert.alert(
        'Monthly limit reached',
        `You have used ${status.used}

   Line 66: "Please upgrade or purchase more to continue."
   Context: {gate.requiresPrepay ? 'Please upgrade or purchase more to continue.' : ''}

   Line 69: "See plans"
   Context: { text: 'See plans', onPress: () => router.push('/pricing') }

   Line 125: "Failed to start grading"
   Context: {e?.message || 'Failed to start grading'}

   Line 217: "Waiting for tokens‚Ä¶"
   Context: {jsonBuffer || (isStreaming ? 'Waiting for tokens‚Ä¶' : 'No data yet. Press "Start Live Grading".')}

   Line 164: "Paste or type the student"
   Context: placeholder="Paste or type the student'

   Line 64: "Monthly limit reached"
   Context: Alert.alert(
        'Monthly limit reached'

   Line 65: "Monthly limit reached"
   Context: 'Monthly limit reached'

   Line 69: "See plans"
   Context: 'See plans'

   Line 125: "Failed to start grading"
   Context: 'Failed to start grading'

   Line 164: "Paste or type the student"
   Context: "Paste or type the student'

   Line 217: "Start Live Grading"
   Context: "Start Live Grading"

üìÑ app/screens/ai-homework-helper.tsx:
   Line 44: "Error refreshing AI homework helper data:"
   Context: {
      console.error('Error refreshing AI homework helper data:', error)
    }

   Line 63: "Please enter a question or problem."
   Context: {
    setPending(true)
    if (!question.trim()) {
      toast.warn('Please enter a question or problem.')
      setPending(false)
      return
    }

   Line 70: "AI Homework Helper is not enabled in this build."
   Context: {
      toast.warn('AI Homework Helper is not enabled in this build.')
      setPending(false)
      return
    }

   Line 78: "homework_help"
   Context: {
      const status = await getQuotaStatus('homework_help')
      Alert.alert(
        'Monthly limit reached',
        `You have used ${status.used}

   Line 82: "Please upgrade or purchase more to continue."
   Context: {gate.requiresPrepay ? 'Please upgrade or purchase more to continue.' : ''}

   Line 85: "See plans"
   Context: { text: 'See plans', onPress: () => router.push('/pricing') }

   Line 105: "Unknown error"
   Context: {
      const msg = String(e?.message || 'Unknown error')
      if (msg.toLowerCase().includes('rate') || msg.includes('429')) {
        toast.warn('Rate limit reached. Please try again later.')
        track('edudash.ai.helper.rate_limited', {}

   Line 122: "AI Homework Helper"
   Context: title="AI Homework Helper"

   Line 123: "Child-safe, step-by-step guidance"
   Context: subtitle="Child-safe, step-by-step guidance"

   Line 133: "Refreshing AI data..."
   Context: title="Refreshing AI data..."

   Line 179: "Paste or type the question here"
   Context: placeholder="Paste or type the question here"

   Line 45: "Error refreshing AI homework helper data:"
   Context: console.error('Error refreshing AI homework helper data:'

   Line 80: "Monthly limit reached"
   Context: Alert.alert(
        'Monthly limit reached'

   Line 81: "Monthly limit reached"
   Context: 'Monthly limit reached'

   Line 85: "See plans"
   Context: 'See plans'

   Line 106: "Unknown error"
   Context: 'Unknown error'

   Line 122: "AI Homework Helper"
   Context: "AI Homework Helper"

   Line 179: "Paste or type the question here"
   Context: "Paste or type the question here"

   Line 202: "Ask AI"
   Context: "Ask AI"

üìÑ app/screens/ai-lesson-generator.tsx:
   Line 88: "Error refreshing AI lesson generator data:"
   Context: {
      console.error('Error refreshing AI lesson generator data:', error)
    }

   Line 166: "Failed to generate PDF"
   Context: {
      toast.error('Failed to generate PDF')
    }

   Line 202: "Initializing..."
   Context: {
    try {
      // Create abort controller for cancellation
      const controller = new AbortController()
      setAbortController(controller)
      
      setPending(true)
      setProgress(0)
      setProgressMessage('Initializing...')

      // Start progress ticker immediately to avoid "stuck at 10%"
      // Clear any existing interval first
      if (progressInterval) { clearInterval(progressInterval); setProgressInterval(null); }

   Line 215: "Preparing..."
   Context: {
        setProgress(prev => {
          if (prev < 90) {
            const inc = Math.random() * 6 + 2
            const next = Math.min(prev + inc, 90)
            if (next < 30) setProgressMessage('Preparing...')
            else if (next < 50) setProgressMessage('Checking quota...')
            else if (next < 70) setProgressMessage('Generating lesson structure...')
            else if (next < 85) setProgressMessage('Creating activities and assessments...')
            else setProgressMessage('Finalizing...')
            return next
          }

   Line 232: "AI Lesson Generator is disabled in this build."
   Context: {
        toast.warn('AI Lesson Generator is disabled in this build.');
        return;
      }

   Line 245: "[Lesson Generator] Quota check timed out; proceeding with server-side enforcement"
   Context: {
        console.warn('[Lesson Generator] Quota check timed out; proceeding with server-side enforcement')
        toast.info('Network is slow; proceeding. If you are over your quota, the server will block this request.')
        gate = { allowed: true }

   Line 251: "lesson_generation"
   Context: {
        const status = await getQuotaStatus('lesson_generation')
        Alert.alert(
          'Monthly limit reached',
          `You have used ${status.used}

   Line 255: "Please upgrade or purchase more to continue."
   Context: {gate.requiresPrepay ? 'Please upgrade or purchase more to continue.' : ''}

   Line 258: "See plans"
   Context: { text: 'See plans', onPress: () => router.push('/pricing') }

   Line 269: "lesson_generation"
   Context: {
        action: 'lesson_generation',
        topic: topic || 'Lesson Topic',
        subject: subject || 'General Studies',
        gradeLevel: Number(gradeLevel) || 3,
        duration: Number(duration) || 45,
        objectives: (objectives || '').split(';').map(s => s.trim()).filter(Boolean),
        language: language || 'en',
        model: selectedModel || process.env.EXPO_PUBLIC_ANTHROPIC_MODEL || 'claude-3-5-sonnet-20241022',
      }

   Line 294: "Generation cancelled"
   Context: {
        throw new Error('Generation cancelled')
      }

   Line 362: "N/A"
   Context: {serverUsageBefore?.lesson_generation || 'N/A'}

   Line 362: "N/A"
   Context: {serverUsageAfter?.lesson_generation || 'N/A'}

   Line 382: "Lesson generated successfully! Review the content below."
   Context: {
        toast.success('Lesson generated successfully! Review the content below.');
      }

   Line 384: "Lesson generated but no content returned. Please try again."
   Context: {
        toast.warn('Lesson generated but no content returned. Please try again.');
      }

   Line 414: "Not signed in"
   Context: { toast.error('Not signed in'); return }

   Line 417: "Please create a category first"
   Context: { toast.warn('Please create a category first'); return }

   Line 428: "Unknown error"
   Context: {
        toast.error(`Save failed: ${res.error || 'Unknown error'}

   Line 433: "Failed to save"
   Context: {
      toast.error(`Save error: ${e?.message || 'Failed to save'}

   Line 535: "Your quota resets at the start of next month."
   Context: {() => toast.info('Your quota resets at the start of next month.')}

   Line 545: "Fallback used ‚Ä¢ Saved to database"
   Context: {result.__savedToDatabase ? 'Fallback used ‚Ä¢ Saved to database' : 'Fallback used'}

   Line 571: "Select your AI model"
   Context: {tierInfo?.description || 'Select your AI model'}

   Line 645: "Upgrade to Generate"
   Context: {(quotaStatus && quotaStatus.limit !== -1 && quotaStatus.used >= quotaStatus.limit) ? 'Upgrade to Generate' : 'Generate Lesson'}

   Line 753: "Using Dash fallback..."
   Context: {async () => {
                  try {
                    setPending(true)
                    setProgress(10)
                    setProgressMessage('Using Dash fallback...')
                    const text = await generate({
                      topic,
                      subject,
                      gradeLevel: Number(gradeLevel) || 3,
                      duration: Number(duration) || 45,
                      learningObjectives: (objectives || '').split(';').map(s => s.trim()).filter(Boolean),
                      language,
                      model: selectedModel,
                    }

   Line 775: "Try again later"
   Context: {
                    toast.error(`Fallback failed: ${err?.message || 'Try again later'}

   Line 862: "Lesson content copied to clipboard!"
   Context: {async () => {
                  try {
                    await Clipboard.setStringAsync(generated.description);
                    toast.success('Lesson content copied to clipboard!');
                  }

   Line 866: "Failed to copy to clipboard"
   Context: {
                    toast.error('Failed to copy to clipboard');
                  }

   Line 890: "Generated content cleared. You can generate a new lesson."
   Context: {() => {
                  setGenerated(null);
                  toast.info('Generated content cleared. You can generate a new lesson.');
                }

   Line 443: "AI Lesson Generator"
   Context: title="AI Lesson Generator"

   Line 444: "Create AI-powered lesson plans"
   Context: subtitle="Create AI-powered lesson plans"

   Line 472: "Refreshing AI data..."
   Context: title="Refreshing AI data..."

   Line 498: "Objective A; Objective B"
   Context: placeholder="Objective A; Objective B"

   Line 678: "Cancel lesson generation"
   Context: accessibilityLabel="Cancel lesson generation"

   Line 89: "Error refreshing AI lesson generator data:"
   Context: console.error('Error refreshing AI lesson generator data:'

   Line 253: "Monthly limit reached"
   Context: Alert.alert(
          'Monthly limit reached'

   Line 360: "Usage Tracking Debug"
   Context: Alert.alert(
          'Usage Tracking Debug'

   Line 165: "PDF generated"
   Context: 'PDF generated'

   Line 167: "Failed to generate PDF"
   Context: 'Failed to generate PDF'

   Line 190: "Generation cancelled"
   Context: 'Generation cancelled'

   Line 254: "Monthly limit reached"
   Context: 'Monthly limit reached'

   Line 258: "See plans"
   Context: 'See plans'

   Line 271: "Lesson Topic"
   Context: 'Lesson Topic'

   Line 272: "General Studies"
   Context: 'General Studies'

   Line 190: "Generation cancelled"
   Context: 'Generation cancelled'

   Line 361: "Usage Tracking Debug"
   Context: 'Usage Tracking Debug'

   Line 391: "Please try again"
   Context: 'Please try again'

   Line 414: "Not signed in"
   Context: 'Not signed in'

   Line 417: "Please create a category first"
   Context: 'Please create a category first'

   Line 429: "Unknown error"
   Context: 'Unknown error'

   Line 434: "Failed to save"
   Context: 'Failed to save'

   Line 443: "AI Lesson Generator"
   Context: "AI Lesson Generator"

   Line 545: "Fallback used"
   Context: 'Fallback used'

   Line 571: "Select your AI model"
   Context: 'Select your AI model'

   Line 645: "Upgrade to Generate"
   Context: 'Upgrade to Generate'

   Line 645: "Generate Lesson"
   Context: 'Generate Lesson'

   Line 678: "Cancel lesson generation"
   Context: "Cancel lesson generation"

   Line 774: "Dash fallback succeeded"
   Context: 'Dash fallback succeeded'

   Line 776: "Try again later"
   Context: 'Try again later'

   Line 867: "Failed to copy to clipboard"
   Context: 'Failed to copy to clipboard'

   Line 295: "Generation cancelled"
   Context: throw new Error('Generation cancelled'

üìÑ app/screens/ai-progress-analysis.tsx:
   Line 54: "User not authenticated"
   Context: {
    try {
      setLoading(true);

      if (!user?.id) {
        throw new Error('User not authenticated');
      }

   Line 64: "grading_assistance"
   Context: {
        const status = await getQuotaStatus('grading_assistance');
        Alert.alert(
          'Monthly limit reached',
          `You have used ${status.used}

   Line 71: "See plans"
   Context: { text: 'See plans', onPress: () => router.push('/pricing') }

   Line 88: "Error fetching classes:"
   Context: {
        console.error('Error fetching classes:', classesError);
        throw new Error(`Failed to fetch classes: ${classesError.message}

   Line 93: "No classes found. Create some classes and assignments to see progress analysis."
   Context: {
        setAnalysisData({
          studentProgress: [],
          classAnalytics: [],
          insights: ['No classes found. Create some classes and assignments to see progress analysis.']
        }

   Line 118: "Class average: 85.4%"
   Context: {
          classId: cls.id,
          className: cls.name,
          totalStudents: 12, // Mock data
          averagePerformance: 85.4,
          improvingStudents: 8,
          strugglingStudents: 2,
          recentTrends: [
            'Class average: 85.4%',
            '8 students improving',
            '2 students need support'
          ]
        }

   Line 140: "Failed to fetch progress data:"
   Context: {
      console.error('Failed to fetch progress data:', error);
      Alert.alert('Error', 'Failed to load progress analysis. Please try again.');
    }

   Line 160: "AI Progress Analysis"
   Context: {
    try {
      const title = 'AI Progress Analysis'
      const insightsText = (analysisData?.insights || []).map(i => `‚Ä¢ ${i}

   Line 410: "AI Progress Analysis"
   Context: title="AI Progress Analysis"

   Line 410: "AI-powered student insights"
   Context: subtitle="AI-powered student insights"

   Line 410: "AI Progress Analysis"
   Context: title="AI Progress Analysis"

   Line 410: "AI-powered student insights"
   Context: subtitle="AI-powered student insights"

   Line 410: "AI Progress Analysis"
   Context: title="AI Progress Analysis"

   Line 410: "AI-powered student insights"
   Context: subtitle="AI-powered student insights"

   Line 66: "Monthly limit reached"
   Context: Alert.alert(
          'Monthly limit reached'

   Line 78: "Checking available data for teacher:"
   Context: console.log('Checking available data for teacher:'

   Line 79: "User object:"
   Context: console.log('User object:'

   Line 89: "Error fetching classes:"
   Context: console.error('Error fetching classes:'

   Line 102: "Found classes:"
   Context: console.log('Found classes:'

   Line 141: "Failed to fetch progress data:"
   Context: console.error('Failed to fetch progress data:'

   Line 59: "User not authenticated"
   Context: 'User not authenticated'

   Line 67: "Monthly limit reached"
   Context: 'Monthly limit reached'

   Line 71: "See plans"
   Context: 'See plans'

   Line 110: "Sample Student"
   Context: 'Sample Student'

   Line 133: "AI Progress Analysis is available but needs real student data"
   Context: 'AI Progress Analysis is available but needs real student data'

   Line 134: "Add assignments and student submissions to see detailed analytics"
   Context: 'Add assignments and student submissions to see detailed analytics'

   Line 162: "AI Progress Analysis"
   Context: 'AI Progress Analysis'

   Line 167: "PDF generated successfully"
   Context: 'PDF generated successfully'

   Line 169: "Failed to generate PDF"
   Context: 'Failed to generate PDF'

   Line 410: "AI Progress Analysis"
   Context: "AI Progress Analysis"

   Line 410: "AI Progress Analysis"
   Context: "AI Progress Analysis"

   Line 410: "AI Progress Analysis"
   Context: "AI Progress Analysis"

   Line 59: "User not authenticated"
   Context: throw new Error('User not authenticated'

üìÑ app/screens/application-review.tsx:
   Line 37: "Error loading application:"
   Context: {
      console.error('Error loading application:', error);
      Alert.alert('Error', error.message || 'Failed to load application');
    }

   Line 65: "Error updating application:"
   Context: {
      console.error('Error updating application:', error);
      Alert.alert('Error', error.message || 'Failed to update application status');
    }

   Line 73: "Shortlist Candidate"
   Context: {
    Alert.alert(
      'Shortlist Candidate',
      'Move this candidate to the shortlist?',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 87: "Reject Application"
   Context: {
    Alert.prompt(
      'Reject Application',
      'Please provide a reason (optional):',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 115: "No Resume"
   Context: {
    if (!application?.resume_url) {
      Alert.alert('No Resume', 'This candidate has not uploaded a resume.');
      return;
    }

   Line 128: "Error opening resume:"
   Context: {
      console.error('Error opening resume:', error);
      Alert.alert('Error', 'Failed to open resume');
    }

   Line 171: "Schedule Interview"
   Context: { label: 'Schedule Interview', onPress: handleScheduleInterview, color: theme.primary }

   Line 208: "Review Application"
   Context: {{ title: 'Review Application', headerShown: false }

   Line 238: "N/A"
   Context: {application.candidate_name || 'N/A'}

   Line 38: "Error loading application:"
   Context: console.error('Error loading application:'

   Line 66: "Error updating application:"
   Context: console.error('Error updating application:'

   Line 74: "Shortlist Candidate"
   Context: Alert.alert(
      'Shortlist Candidate'

   Line 88: "Reject Application"
   Context: Alert.prompt(
      'Reject Application'

   Line 117: "No Resume"
   Context: Alert.alert('No Resume'

   Line 129: "Error opening resume:"
   Context: console.error('Error opening resume:'

   Line 39: "Failed to load application"
   Context: 'Failed to load application'

   Line 67: "Failed to update application status"
   Context: 'Failed to update application status'

   Line 75: "Shortlist Candidate"
   Context: 'Shortlist Candidate'

   Line 89: "Reject Application"
   Context: 'Reject Application'

   Line 117: "No Resume"
   Context: 'No Resume'

   Line 130: "Failed to open resume"
   Context: 'Failed to open resume'

   Line 171: "Schedule Interview"
   Context: 'Schedule Interview'

   Line 208: "Review Application"
   Context: 'Review Application'

üìÑ app/screens/assign-homework.tsx:
   Line 55: "Missing lesson"
   Context: {
    if (!lessonId) { Alert.alert('Missing lesson', 'No lesson selected.'); return }

   Line 57: "Select class"
   Context: { Alert.alert('Select class', 'Please select a class to assign to.'); return }

   Line 58: "Pick students"
   Context: { Alert.alert('Pick students', 'Please pick at least one student.'); return }

   Line 65: "class"
   Context: {
        lessonId,
        classId: mode === 'class' ? classId || undefined : undefined,
        studentIds: mode === 'students' ? Array.from(selected) : undefined,
        title: titleInput.trim() || 'Homework',
        description: [descriptionInput, instructionsInput].filter(Boolean).join('\n\n'),
        dueDateOffsetDays: Number.isFinite(dueDays) ? dueDays : 3,
        estimatedTimeMinutes: parseInt(estimatedMinutes) || 30,
        isRequired: true,
        difficultyLevel: 'medium',
        materialsNeeded: [],
      }

   Line 79: "Assign failed"
   Context: {
        Alert.alert('Assign failed', res.error || 'Unknown error')
      }

   Line 82: "Assign failed"
   Context: {
      Alert.alert('Assign failed', e?.message || 'Unknown error')
    }

   Line 208: "temp-"
   Context: {() => {
              // Create a mock assignment object for worksheet generation
              const mockAssignment: Partial<Assignment> = {
                id: 'temp-' + Date.now(),
                title: titleInput || 'Homework Assignment',
                description: descriptionInput,
                instructions: instructionsInput,
                assignment_type: 'homework',
                max_points: 100,
                assigned_at: new Date().toISOString(),
                due_at: new Date(Date.now() + dueDays * 24 * 60 * 60 * 1000).toISOString(),
                available_from: new Date().toISOString(),
                allow_late_submissions: true,
                late_penalty_percent: 10,
                max_attempts: 1,
                attachments: [],
                metadata: {}

   Line 230: "üìù Worksheet Generator"
   Context: {
                // You would typically use a state to control this modal
                Alert.alert(
                  'üìù Worksheet Generator',
                  'Generate a printable worksheet for this assignment?',
                  [
                    { text: 'Cancel', style: 'cancel' }

   Line 237: "Create Worksheet"
   Context: {
                      text: 'Create Worksheet',
                      onPress: () => {
                        // Navigate to worksheet generator or show modal
                        Alert.alert('Feature Ready!', 'Worksheet generation is now available! The system can create math problems, reading activities, and more.');
                      }

   Line 288: "Assigning‚Ä¶"
   Context: {assigning ? 'Assigning‚Ä¶' : 'Assign'}

   Line 126: "Brief description for parents/students"
   Context: placeholder="Brief description for parents/students"

   Line 136: "Any specific steps or instructions"
   Context: placeholder="Any specific steps or instructions"

   Line 56: "Missing lesson"
   Context: Alert.alert('Missing lesson'

   Line 57: "Select class"
   Context: Alert.alert('Select class'

   Line 58: "Pick students"
   Context: Alert.alert('Pick students'

   Line 80: "Assign failed"
   Context: Alert.alert('Assign failed'

   Line 80: "Assign failed"
   Context: Alert.alert('Assign failed'

   Line 241: "Feature Ready!"
   Context: Alert.alert('Feature Ready!'

   Line 56: "Missing lesson"
   Context: 'Missing lesson'

   Line 57: "Select class"
   Context: 'Select class'

   Line 58: "Pick students"
   Context: 'Pick students'

   Line 80: "Assign failed"
   Context: 'Assign failed'

   Line 80: "Unknown error"
   Context: 'Unknown error'

   Line 80: "Assign failed"
   Context: 'Assign failed'

   Line 80: "Unknown error"
   Context: 'Unknown error'

   Line 136: "Any specific steps or instructions"
   Context: "Any specific steps or instructions"

   Line 212: "Homework Assignment"
   Context: 'Homework Assignment'

   Line 238: "Create Worksheet"
   Context: 'Create Worksheet'

üìÑ app/screens/attendance.tsx:
   Line 36: "Error refreshing attendance data:"
   Context: {
      console.error('Error refreshing attendance data:', error)
    }

   Line 85: "Select class"
   Context: {
    if (!classId) { Alert.alert('Select class', 'Please select a class first.'); return }

   Line 122: "Take Attendance"
   Context: {{ 
        title: 'Take Attendance', 
        headerStyle: { backgroundColor: palette.background }

   Line 138: "Refreshing attendance data..."
   Context: title="Refreshing attendance data..."

   Line 37: "Error refreshing attendance data:"
   Context: console.error('Error refreshing attendance data:'

   Line 86: "Select class"
   Context: Alert.alert('Select class'

   Line 107: "Attendance recorded"
   Context: Alert.alert('Attendance recorded'

   Line 86: "Select class"
   Context: 'Select class'

   Line 107: "Attendance recorded"
   Context: 'Attendance recorded'

   Line 123: "Take Attendance"
   Context: 'Take Attendance'

üìÑ app/screens/class-details.tsx:
   Line 32: "Not specified"
   Context: {classId || 'Not specified'}

   Line 35: "Unknown Class"
   Context: {className || 'Unknown Class'}

   Line 25: "Class management and details"
   Context: subtitle="Class management and details"

   Line 19: "Class Details Params:"
   Context: console.log('Class Details Params:'

   Line 17: "Class Details"
   Context: 'Class Details'

   Line 25: "Class management and details"
   Context: "Class management and details"

   Line 32: "Not specified"
   Context: 'Not specified'

   Line 35: "Unknown Class"
   Context: 'Unknown Class'

üìÑ app/screens/class-teacher-management.tsx:
   Line 145: "Error loading classes:"
   Context: {
        console.error('Error loading classes:', classesError);
      }

   Line 182: "Error loading teacher memberships:"
   Context: {
        console.error('Error loading teacher memberships:', teacherMembersError);
      }

   Line 237: "Error loading class/teacher data:"
   Context: {
      console.error('Error loading class/teacher data:', error);
      Alert.alert('Error', 'Failed to load data');
    }

   Line 331: "Remove Teacher"
   Context: {
    Alert.alert(
      'Remove Teacher',
      `Remove ${classInfo.teacher_name}

   Line 660: "Select grade level..."
   Context: label="Select grade level..."

   Line 661: "Toddlers (18m - 2y)"
   Context: label="Toddlers (18m - 2y)"

   Line 662: "Grade R"
   Context: label="Grade R"

   Line 662: "Grade R"
   Context: value="Grade R"

   Line 663: "Grade 1"
   Context: label="Grade 1"

   Line 663: "Grade 1"
   Context: value="Grade 1"

   Line 664: "Grade 2"
   Context: label="Grade 2"

   Line 664: "Grade 2"
   Context: value="Grade 2"

   Line 665: "Grade 3"
   Context: label="Grade 3"

   Line 665: "Grade 3"
   Context: value="Grade 3"

   Line 666: "Grade 4"
   Context: label="Grade 4"

   Line 666: "Grade 4"
   Context: value="Grade 4"

   Line 667: "Grade 5"
   Context: label="Grade 5"

   Line 667: "Grade 5"
   Context: value="Grade 5"

   Line 668: "Grade 6"
   Context: label="Grade 6"

   Line 668: "Grade 6"
   Context: value="Grade 6"

   Line 669: "Grade 7"
   Context: label="Grade 7"

   Line 669: "Grade 7"
   Context: value="Grade 7"

   Line 704: "No teacher assigned"
   Context: label="No teacher assigned"

   Line 753: "Select a teacher..."
   Context: label="Select a teacher..."

   Line 146: "Error loading classes:"
   Context: console.error('Error loading classes:'

   Line 183: "Error loading teacher memberships:"
   Context: console.error('Error loading teacher memberships:'

   Line 238: "Error loading class/teacher data:"
   Context: console.error('Error loading class/teacher data:'

   Line 332: "Remove Teacher"
   Context: Alert.alert(
      'Remove Teacher'

   Line 117: "No school or organization assigned to your account"
   Context: 'No school or organization assigned to your account'

   Line 239: "Failed to load data"
   Context: 'Failed to load data'

   Line 259: "Please fill in all required fields"
   Context: 'Please fill in all required fields'

   Line 288: "Failed to create class"
   Context: 'Failed to create class'

   Line 292: "Class created successfully"
   Context: 'Class created successfully'

   Line 288: "Failed to create class"
   Context: 'Failed to create class'

   Line 317: "Failed to assign teacher"
   Context: 'Failed to assign teacher'

   Line 321: "Teacher assigned successfully"
   Context: 'Teacher assigned successfully'

   Line 317: "Failed to assign teacher"
   Context: 'Failed to assign teacher'

   Line 333: "Remove Teacher"
   Context: 'Remove Teacher'

   Line 348: "Failed to remove teacher"
   Context: 'Failed to remove teacher'

   Line 352: "Teacher removed from class"
   Context: 'Teacher removed from class'

   Line 348: "Failed to remove teacher"
   Context: 'Failed to remove teacher'

   Line 371: "Failed to update class status"
   Context: 'Failed to update class status'

   Line 371: "Failed to update class status"
   Context: 'Failed to update class status'

   Line 662: "Grade R"
   Context: "Grade R"

   Line 662: "Grade R"
   Context: "Grade R"

   Line 704: "No teacher assigned"
   Context: "No teacher assigned"

üìÑ app/screens/create-lesson.tsx:
   Line 20: "New Lesson"
   Context: { defaultValue: 'New Lesson' }

   Line 37: "Title required"
   Context: {
    try {
      if (!title.trim()) { Alert.alert('Title required', 'Please enter a lesson title.'); return }

   Line 41: "No category"
   Context: { Alert.alert('No category', 'Please create a lesson category first.'); return }

   Line 47: "Not signed in"
   Context: { Alert.alert('Not signed in', 'No user profile.'); return }

   Line 58: "Save failed"
   Context: { Alert.alert('Save failed', res.error || 'Unknown error'); return }

   Line 71: "lessons_create.title"
   Context: {{ 
        title: t('lessons_create.title', { defaultValue: 'Create Lesson' }

   Line 83: "lessons_create.mode_manual"
   Context: {t('lessons_create.mode_manual', { defaultValue: 'Manual' }

   Line 86: "lessons_create.mode_ai"
   Context: {t('lessons_create.mode_ai', { defaultValue: 'AI' }

   Line 92: "lessons_create.access_restricted_title"
   Context: {t('lessons_create.access_restricted_title', { defaultValue: 'Access Restricted' }

   Line 93: "lessons_create.access_restricted_desc"
   Context: {t('lessons_create.access_restricted_desc', { defaultValue: 'Your teacher seat is not active or you lack permission to create lessons. Please contact your administrator.' }

   Line 97: "lessons_create.ai_card_title"
   Context: {t('lessons_create.ai_card_title', { defaultValue: 'AI Lesson Generator' }

   Line 98: "lessons_create.ai_card_desc"
   Context: {t('lessons_create.ai_card_desc', { defaultValue: 'Use the AI generator to draft a CAPS-aligned lesson.' }

   Line 106: "lessons_create.section_basics"
   Context: {t('lessons_create.section_basics', { defaultValue: 'Basics' }

   Line 107: "lessons_create.label_title"
   Context: {t('lessons_create.label_title', { defaultValue: 'Title' }

   Line 108: "lessons_create.placeholder_title"
   Context: {t('lessons_create.placeholder_title', { defaultValue: 'Lesson title' }

   Line 109: "lessons_create.label_description"
   Context: {t('lessons_create.label_description', { defaultValue: 'Description' }

   Line 110: "lessons_create.placeholder_description"
   Context: {t('lessons_create.placeholder_description', { defaultValue: 'Brief description' }

   Line 114: "lessons_create.section_category"
   Context: {t('lessons_create.section_category', { defaultValue: 'Category' }

   Line 129: "lessons_create.section_settings"
   Context: {t('lessons_create.section_settings', { defaultValue: 'Settings' }

   Line 130: "lessons_create.label_duration"
   Context: {t('lessons_create.label_duration', { defaultValue: 'Duration (minutes)' }

   Line 133: "lessons_create.label_complexity"
   Context: {t('lessons_create.label_complexity', { defaultValue: 'Complexity' }

   Line 144: "lessons_create.save"
   Context: {t('lessons_create.save', { defaultValue: 'Save Lesson' }

   Line 39: "Title required"
   Context: Alert.alert('Title required'

   Line 41: "No category"
   Context: Alert.alert('No category'

   Line 47: "Not signed in"
   Context: Alert.alert('Not signed in'

   Line 58: "Save failed"
   Context: Alert.alert('Save failed'

   Line 20: "New Lesson"
   Context: 'New Lesson'

   Line 39: "Title required"
   Context: 'Title required'

   Line 41: "No category"
   Context: 'No category'

   Line 47: "Not signed in"
   Context: 'Not signed in'

   Line 58: "Save failed"
   Context: 'Save failed'

   Line 58: "Unknown error"
   Context: 'Unknown error'

   Line 61: "Failed to save"
   Context: 'Failed to save'

   Line 72: "Create Lesson"
   Context: 'Create Lesson'

   Line 92: "Access Restricted"
   Context: 'Access Restricted'

   Line 97: "AI Lesson Generator"
   Context: 'AI Lesson Generator'

   Line 108: "Lesson title"
   Context: 'Lesson title'

   Line 110: "Brief description"
   Context: 'Brief description'

   Line 144: "Save Lesson"
   Context: 'Save Lesson'

üìÑ app/screens/dash-ai-settings-enhanced.tsx:
   Line 142: "Failed to load available voices:"
   Context: {
        console.warn('Failed to load available voices:', error);
      }

   Line 145: "Failed to initialize Dash AI:"
   Context: {
      console.error('Failed to initialize Dash AI:', error);
      Alert.alert('Error', 'Failed to load enhanced Dash AI settings');
    }

   Line 192: "Failed to save enhanced settings:"
   Context: {
      console.error('Failed to save enhanced settings:', error);
      Alert.alert(
        'Save Error', 
        'Failed to save some settings. Please try again or contact support if the problem persists.'
      );
    }

   Line 260: "professional"
   Context: {
        'professional': 'Good day. I\'m Dash, your professional AI teaching assistant. I\'m ready to help with your educational needs.',
        'casual': 'Hey there! I\'m Dash, your friendly AI buddy. Ready to learn something awesome together?',
        'encouraging': 'Hello! I\'m Dash, and I\'m here to support you every step of the way. You\'re doing great!',
        'formal': 'Greetings. I am Dash, your dedicated educational assistant. I am prepared to assist with your academic endeavors.'
      }

   Line 277: "[Enhanced Voice Test] Finished speaking"
   Context: {
          console.log('[Enhanced Voice Test] Finished speaking');
          Alert.alert('Voice Test', 'Voice test completed successfully!');
        }

   Line 281: "[Enhanced Voice Test] Speech error:"
   Context: {
          console.error('[Enhanced Voice Test] Speech error:', error);
          Alert.alert('Voice Test Error', 'Could not test voice settings. Please check device audio.');
        }

   Line 293: "[Enhanced Voice Test] Failed:"
   Context: {
      console.error('[Enhanced Voice Test] Failed:', error);
      Alert.alert('Voice Test Failed', 'Could not test advanced voice settings');
    }

   Line 299: "Reset to Defaults"
   Context: {
    Alert.alert(
      'Reset to Defaults',
      'This will reset all enhanced settings to their default values. Your saved conversations and memory will not be affected.',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 568: "Personality & Behavior"
   Context: {renderSectionHeader('Personality & Behavior', 'personality', 'üé≠')}

   Line 571: "personality"
   Context: {renderPickerSetting(
              'personality',
              'AI Personality',
              'Choose how Dash communicates',
              settings.personality,
              [
                { label: 'Professional', value: 'professional' }

   Line 584: "adaptiveTone"
   Context: {renderToggleSetting(
              'adaptiveTone',
              'Adaptive Tone',
              'Adjusts communication style based on context',
              settings.adaptiveTone
            )}

   Line 591: "emotionalIntelligence"
   Context: {renderToggleSetting(
              'emotionalIntelligence',
              'Emotional Intelligence',
              'Recognizes and responds to emotional cues',
              settings.emotionalIntelligence
            )}

   Line 622: "Voice & Speech"
   Context: {renderSectionHeader('Voice & Speech', 'voice', 'üó£Ô∏è')}

   Line 640: "voiceEnabled"
   Context: {renderToggleSetting(
              'voiceEnabled',
              'Voice Responses',
              'Enable text-to-speech for Dash responses',
              settings.voiceEnabled
            )}

   Line 647: "voiceLanguage"
   Context: {renderPickerSetting(
              'voiceLanguage',
              'Voice Language',
              'Primary language for voice output',
              settings.voiceLanguage,
              [
                { label: 'English (SA)', value: 'en-ZA' }

   Line 654: "English (US)"
   Context: { label: 'English (US)', value: 'en-US' }

   Line 664: "android"
   Context: {Platform.OS === 'android' 
                    ? 'Android: Voice distinction simulated using pitch modulation'
                    : 'iOS: Uses device-specific voice packs'}

   Line 707: "voiceRate"
   Context: {renderSliderSetting(
              'voiceRate',
              'Speech Rate',
              'How fast Dash speaks',
              settings.voiceRate,
              0.5,
              2.0,
              0.1
            )}

   Line 717: "voicePitch"
   Context: {renderSliderSetting(
              'voicePitch',
              'Voice Pitch',
              'Voice pitch level',
              settings.voicePitch,
              0.5,
              2.0,
              0.1
            )}

   Line 727: "voiceVolume"
   Context: {renderSliderSetting(
              'voiceVolume',
              'Voice Volume',
              'Audio output volume',
              settings.voiceVolume,
              0.1,
              1.0,
              0.1
            )}

   Line 737: "autoReadResponses"
   Context: {renderToggleSetting(
              'autoReadResponses',
              'Auto-Read Responses',
              'Automatically speak Dash responses',
              settings.autoReadResponses
            )}

   Line 744: "voiceActivation"
   Context: {renderToggleSetting(
              'voiceActivation',
              'Voice Activation',
              'Wake Dash with voice commands',
              settings.voiceActivation
            )}

   Line 754: "Chat & Interaction"
   Context: {renderSectionHeader('Chat & Interaction', 'chat', 'üí¨')}

   Line 757: "enterToSend"
   Context: {renderToggleSetting(
              'enterToSend',
              'Enter to Send',
              'Send messages by pressing Enter',
              settings.enterToSend
            )}

   Line 764: "autoVoiceReply"
   Context: {renderToggleSetting(
              'autoVoiceReply',
              'Auto Voice Reply',
              'Automatically respond with voice',
              settings.autoVoiceReply
            )}

   Line 771: "showTypingIndicator"
   Context: {renderToggleSetting(
              'showTypingIndicator',
              'Typing Indicator',
              'Show when Dash is thinking',
              settings.showTypingIndicator
            )}

   Line 778: "readReceiptEnabled"
   Context: {renderToggleSetting(
              'readReceiptEnabled',
              'Read Receipts',
              'Show when messages are read',
              settings.readReceiptEnabled
            )}

   Line 785: "soundEnabled"
   Context: {renderToggleSetting(
              'soundEnabled',
              'Sound Effects',
              'Play notification sounds',
              settings.soundEnabled
            )}

   Line 792: "autoSuggestQuestions"
   Context: {renderToggleSetting(
              'autoSuggestQuestions',
              'Question Suggestions',
              'Suggest follow-up questions',
              settings.autoSuggestQuestions
            )}

   Line 799: "contextualHelp"
   Context: {renderToggleSetting(
              'contextualHelp',
              'Contextual Help',
              'Offer help based on current topic',
              settings.contextualHelp
            )}

   Line 809: "Learning & Memory"
   Context: {renderSectionHeader('Learning & Memory', 'learning', 'üß†')}

   Line 812: "rememberPreferences"
   Context: {renderToggleSetting(
              'rememberPreferences',
              'Remember Preferences',
              'Save your settings and preferences',
              settings.rememberPreferences
            )}

   Line 819: "learnFromInteractions"
   Context: {renderToggleSetting(
              'learnFromInteractions',
              'Learn from Interactions',
              'Improve responses based on conversations',
              settings.learnFromInteractions
            )}

   Line 826: "personalizedRecommendations"
   Context: {renderToggleSetting(
              'personalizedRecommendations',
              'Personalized Recommendations',
              'Tailor suggestions to your needs',
              settings.personalizedRecommendations
            )}

   Line 833: "crossSessionMemory"
   Context: {renderToggleSetting(
              'crossSessionMemory',
              'Cross-Session Memory',
              'Remember context between sessions',
              settings.crossSessionMemory
            )}

   Line 840: "memoryRetentionDays"
   Context: {renderSliderSetting(
              'memoryRetentionDays',
              'Memory Retention',
              'Days to keep conversation history',
              settings.memoryRetentionDays,
              1,
              365,
              1
            )}

   Line 853: "Advanced Features"
   Context: {renderSectionHeader('Advanced Features', 'advanced', '‚öôÔ∏è')}

   Line 863: "smartNotifications"
   Context: {renderToggleSetting(
              'smartNotifications',
              'Smart Notifications',
              'Intelligent notification timing',
              settings.smartNotifications
            )}

   Line 870: "offlineMode"
   Context: {renderToggleSetting(
              'offlineMode',
              'Offline Mode',
              'Limited functionality without internet',
              settings.offlineMode
            )}

   Line 877: "dataSync"
   Context: {renderToggleSetting(
              'dataSync',
              'Data Synchronization',
              'Sync settings across devices',
              settings.dataSync
            )}

   Line 884: "experimentalFeatures"
   Context: {renderToggleSetting(
              'experimentalFeatures',
              'Experimental Features',
              'Enable beta features (may be unstable)',
              settings.experimentalFeatures
            )}

   Line 894: "Privacy & Data"
   Context: {renderSectionHeader('Privacy & Data', 'privacy', 'üîí')}

   Line 897: "dataCollection"
   Context: {renderToggleSetting(
              'dataCollection',
              'Data Collection',
              'Allow data collection for improvements',
              settings.dataCollection
            )}

   Line 904: "anonymousUsage"
   Context: {renderToggleSetting(
              'anonymousUsage',
              'Anonymous Usage Stats',
              'Share anonymous usage statistics',
              settings.anonymousUsage
            )}

   Line 911: "shareAnalytics"
   Context: {renderToggleSetting(
              'shareAnalytics',
              'Share Analytics',
              'Help improve Dash with usage data',
              settings.shareAnalytics
            )}

   Line 918: "localProcessing"
   Context: {renderToggleSetting(
              'localProcessing',
              'Local Processing',
              'Process data on device when possible',
              settings.localProcessing
            )}

   Line 931: "teachingStyle"
   Context: {renderPickerSetting(
              'teachingStyle',
              'Teaching Style',
              'How Dash explains concepts',
              settings.teachingStyle,
              [
                { label: 'Direct', value: 'direct' }

   Line 972: "highContrast"
   Context: {renderToggleSetting(
              'highContrast',
              'High Contrast',
              'Increase color contrast for better visibility',
              settings.highContrast
            )}

   Line 979: "largeFonts"
   Context: {renderToggleSetting(
              'largeFonts',
              'Large Fonts',
              'Use larger text throughout the app',
              settings.largeFonts
            )}

   Line 986: "screenReader"
   Context: {renderToggleSetting(
              'screenReader',
              'Screen Reader Support',
              'Optimize for screen reader users',
              settings.screenReader
            )}

   Line 993: "reducedMotion"
   Context: {renderToggleSetting(
              'reducedMotion',
              'Reduced Motion',
              'Minimize animations and effects',
              settings.reducedMotion
            )}

   Line 499: "Enhanced Dash AI Settings"
   Context: title="Enhanced Dash AI Settings"

   Line 500: "Advanced AI assistant configuration"
   Context: subtitle="Advanced AI assistant configuration"

   Line 499: "Enhanced Dash AI Settings"
   Context: title="Enhanced Dash AI Settings"

   Line 516: "Advanced configuration options"
   Context: subtitle="Advanced configuration options"

   Line 143: "Failed to load available voices:"
   Context: console.warn('Failed to load available voices:'

   Line 146: "Failed to initialize Dash AI:"
   Context: console.error('Failed to initialize Dash AI:'

   Line 187: "Settings Saved"
   Context: Alert.alert(
        'Settings Saved'

   Line 193: "Failed to save enhanced settings:"
   Context: console.error('Failed to save enhanced settings:'

   Line 194: "Save Error"
   Context: Alert.alert(
        'Save Error'

   Line 279: "Voice Test"
   Context: Alert.alert('Voice Test'

   Line 283: "Voice Test Error"
   Context: Alert.alert('Voice Test Error'

   Line 295: "Voice Test Failed"
   Context: Alert.alert('Voice Test Failed'

   Line 300: "Reset to Defaults"
   Context: Alert.alert(
      'Reset to Defaults'

   Line 355: "Settings Reset"
   Context: Alert.alert('Settings Reset'

   Line 147: "Failed to load enhanced Dash AI settings"
   Context: 'Failed to load enhanced Dash AI settings'

   Line 188: "Settings Saved"
   Context: 'Settings Saved'

   Line 195: "Save Error"
   Context: 'Save Error'

   Line 279: "Voice Test"
   Context: 'Voice Test'

   Line 283: "Voice Test Error"
   Context: 'Voice Test Error'

   Line 295: "Voice Test Failed"
   Context: 'Voice Test Failed'

   Line 295: "Could not test advanced voice settings"
   Context: 'Could not test advanced voice settings'

   Line 301: "Reset to Defaults"
   Context: 'Reset to Defaults'

   Line 355: "Settings Reset"
   Context: 'Settings Reset'

   Line 355: "All settings have been reset to defaults"
   Context: 'All settings have been reset to defaults'

   Line 371: "Copy to Clipboard"
   Context: 'Copy to Clipboard'

   Line 379: "Could not export settings"
   Context: 'Could not export settings'

   Line 499: "Enhanced Dash AI Settings"
   Context: "Enhanced Dash AI Settings"

   Line 500: "Advanced AI assistant configuration"
   Context: "Advanced AI assistant configuration"

   Line 499: "Enhanced Dash AI Settings"
   Context: "Enhanced Dash AI Settings"

   Line 516: "Advanced configuration options"
   Context: "Advanced configuration options"

   Line 573: "AI Personality"
   Context: 'AI Personality'

   Line 574: "Choose how Dash communicates"
   Context: 'Choose how Dash communicates'

   Line 586: "Adaptive Tone"
   Context: 'Adaptive Tone'

   Line 587: "Adjusts communication style based on context"
   Context: 'Adjusts communication style based on context'

   Line 593: "Emotional Intelligence"
   Context: 'Emotional Intelligence'

   Line 594: "Recognizes and responds to emotional cues"
   Context: 'Recognizes and responds to emotional cues'

   Line 642: "Voice Responses"
   Context: 'Voice Responses'

   Line 649: "Voice Language"
   Context: 'Voice Language'

   Line 650: "Primary language for voice output"
   Context: 'Primary language for voice output'

   Line 709: "Speech Rate"
   Context: 'Speech Rate'

   Line 710: "How fast Dash speaks"
   Context: 'How fast Dash speaks'

   Line 719: "Voice Pitch"
   Context: 'Voice Pitch'

   Line 720: "Voice pitch level"
   Context: 'Voice pitch level'

   Line 729: "Voice Volume"
   Context: 'Voice Volume'

   Line 730: "Audio output volume"
   Context: 'Audio output volume'

   Line 740: "Automatically speak Dash responses"
   Context: 'Automatically speak Dash responses'

   Line 746: "Voice Activation"
   Context: 'Voice Activation'

   Line 747: "Wake Dash with voice commands"
   Context: 'Wake Dash with voice commands'

   Line 759: "Enter to Send"
   Context: 'Enter to Send'

   Line 760: "Send messages by pressing Enter"
   Context: 'Send messages by pressing Enter'

   Line 766: "Auto Voice Reply"
   Context: 'Auto Voice Reply'

   Line 767: "Automatically respond with voice"
   Context: 'Automatically respond with voice'

   Line 773: "Typing Indicator"
   Context: 'Typing Indicator'

   Line 774: "Show when Dash is thinking"
   Context: 'Show when Dash is thinking'

   Line 780: "Read Receipts"
   Context: 'Read Receipts'

   Line 781: "Show when messages are read"
   Context: 'Show when messages are read'

   Line 787: "Sound Effects"
   Context: 'Sound Effects'

   Line 788: "Play notification sounds"
   Context: 'Play notification sounds'

   Line 794: "Question Suggestions"
   Context: 'Question Suggestions'

   Line 801: "Contextual Help"
   Context: 'Contextual Help'

   Line 802: "Offer help based on current topic"
   Context: 'Offer help based on current topic'

   Line 814: "Remember Preferences"
   Context: 'Remember Preferences'

   Line 815: "Save your settings and preferences"
   Context: 'Save your settings and preferences'

   Line 821: "Learn from Interactions"
   Context: 'Learn from Interactions'

   Line 822: "Improve responses based on conversations"
   Context: 'Improve responses based on conversations'

   Line 828: "Personalized Recommendations"
   Context: 'Personalized Recommendations'

   Line 829: "Tailor suggestions to your needs"
   Context: 'Tailor suggestions to your needs'

   Line 836: "Remember context between sessions"
   Context: 'Remember context between sessions'

   Line 842: "Memory Retention"
   Context: 'Memory Retention'

   Line 843: "Days to keep conversation history"
   Context: 'Days to keep conversation history'

   Line 853: "Advanced Features"
   Context: 'Advanced Features'

   Line 859: "Suggest completions while typing"
   Context: 'Suggest completions while typing'

   Line 865: "Smart Notifications"
   Context: 'Smart Notifications'

   Line 866: "Intelligent notification timing"
   Context: 'Intelligent notification timing'

   Line 872: "Offline Mode"
   Context: 'Offline Mode'

   Line 873: "Limited functionality without internet"
   Context: 'Limited functionality without internet'

   Line 879: "Data Synchronization"
   Context: 'Data Synchronization'

   Line 880: "Sync settings across devices"
   Context: 'Sync settings across devices'

   Line 886: "Experimental Features"
   Context: 'Experimental Features'

   Line 899: "Data Collection"
   Context: 'Data Collection'

   Line 900: "Allow data collection for improvements"
   Context: 'Allow data collection for improvements'

   Line 906: "Anonymous Usage Stats"
   Context: 'Anonymous Usage Stats'

   Line 907: "Share anonymous usage statistics"
   Context: 'Share anonymous usage statistics'

   Line 913: "Share Analytics"
   Context: 'Share Analytics'

   Line 914: "Help improve Dash with usage data"
   Context: 'Help improve Dash with usage data'

   Line 920: "Local Processing"
   Context: 'Local Processing'

   Line 921: "Process data on device when possible"
   Context: 'Process data on device when possible'

   Line 933: "Teaching Style"
   Context: 'Teaching Style'

   Line 934: "How Dash explains concepts"
   Context: 'How Dash explains concepts'

   Line 974: "High Contrast"
   Context: 'High Contrast'

   Line 975: "Increase color contrast for better visibility"
   Context: 'Increase color contrast for better visibility'

   Line 981: "Large Fonts"
   Context: 'Large Fonts'

   Line 982: "Use larger text throughout the app"
   Context: 'Use larger text throughout the app'

   Line 988: "Screen Reader Support"
   Context: 'Screen Reader Support'

   Line 989: "Optimize for screen reader users"
   Context: 'Optimize for screen reader users'

   Line 995: "Reduced Motion"
   Context: 'Reduced Motion'

   Line 996: "Minimize animations and effects"
   Context: 'Minimize animations and effects'

üìÑ app/screens/dash-ai-settings.tsx:
   Line 113: "Failed to load available voices:"
   Context: {
        console.warn('Failed to load available voices:', _error);
      }

   Line 116: "Failed to initialize Dash AI:"
   Context: {
      console.error('Failed to initialize Dash AI:', _error);
      Alert.alert('Error', 'Failed to load Dash AI settings');
    }

   Line 169: "Failed to update settings:"
   Context: {
      console.error('Failed to update settings:', _error);
      Alert.alert('Settings Error', 'Settings were updated locally but may not be saved permanently. Please try again.');
    }

   Line 296: "Save Error"
   Context: {
      Alert.alert('Save Error', 'Failed to save settings. Please try again.');
      console.error('‚ùå Manual save failed:', error);
    }

   Line 363: "professional"
   Context: {
        'professional': 'Good day! I\'m Dash, your AI teaching assistant.',
        'casual': 'Hey there! I\'m Dash, your friendly AI buddy.',
        'encouraging': 'Hello! I\'m Dash, and I\'m here to support your learning journey.',
        'formal': 'Greetings. I am Dash, your educational AI assistant.'
      }

   Line 382: "[Voice Test] Speech error:"
   Context: {
          console.error('[Voice Test] Speech error:', error);
          Alert.alert('Voice Test Error', 'Could not test voice settings. Please check device audio.');
        }

   Line 394: "[Voice Test] Failed:"
   Context: {
      console.error('[Voice Test] Failed:', error);
      Alert.alert('Voice Test Failed', 'Could not test voice settings');
    }

   Line 400: "Clear Memory"
   Context: {
    Alert.alert(
      'Clear Memory',
      'This will delete all of Dash\'s memory about your preferences and conversation history. This action cannot be undone.',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 406: "Clear Memory"
   Context: {
          text: 'Clear Memory',
          style: 'destructive',
          onPress: async () => {
            try {
              await dashAI.clearMemory();
              Alert.alert('Success', 'Dash\'s memory has been cleared');
            }

   Line 431: "en-ZA"
   Context: {
    const languageName = {
      'en-ZA': 'English (South Africa)',
      'en-US': 'English (US)', 
      'en-GB': 'English (UK)',
      'af': 'Afrikaans',
      'zu': 'Zulu',
      'xh': 'Xhosa'
    }

   Line 451: "Open Play Store"
   Context: {
            text: 'Open Play Store',
            onPress: async () => {
              try {
                const { Linking }

   Line 462: "More Info"
   Context: {
            text: 'More Info',
            onPress: () => {
              Alert.alert(
                'About Android TTS Voices',
                `üé§ How Android Text-to-Speech Works:\n\n` +
                `Google TTS automatically includes voices for many languages once updated.\n\n` +
                `Available Languages Include:\n` +
                `  ‚Ä¢ English (US, UK, India, Australia)\n` +
                `  ‚Ä¢ Afrikaans\n` +
                `  ‚Ä¢ Zulu (limited support)\n` +
                `  ‚Ä¢ Xhosa (limited support)\n` +
                `  ‚Ä¢ And 100+ other languages\n\n` +
                `‚ö†Ô∏è Note about South African Languages:\n` +
                `English (South Africa) may not be available as a separate voice pack. The app will use English (US/UK) as fallback.\n\n` +
                `Native languages like Zulu and Xhosa have limited TTS support on Android. Consider using English for best quality.\n\n` +
                `üí° To check available voices:\n` +
                `Settings > System > Languages & input > Text-to-speech output > Google TTS Settings`,
                [{ text: 'Got it!' }

   Line 500: "Open Settings"
   Context: {
            text: 'Open Settings',
            onPress: async () => {
              try {
                const { Linking }

   Line 522: "Dash Memory"
   Context: {
    try {
      const memory = await dashAI.getMemory();
      
      if (!memory || memory.length === 0) {
        Alert.alert(
          'Dash Memory',
          'Dash hasn\'t stored any memories yet. Start using Dash AI features to build up memory!',
          [
            { text: 'View Conversations', onPress: () => router.push('/screens/dash-conversations-history') }

   Line 550: "string"
   Context: {
          const valuePreview = typeof item.value === 'string' 
            ? item.value.substring(0, 50) + (item.value.length > 50 ? '...' : '') 
            : JSON.stringify(item.value).substring(0, 50) + '...';
          summaryText += `  ‚Ä¢ ${item.key || 'Unnamed'}

   Line 567: "Clear All"
   Context: { text: 'Clear All', style: 'destructive', onPress: clearMemory }

   Line 571: "Error viewing memory:"
   Context: {
      console.error('Error viewing memory:', error);
      Alert.alert('Error', 'Could not load memory. Try again later.');
    }

   Line 741: "android"
   Context: {Platform.OS === 'android' 
                  ? 'Android: Voice distinction simulated using pitch modulation'
                  : 'iOS: Uses device-specific voice packs'}

   Line 886: "encouraging"
   Context: {settings.personality === 'encouraging' ? 'Encouraging & Warm' : 
               settings.personality === 'professional' ? 'Professional' : 
               settings.personality === 'casual' ? 'Casual & Friendly' :
               settings.personality === 'formal' ? 'Formal' : 'Encouraging'}

   Line 896: "male"
   Context: {settings.voiceSettings?.voice === 'male' || settings.voiceType === 'male' ? 'Male' : 'Female, Warm'}

   Line 904: "en-ZA"
   Context: {settings.voiceSettings?.language === 'en-ZA' ? 'English (South Africa)' : 
                 settings.voiceSettings?.language === 'en-US' ? 'English (US)' : 
                 settings.voiceSettings?.language === 'en-GB' ? 'English (UK)' : 'English (South Africa)'}

   Line 581: "Dash AI Settings"
   Context: title="Dash AI Settings"

   Line 582: "Configure your AI assistant"
   Context: subtitle="Configure your AI assistant"

   Line 581: "Dash AI Settings"
   Context: title="Dash AI Settings"

   Line 598: "Configure your AI assistant preferences"
   Context: subtitle="Configure your AI assistant preferences"

   Line 114: "Failed to load available voices:"
   Context: console.warn('Failed to load available voices:'

   Line 117: "Failed to initialize Dash AI:"
   Context: console.error('Failed to initialize Dash AI:'

   Line 168: "Settings updated and synchronized:"
   Context: console.log('Settings updated and synchronized:'

   Line 170: "Failed to update settings:"
   Context: console.error('Failed to update settings:'

   Line 171: "Settings Error"
   Context: Alert.alert('Settings Error'

   Line 294: "Settings Saved"
   Context: Alert.alert('Settings Saved'

   Line 297: "Save Error"
   Context: Alert.alert('Save Error'

   Line 384: "Voice Test Error"
   Context: Alert.alert('Voice Test Error'

   Line 396: "Voice Test Failed"
   Context: Alert.alert('Voice Test Failed'

   Line 401: "Clear Memory"
   Context: Alert.alert(
      'Clear Memory'

   Line 527: "Dash Memory"
   Context: Alert.alert(
          'Dash Memory'

   Line 562: "Dash Memory"
   Context: Alert.alert(
        'Dash Memory'

   Line 572: "Error viewing memory:"
   Context: console.error('Error viewing memory:'

   Line 118: "Failed to load Dash AI settings"
   Context: 'Failed to load Dash AI settings'

   Line 171: "Settings Error"
   Context: 'Settings Error'

   Line 294: "Settings Saved"
   Context: 'Settings Saved'

   Line 297: "Save Error"
   Context: 'Save Error'

   Line 384: "Voice Test Error"
   Context: 'Voice Test Error'

   Line 396: "Voice Test Failed"
   Context: 'Voice Test Failed'

   Line 396: "Could not test voice settings"
   Context: 'Could not test voice settings'

   Line 402: "Clear Memory"
   Context: 'Clear Memory'

   Line 402: "Clear Memory"
   Context: 'Clear Memory'

   Line 414: "Failed to clear memory"
   Context: 'Failed to clear memory'

   Line 452: "Open Play Store"
   Context: 'Open Play Store'

   Line 463: "More Info"
   Context: 'More Info'

   Line 495: "Spoken Content"
   Context: "Spoken Content"

   Line 501: "Open Settings"
   Context: 'Open Settings'

   Line 528: "Dash Memory"
   Context: 'Dash Memory'

   Line 528: "Dash Memory"
   Context: 'Dash Memory'

   Line 567: "Clear All"
   Context: 'Clear All'

   Line 581: "Dash AI Settings"
   Context: "Dash AI Settings"

   Line 582: "Configure your AI assistant"
   Context: "Configure your AI assistant"

   Line 581: "Dash AI Settings"
   Context: "Dash AI Settings"

   Line 598: "Configure your AI assistant preferences"
   Context: "Configure your AI assistant preferences"

   Line 836: "Hello Dash"
   Context: 'Hello Dash'

   Line 837: "Hello Dash"
   Context: "Hello Dash"

üìÑ app/screens/dash-conversations-history.tsx:
   Line 13: "Conversations History"
   Context: title="Conversations History"

   Line 14: "Your past conversations with Dash"
   Context: subtitle="Your past conversations with Dash"

   Line 13: "Conversations History"
   Context: "Conversations History"

   Line 14: "Your past conversations with Dash"
   Context: "Your past conversations with Dash"

üìÑ app/screens/email-verification.tsx:
   Line 49: "Invalid Token"
   Context: {
    if (!verificationToken || verificationToken.length < 10) {
      Alert.alert('Invalid Token', 'Please enter a valid verification token.');
      return;
    }

   Line 88: "Continue Setup"
   Context: {
            text: 'Continue Setup',
            onPress: () => {
              if (verificationData.school_id) {
                // Navigate to the next step in onboarding
                router.push({
                  pathname: '/screens/principal-onboarding',
                  params: { 
                    schoolId: verificationData.school_id,
                    step: 'principal_account'
                  }

   Line 108: "Email verification failed:"
   Context: {
      console.error('Email verification failed:', error);
      
      let errorMessage = 'Verification failed. Please try again.';
      
      if (error.message?.includes('expired')) {
        errorMessage = 'This verification link has expired. Please request a new verification email.';
      }

   Line 115: "This email has already been verified. You can proceed with your school setup."
   Context: {
        errorMessage = 'This email has already been verified. You can proceed with your school setup.';
      }

   Line 117: "Invalid verification token. Please check your email for the correct link."
   Context: {
        errorMessage = 'Invalid verification token. Please check your email for the correct link.';
      }

   Line 135: "Email Required"
   Context: {
    if (!email) {
      Alert.alert(
        'Email Required',
        'Please provide the school email address to resend verification.'
      );
      return;
    }

   Line 170: "Failed to resend verification:"
   Context: {
      console.error('Failed to resend verification:', error);
      Alert.alert(
        'Failed to Resend',
        error.message || 'Could not resend verification email. Please try again later.'
      );
    }

   Line 181: "Verification Complete"
   Context: {
    if (verified) {
      return 'Verification Complete';
    }

   Line 185: "Verifying Your Email"
   Context: {
      return 'Verifying Your Email';
    }

   Line 191: "Your school email has been successfully verified."
   Context: {
    if (verified) {
      return 'Your school email has been successfully verified.';
    }

   Line 195: "Please wait while we verify your email address..."
   Context: {
      return 'Please wait while we verify your email address...';
    }

   Line 203: "Email Verification"
   Context: {{
        title: 'Email Verification',
        headerStyle: { backgroundColor: theme.headerBackground }

   Line 254: "Enter verification code from email"
   Context: placeholder="Enter verification code from email"

   Line 51: "Invalid Token"
   Context: Alert.alert('Invalid Token'

   Line 84: "Verification Successful!"
   Context: Alert.alert(
        'Verification Successful!'

   Line 109: "Email verification failed:"
   Context: console.error('Email verification failed:'

   Line 123: "Verification Failed"
   Context: Alert.alert('Verification Failed'

   Line 137: "Email Required"
   Context: Alert.alert(
        'Email Required'

   Line 160: "Verification Email Sent"
   Context: Alert.alert(
        'Verification Email Sent'

   Line 171: "Failed to resend verification:"
   Context: console.error('Failed to resend verification:'

   Line 172: "Failed to Resend"
   Context: Alert.alert(
        'Failed to Resend'

   Line 51: "Invalid Token"
   Context: 'Invalid Token'

   Line 89: "Continue Setup"
   Context: 'Continue Setup'

   Line 123: "Verification Failed"
   Context: 'Verification Failed'

   Line 138: "Email Required"
   Context: 'Email Required'

   Line 161: "Verification Email Sent"
   Context: 'Verification Email Sent'

   Line 173: "Failed to Resend"
   Context: 'Failed to Resend'

   Line 183: "Verification Complete"
   Context: 'Verification Complete'

   Line 186: "Verifying Your Email"
   Context: 'Verifying Your Email'

   Line 188: "Verify Your Email"
   Context: 'Verify Your Email'

   Line 204: "Email Verification"
   Context: 'Email Verification'

   Line 254: "Enter verification code from email"
   Context: "Enter verification code from email"

üìÑ app/screens/financial-dashboard.tsx:
   Line 84: "Failed to load dashboard data:"
   Context: {
      console.error('Failed to load dashboard data:', error);
      Alert.alert(t('common.error', { defaultValue: 'Error' }

   Line 86: "Failed to load financial dashboard"
   Context: { defaultValue: 'Failed to load financial dashboard' }

   Line 93: "transactions.no_data"
   Context: {
    if (!overview || !transactions.length) {
      Alert.alert(t('transactions.no_data', { defaultValue: 'No Data' }

   Line 95: "No financial data available to export"
   Context: { defaultValue: 'No financial data available to export' }

   Line 140: "finance_dashboard.trend_title"
   Context: {t('finance_dashboard.trend_title', { defaultValue: 'Cash Flow Trend (Last 6 Months)' }

   Line 157: "finance_dashboard.categories_title"
   Context: {t('finance_dashboard.categories_title', { defaultValue: 'Expense Categories' }

   Line 177: "finance_dashboard.comparison_title"
   Context: {t('finance_dashboard.comparison_title', { defaultValue: 'Monthly Comparison' }

   Line 198: "cashflow"
   Context: {[
        { key: 'cashflow', label: t('finance_dashboard.tab_cash_flow', { defaultValue: 'Cash Flow' }

   Line 200: "categories"
   Context: { key: 'categories', label: t('finance_dashboard.tab_categories', { defaultValue: 'Categories' }

   Line 201: "comparison"
   Context: { key: 'comparison', label: t('finance_dashboard.tab_comparison', { defaultValue: 'Compare' }

   Line 231: "finance_dashboard.export_title"
   Context: {t('finance_dashboard.export_title', { defaultValue: 'Export Data' }

   Line 238: "finance_dashboard.csv"
   Context: {t('finance_dashboard.csv', { defaultValue: 'CSV' }

   Line 246: "finance_dashboard.excel"
   Context: {t('finance_dashboard.excel', { defaultValue: 'Excel' }

   Line 254: "finance_dashboard.pdf"
   Context: {t('finance_dashboard.pdf', { defaultValue: 'PDF' }

   Line 262: "finance_dashboard.load_failed"
   Context: {t('finance_dashboard.load_failed', { defaultValue: 'Unable to load financial data' }

   Line 263: "finance_dashboard.check_connection"
   Context: {t('finance_dashboard.check_connection', { defaultValue: 'Please check your connection or try again.' }

   Line 265: "common.retry"
   Context: {t('common.retry', { defaultValue: 'Retry' }

   Line 274: "finance_dashboard.quick_actions_title"
   Context: {t('finance_dashboard.quick_actions_title', { defaultValue: 'Quick Actions' }

   Line 281: "finance_dashboard.view_transactions"
   Context: {t('finance_dashboard.view_transactions', { defaultValue: 'View Transactions' }

   Line 289: "finance_dashboard.detailed_reports"
   Context: {t('finance_dashboard.detailed_reports', { defaultValue: 'Detailed Reports' }

   Line 299: "dashboard.accessDenied"
   Context: {t('dashboard.accessDenied', { defaultValue: 'Access Denied' }

   Line 301: "finance_dashboard.access_denied_text"
   Context: {t('finance_dashboard.access_denied_text', { defaultValue: 'Only school principals can access the financial dashboard.' }

   Line 304: "navigation.back"
   Context: {t('navigation.back', { defaultValue: 'Back' }

   Line 314: "finance_dashboard.loading"
   Context: {t('finance_dashboard.loading', { defaultValue: 'Loading financial dashboard...' }

   Line 321: "finance_dashboard.title"
   Context: {t('finance_dashboard.title', { defaultValue: 'Finance Dashboard' }

   Line 334: "dashboard.monthly_revenue"
   Context: {renderMetricCard(
                t('dashboard.monthly_revenue', { defaultValue: 'Monthly Revenue' }

   Line 337: "This month"
   Context: { defaultValue: 'This month' }

   Line 341: "dashboard.monthly_expenses"
   Context: {renderMetricCard(
                t('dashboard.monthly_expenses', { defaultValue: 'Monthly Expenses' }

   Line 337: "This month"
   Context: { defaultValue: 'This month' }

   Line 348: "finance_dashboard.net_cash_flow"
   Context: {renderMetricCard(
                t('finance_dashboard.net_cash_flow', { defaultValue: 'Net Cash Flow' }

   Line 355: "finance_dashboard.total_transactions"
   Context: {renderMetricCard(
                t('finance_dashboard.total_transactions', { defaultValue: 'Total Transactions' }

   Line 358: "Last 30 days"
   Context: { defaultValue: 'Last 30 days' }

   Line 85: "Failed to load dashboard data:"
   Context: console.error('Failed to load dashboard data:'

   Line 86: "Failed to load financial dashboard"
   Context: 'Failed to load financial dashboard'

   Line 95: "No Data"
   Context: 'No Data'

   Line 95: "No financial data available to export"
   Context: 'No financial data available to export'

   Line 157: "Expense Categories"
   Context: 'Expense Categories'

   Line 177: "Monthly Comparison"
   Context: 'Monthly Comparison'

   Line 199: "Cash Flow"
   Context: 'Cash Flow'

   Line 262: "Unable to load financial data"
   Context: 'Unable to load financial data'

   Line 274: "Quick Actions"
   Context: 'Quick Actions'

   Line 289: "Detailed Reports"
   Context: 'Detailed Reports'

   Line 299: "Access Denied"
   Context: 'Access Denied'

   Line 321: "Finance Dashboard"
   Context: 'Finance Dashboard'

   Line 335: "Monthly Revenue"
   Context: 'Monthly Revenue'

   Line 337: "This month"
   Context: 'This month'

   Line 342: "Monthly Expenses"
   Context: 'Monthly Expenses'

   Line 337: "This month"
   Context: 'This month'

   Line 349: "Net Cash Flow"
   Context: 'Net Cash Flow'

   Line 356: "Total Transactions"
   Context: 'Total Transactions'

üìÑ app/screens/financial-reports.tsx:
   Line 89: "Failed to load report data:"
   Context: {
      console.error('Failed to load report data:', error);
      Alert.alert('Error', 'Failed to load financial reports');
    }

   Line 98: "No Data"
   Context: {
    if (!overview || !transactions.length) {
      Alert.alert('No Data', 'No financial data available to export');
      return;
    }

   Line 109: "PDF Report"
   Context: {
          text: 'PDF Report',
          onPress: () => {
            const summary = {
              revenue: overview.keyMetrics.monthlyRevenue,
              expenses: overview.keyMetrics.monthlyExpenses,
              cashFlow: overview.keyMetrics.cashFlow,
            }

   Line 127: "Excel Report"
   Context: {
          text: 'Excel Report',
          onPress: () => {
            const summary = {
              revenue: overview.keyMetrics.monthlyRevenue,
              expenses: overview.keyMetrics.monthlyExpenses,
              cashFlow: overview.keyMetrics.cashFlow,
            }

   Line 218: "overview"
   Context: {[
        { key: 'overview', label: 'Overview', icon: 'analytics' }

   Line 220: "trends"
   Context: { key: 'trends', label: 'Trends', icon: 'trending-up' }

   Line 221: "categories"
   Context: { key: 'categories', label: 'Categories', icon: 'pie-chart' }

   Line 222: "comparison"
   Context: { key: 'comparison', label: 'Compare', icon: 'bar-chart' }

   Line 428: "N/A"
   Context: {overview?.categoriesBreakdown[0]?.name || 'N/A'}

   Line 90: "Failed to load report data:"
   Context: console.error('Failed to load report data:'

   Line 100: "No Data"
   Context: Alert.alert('No Data'

   Line 91: "Failed to load financial reports"
   Context: 'Failed to load financial reports'

   Line 100: "No Data"
   Context: 'No Data'

   Line 100: "No financial data available to export"
   Context: 'No financial data available to export'

   Line 110: "PDF Report"
   Context: 'PDF Report'

   Line 128: "Excel Report"
   Context: 'Excel Report'

üìÑ app/screens/financial-transactions.tsx:
   Line 89: "Failed to load transactions:"
   Context: {
      console.error('Failed to load transactions:', error);
      Alert.alert(t('common.error'), t('transactions.load_failed', { defaultValue: 'Failed to load transactions' }

   Line 128: "transactions.no_data"
   Context: {
    if (!filteredTransactions.length) {
      Alert.alert(t('transactions.no_data', { defaultValue: 'No Data' }

   Line 130: "No transactions available to export"
   Context: { defaultValue: 'No transactions available to export' }

   Line 207: "receipt.view_receipts"
   Context: {t('receipt.view_receipts', { defaultValue: 'View Receipts' }

   Line 207: "Attach Receipt"
   Context: { defaultValue: 'Attach Receipt' }

   Line 227: "transactions.filter_title"
   Context: {t('transactions.filter_title', { defaultValue: 'Filter Transactions' }

   Line 234: "transactions.type"
   Context: {t('transactions.type', { defaultValue: 'Transaction Type' }

   Line 236: "all"
   Context: {[
                { key: 'all', label: t('transactions.all_types', { defaultValue: 'All Types' }

   Line 238: "income"
   Context: { key: 'income', label: t('transactions.income', { defaultValue: 'Income' }

   Line 239: "expense"
   Context: { key: 'expense', label: t('transactions.expenses', { defaultValue: 'Expenses' }

   Line 261: "transactions.category"
   Context: {t('transactions.category', { defaultValue: 'Category' }

   Line 263: "all"
   Context: {[
                { key: 'all', label: t('transactions.all_categories', { defaultValue: 'All Categories' }

   Line 304: "transactions.clear_all"
   Context: {t('transactions.clear_all', { defaultValue: 'Clear All' }

   Line 310: "transactions.apply_filters"
   Context: {t('transactions.apply_filters', { defaultValue: 'Apply Filters' }

   Line 322: "dashboard.accessDenied"
   Context: {t('dashboard.accessDenied', { defaultValue: 'Access Denied' }

   Line 324: "transactions.access_denied_text"
   Context: {t('transactions.access_denied_text', { defaultValue: 'Only school principals can access transaction details.' }

   Line 340: "transactions.title"
   Context: {t('transactions.title', { defaultValue: 'Transactions' }

   Line 362: "transactions.search_placeholder"
   Context: {t('transactions.search_placeholder', { defaultValue: 'Search transactions...' }

   Line 375: "transactions.total"
   Context: {t('transactions.total', { defaultValue: 'Total' }

   Line 90: "Failed to load transactions:"
   Context: console.error('Failed to load transactions:'

   Line 91: "Failed to load transactions"
   Context: 'Failed to load transactions'

   Line 130: "No Data"
   Context: 'No Data'

   Line 130: "No transactions available to export"
   Context: 'No transactions available to export'

   Line 207: "Attach Receipt"
   Context: 'Attach Receipt'

   Line 227: "Filter Transactions"
   Context: 'Filter Transactions'

   Line 234: "Transaction Type"
   Context: 'Transaction Type'

   Line 237: "All Types"
   Context: 'All Types'

   Line 264: "All Categories"
   Context: 'All Categories'

   Line 304: "Clear All"
   Context: 'Clear All'

   Line 310: "Apply Filters"
   Context: 'Apply Filters'

   Line 322: "Access Denied"
   Context: 'Access Denied'

üìÑ app/screens/hiring-hub.tsx:
   Line 74: "new"
   Context: { key: 'new', label: 'New', count: stats?.pending_reviews || 0 }

   Line 75: "under_review"
   Context: { key: 'under_review', label: 'Reviewing', count: 0 }

   Line 76: "shortlisted"
   Context: { key: 'shortlisted', label: 'Shortlisted', count: stats?.shortlisted_candidates || 0 }

   Line 77: "interview"
   Context: { key: 'interview', label: 'Interview', count: stats?.scheduled_interviews || 0 }

   Line 78: "offered"
   Context: { key: 'offered', label: 'Offered', count: stats?.pending_offers || 0 }

   Line 84: "Hiring Hub"
   Context: {{ title: 'Hiring Hub', headerShown: false }

   Line 84: "Hiring Hub"
   Context: {{ title: 'Hiring Hub', headerShown: false }

   Line 219: "Location not specified"
   Context: {job.location || 'Location not specified'}

   Line 84: "Hiring Hub"
   Context: 'Hiring Hub'

   Line 84: "Hiring Hub"
   Context: 'Hiring Hub'

   Line 219: "Location not specified"
   Context: 'Location not specified'

üìÑ app/screens/interview-scheduler.tsx:
   Line 51: "Error loading application:"
   Context: {
      console.error('Error loading application:', error);
      Alert.alert('Error', error.message || 'Failed to load application');
    }

   Line 104: "Validation Error"
   Context: {
    // Check if interview is in the past
    const selectedDateTime = new Date(interviewDate);
    selectedDateTime.setHours(interviewTime.getHours(), interviewTime.getMinutes());
    
    if (selectedDateTime < new Date()) {
      Alert.alert('Validation Error', 'Interview date and time must be in the future');
      return false;
    }

   Line 115: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Please provide either a meeting link or location');
      return false;
    }

   Line 149: "Error scheduling interview:"
   Context: {
      console.error('Error scheduling interview:', error);
      Alert.alert('Error', error.message || 'Failed to schedule interview');
    }

   Line 184: "Schedule Interview"
   Context: {{ title: 'Schedule Interview', headerShown: false }

   Line 289: "Additional instructions for the candidate..."
   Context: placeholder="Additional instructions for the candidate..."

   Line 52: "Error loading application:"
   Context: console.error('Error loading application:'

   Line 110: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 110: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 150: "Error scheduling interview:"
   Context: console.error('Error scheduling interview:'

   Line 53: "Failed to load application"
   Context: 'Failed to load application'

   Line 110: "Validation Error"
   Context: 'Validation Error'

   Line 110: "Interview date and time must be in the future"
   Context: 'Interview date and time must be in the future'

   Line 110: "Validation Error"
   Context: 'Validation Error'

   Line 116: "Please provide either a meeting link or location"
   Context: 'Please provide either a meeting link or location'

   Line 151: "Failed to schedule interview"
   Context: 'Failed to schedule interview'

   Line 184: "Schedule Interview"
   Context: 'Schedule Interview'

üìÑ app/screens/job-posting-create.tsx:
   Line 38: "Validation Error"
   Context: {
    if (!title.trim()) {
      Alert.alert('Validation Error', 'Job title is required');
      return false;
    }

   Line 43: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Job description is required');
      return false;
    }

   Line 47: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Employment type is required');
      return false;
    }

   Line 55: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Minimum salary must be a valid number');
      return false;
    }

   Line 59: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Maximum salary must be a valid number');
      return false;
    }

   Line 63: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'Minimum salary cannot be greater than maximum salary');
      return false;
    }

   Line 71: "Location TBA"
   Context: {
    try {
      // Format job details for WhatsApp message
      const jobTitle = jobPosting.title || title;
      const jobLocation = jobPosting.location || location || 'Location TBA';
      const salaryRange =
        jobPosting.salary_range_min && jobPosting.salary_range_max
          ? `R${jobPosting.salary_range_min}

   Line 120: "Failed to send WhatsApp broadcast"
   Context: {
        throw new Error('Failed to send WhatsApp broadcast');
      }

   Line 137: "Error sharing on WhatsApp:"
   Context: {
      console.error('Error sharing on WhatsApp:', error);
      Alert.alert(
        'Sharing Failed',
        'Could not share job posting via WhatsApp. You can still share it manually.',
        [{ text: 'OK', onPress: () => router.back() }

   Line 179: "Share on WhatsApp"
   Context: {
            text: 'Share on WhatsApp',
            onPress: () => handleWhatsAppShare(newJobPosting),
          }

   Line 183: "Not Now"
   Context: {
            text: 'Not Now',
            style: 'cancel',
            onPress: () => router.back(),
          }

   Line 190: "Error creating job posting:"
   Context: {
      console.error('Error creating job posting:', error);
      Alert.alert('Error', error.message || 'Failed to create job posting');
    }

   Line 200: "Create Job Posting"
   Context: {{ title: 'Create Job Posting', headerShown: false }

   Line 235: "Describe the role, responsibilities, and expectations..."
   Context: placeholder="Describe the role, responsibilities, and expectations..."

   Line 250: "List qualifications, experience, certifications..."
   Context: placeholder="List qualifications, experience, certifications..."

   Line 310: "Full-Time"
   Context: label="Full-Time"

   Line 311: "Part-Time"
   Context: label="Part-Time"

   Line 325: "YYYY-MM-DD"
   Context: placeholder="YYYY-MM-DD"

   Line 40: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 40: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 40: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 40: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 40: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 40: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 132: "Success! üéâ"
   Context: Alert.alert(
        'Success! üéâ'

   Line 138: "Error sharing on WhatsApp:"
   Context: console.error('Error sharing on WhatsApp:'

   Line 139: "Sharing Failed"
   Context: Alert.alert(
        'Sharing Failed'

   Line 175: "Job Posted Successfully! üéâ"
   Context: Alert.alert(
        'Job Posted Successfully! üéâ'

   Line 191: "Error creating job posting:"
   Context: console.error('Error creating job posting:'

   Line 40: "Validation Error"
   Context: 'Validation Error'

   Line 40: "Job title is required"
   Context: 'Job title is required'

   Line 40: "Validation Error"
   Context: 'Validation Error'

   Line 44: "Job description is required"
   Context: 'Job description is required'

   Line 40: "Validation Error"
   Context: 'Validation Error'

   Line 48: "Employment type is required"
   Context: 'Employment type is required'

   Line 40: "Validation Error"
   Context: 'Validation Error'

   Line 56: "Minimum salary must be a valid number"
   Context: 'Minimum salary must be a valid number'

   Line 40: "Validation Error"
   Context: 'Validation Error'

   Line 60: "Maximum salary must be a valid number"
   Context: 'Maximum salary must be a valid number'

   Line 40: "Validation Error"
   Context: 'Validation Error'

   Line 64: "Minimum salary cannot be greater than maximum salary"
   Context: 'Minimum salary cannot be greater than maximum salary'

   Line 75: "Location TBA"
   Context: 'Location TBA'

   Line 89: "Employment Type TBA"
   Context: 'Employment Type TBA'

   Line 121: "Failed to send WhatsApp broadcast"
   Context: 'Failed to send WhatsApp broadcast'

   Line 140: "Sharing Failed"
   Context: 'Sharing Failed'

   Line 150: "Missing user or school information"
   Context: 'Missing user or school information'

   Line 180: "Share on WhatsApp"
   Context: 'Share on WhatsApp'

   Line 184: "Not Now"
   Context: 'Not Now'

   Line 192: "Failed to create job posting"
   Context: 'Failed to create job posting'

   Line 200: "Create Job Posting"
   Context: 'Create Job Posting'

   Line 121: "Failed to send WhatsApp broadcast"
   Context: throw new Error('Failed to send WhatsApp broadcast'

üìÑ app/screens/learner-dashboard.tsx:
   Line 8: "Learner Dashboard"
   Context: {{ title: 'Learner Dashboard' }

   Line 8: "Learner Dashboard"
   Context: 'Learner Dashboard'

üìÑ app/screens/lesson-detail.tsx:
   Line 58: "Error loading lesson data:"
   Context: {
      console.error('Error loading lesson data:', error);
      Alert.alert('Error', 'Failed to load lesson details. Please try again.');
    }

   Line 78: "Error starting lesson:"
   Context: {
      console.error('Error starting lesson:', error);
      Alert.alert('Error', 'Failed to start lesson. Please try again.');
    }

   Line 96: "Error completing lesson:"
   Context: {
      console.error('Error completing lesson:', error);
      Alert.alert('Error', 'Failed to complete lesson. Please try again.');
    }

   Line 113: "Error toggling bookmark:"
   Context: {
      console.error('Error toggling bookmark:', error);
      Alert.alert('Error', 'Failed to update bookmark. Please try again.');
    }

   Line 59: "Error loading lesson data:"
   Context: console.error('Error loading lesson data:'

   Line 76: "Lesson Started"
   Context: Alert.alert('Lesson Started'

   Line 79: "Error starting lesson:"
   Context: console.error('Error starting lesson:'

   Line 94: "Congratulations!"
   Context: Alert.alert('Congratulations!'

   Line 97: "Error completing lesson:"
   Context: console.error('Error completing lesson:'

   Line 114: "Error toggling bookmark:"
   Context: console.error('Error toggling bookmark:'

   Line 76: "Lesson Started"
   Context: 'Lesson Started'

   Line 110: "Bookmark Removed"
   Context: 'Bookmark Removed'

   Line 111: "Lesson added to your bookmarks"
   Context: 'Lesson added to your bookmarks'

   Line 111: "Lesson removed from your bookmarks"
   Context: 'Lesson removed from your bookmarks'

üìÑ app/screens/lesson-viewer.tsx:
   Line 77: "Learning Adventure: Colors and Shapes"
   Context: {
        // Fallback: create a demo lesson
        setLesson({
          id: params.lessonId as string,
          title: 'Learning Adventure: Colors and Shapes',
          subject: params.subject as string || 'General Education',
          grade: params.grade as string || 'Preschool',
          duration: '45 minutes',
          objectives: [
            'Identify basic colors and shapes in the environment',
            'Develop fine motor skills through hands-on activities',
            'Practice vocabulary related to colors and shapes',
            'Work collaboratively in small groups'
          ],
          activities: [
            {
              name: 'Shape Hunt',
              duration: '15 minutes',
              description: 'Students search the classroom for different shapes and sort them by type',
              materials: ['Shape cards', 'Collection baskets', 'Sorting mats']
            }

   Line 98: "Color Mixing Magic"
   Context: {
              name: 'Color Mixing Magic',
              duration: '20 minutes', 
              description: 'Hands-on exploration of primary and secondary colors using safe paints',
              materials: ['Washable paints', 'Paper plates', 'Brushes', 'Paper towels']
            }

   Line 104: "Shape Story Time"
   Context: {
              name: 'Shape Story Time',
              duration: '10 minutes',
              description: 'Interactive story featuring shape characters and their adventures'
            }

   Line 132: "Failed to load lesson:"
   Context: {
      console.error('Failed to load lesson:', error);
      Alert.alert('Error', 'Failed to load lesson plan');
    }

   Line 165: "PDF Generated!"
   Context: {
        Alert.alert(
          'PDF Generated!',
          'Your lesson plan PDF is ready to download.',
          [
            { text: 'View', onPress: () => sharePDF(pdfResult.filePath!) }

   Line 177: "PDF generation failed:"
   Context: {
      console.error('PDF generation failed:', error);
      Alert.alert('Error', 'Failed to generate PDF');
    }

   Line 190: "Share Not Available"
   Context: {
        Alert.alert('Share Not Available', 'Sharing is not available on this device');
      }

   Line 193: "Failed to share PDF:"
   Context: {
      console.error('Failed to share PDF:', error);
      Alert.alert('Error', 'Failed to share PDF');
    }

   Line 209: "Failed to share lesson:"
   Context: {
      console.error('Failed to share lesson:', error);
    }

   Line 133: "Failed to load lesson:"
   Context: console.error('Failed to load lesson:'

   Line 166: "PDF Generated!"
   Context: Alert.alert(
          'PDF Generated!'

   Line 178: "PDF generation failed:"
   Context: console.error('PDF generation failed:'

   Line 191: "Share Not Available"
   Context: Alert.alert('Share Not Available'

   Line 194: "Failed to share PDF:"
   Context: console.error('Failed to share PDF:'

   Line 210: "Failed to share lesson:"
   Context: console.error('Failed to share lesson:'

   Line 61: "No lesson ID provided"
   Context: 'No lesson ID provided'

   Line 82: "General Education"
   Context: 'General Education'

   Line 86: "Identify basic colors and shapes in the environment"
   Context: 'Identify basic colors and shapes in the environment'

   Line 88: "Practice vocabulary related to colors and shapes"
   Context: 'Practice vocabulary related to colors and shapes'

   Line 89: "Work collaboratively in small groups"
   Context: 'Work collaboratively in small groups'

   Line 93: "Shape Hunt"
   Context: 'Shape Hunt'

   Line 95: "Students search the classroom for different shapes and sort them by type"
   Context: 'Students search the classroom for different shapes and sort them by type'

   Line 96: "Shape cards"
   Context: 'Shape cards'

   Line 96: "Collection baskets"
   Context: 'Collection baskets'

   Line 96: "Sorting mats"
   Context: 'Sorting mats'

   Line 99: "Color Mixing Magic"
   Context: 'Color Mixing Magic'

   Line 102: "Washable paints"
   Context: 'Washable paints'

   Line 102: "Paper plates"
   Context: 'Paper plates'

   Line 102: "Paper towels"
   Context: 'Paper towels'

   Line 105: "Shape Story Time"
   Context: 'Shape Story Time'

   Line 107: "Interactive story featuring shape characters and their adventures"
   Context: 'Interactive story featuring shape characters and their adventures'

   Line 111: "Shape and color picture books"
   Context: 'Shape and color picture books'

   Line 112: "Digital shape games on tablet"
   Context: 'Digital shape games on tablet'

   Line 113: "Art supplies for creative expression"
   Context: 'Art supplies for creative expression'

   Line 114: "Background music for activities"
   Context: 'Background music for activities'

   Line 117: "Observation checklist for shape identification"
   Context: 'Observation checklist for shape identification'

   Line 118: "Portfolio collection of student artwork"
   Context: 'Portfolio collection of student artwork'

   Line 119: "Informal questioning during activities"
   Context: 'Informal questioning during activities'

   Line 120: "Peer interaction assessment"
   Context: 'Peer interaction assessment'

   Line 124: "Create a shapes book to take home"
   Context: 'Create a shapes book to take home'

   Line 125: "Design patterns using shapes and colors"
   Context: 'Design patterns using shapes and colors'

   Line 126: "Explore shapes in nature during outdoor time"
   Context: 'Explore shapes in nature during outdoor time'

   Line 128: "DashAI"
   Context: 'DashAI'

   Line 134: "Failed to load lesson plan"
   Context: 'Failed to load lesson plan'

   Line 175: "Failed to generate PDF"
   Context: 'Failed to generate PDF'

   Line 175: "Failed to generate PDF"
   Context: 'Failed to generate PDF'

   Line 191: "Share Not Available"
   Context: 'Share Not Available'

   Line 191: "Sharing is not available on this device"
   Context: 'Sharing is not available on this device'

   Line 195: "Failed to share PDF"
   Context: 'Failed to share PDF'

üìÑ app/screens/lessons-hub.tsx:
   Line 36: "Lessons Hub"
   Context: {{ 
          headerShown: true,
          title: 'Lessons Hub',
          headerStyle: {
            backgroundColor: theme.background,
          }

   Line 38: "Lessons Hub"
   Context: 'Lessons Hub'

üìÑ app/screens/lessons-search.tsx:
   Line 56: "Search lessons, topics, or skills..."
   Context: placeholder="Search lessons, topics, or skills..."

üìÑ app/screens/manage-subscription.tsx:
   Line 46: "Manage Subscription"
   Context: {{ title: 'Manage Subscription' }

   Line 46: "Manage Subscription"
   Context: 'Manage Subscription'

   Line 61: "Unable to manage subscription"
   Context: 'Unable to manage subscription'

üìÑ app/screens/org-admin-dashboard.tsx:
   Line 10: "org_admin.title"
   Context: {{ title: t('org_admin.title', { defaultValue: 'Organization Admin' }

   Line 12: "org_admin.overview"
   Context: {t('org_admin.overview', { defaultValue: 'Organization Overview' }

   Line 14: "org_admin.kpi.active_learners"
   Context: {t('org_admin.kpi.active_learners', { defaultValue: 'Active Learners' }

   Line 15: "org_admin.kpi.completion_rate"
   Context: {t('org_admin.kpi.completion_rate', { defaultValue: 'Completion Rate' }

   Line 16: "org_admin.kpi.cert_pipeline"
   Context: {t('org_admin.kpi.cert_pipeline', { defaultValue: 'Cert Pipeline' }

   Line 17: "org_admin.kpi.mrr"
   Context: {t('org_admin.kpi.mrr', { defaultValue: 'MRR' }

   Line 20: "org_admin.quick_actions"
   Context: {t('org_admin.quick_actions', { defaultValue: 'Quick Actions' }

   Line 22: "org_admin.actions.programs"
   Context: {t('org_admin.actions.programs', { defaultValue: 'Programs' }

   Line 23: "org_admin.actions.cohorts"
   Context: {t('org_admin.actions.cohorts', { defaultValue: 'Cohorts' }

   Line 24: "org_admin.actions.instructors"
   Context: {t('org_admin.actions.instructors', { defaultValue: 'Instructors' }

   Line 25: "org_admin.actions.enrollments"
   Context: {t('org_admin.actions.enrollments', { defaultValue: 'Enrollments' }

   Line 28: "org_admin.actions.certifications"
   Context: {t('org_admin.actions.certifications', { defaultValue: 'Certifications' }

   Line 29: "org_admin.actions.placements"
   Context: {t('org_admin.actions.placements', { defaultValue: 'Placements' }

   Line 30: "org_admin.actions.invoices"
   Context: {t('org_admin.actions.invoices', { defaultValue: 'Invoices' }

   Line 31: "org_admin.actions.settings"
   Context: {t('org_admin.actions.settings', { defaultValue: 'Settings' }

   Line 10: "Organization Admin"
   Context: 'Organization Admin'

   Line 12: "Organization Overview"
   Context: 'Organization Overview'

   Line 14: "Active Learners"
   Context: 'Active Learners'

   Line 15: "Completion Rate"
   Context: 'Completion Rate'

   Line 16: "Cert Pipeline"
   Context: 'Cert Pipeline'

   Line 20: "Quick Actions"
   Context: 'Quick Actions'

üìÑ app/screens/org-onboarding.tsx:
   Line 67: "Account creation failed - no user returned"
   Context: {
        throw new Error('Account creation failed - no user returned');
      }

   Line 72: "Verify your email"
   Context: {
        Alert.alert(
          'Verify your email',
          'We\'ve sent you a confirmation email. Please verify your address to continue.',
          [{ text: 'OK' }

   Line 94: "Create account failed"
   Context: {
      console.error('Create account failed', e);
      let errorMessage = 'Failed to create account';
      if (e.message?.includes('already registered')) {
        errorMessage = 'This email is already registered. Please sign in instead.';
      }

   Line 140: "Create org failed"
   Context: {
      console.error('Create org failed', e);
      Alert.alert('Error', e?.message || 'Failed to create organization');
    }

   Line 150: "Organization Onboarding"
   Context: {{ title: 'Organization Onboarding' }

   Line 153: "account_creation"
   Context: {step === 'account_creation' ? 'Create Your Account' : `Welcome, ${adminName || profile?.first_name || 'Admin'}

   Line 156: "account_creation"
   Context: {step === 'account_creation'
            ? 'First, let\'s create your admin account.'
            : step === 'type_selection'
            ? 'Tell us what type of organization you represent.'
            : 'Provide your organization details to complete onboarding.'}

   Line 239: "skills"
   Context: {k === 'skills' ? 'Skills/Training' : k === 'tertiary' ? 'Tertiary/Edu' : 'Organization'}

   Line 267: "Admin full name"
   Context: placeholder="Admin full name"

   Line 73: "Verify your email"
   Context: Alert.alert(
          'Verify your email'

   Line 88: "Account Created!"
   Context: Alert.alert(
        'Account Created!'

   Line 95: "Create account failed"
   Context: console.error('Create account failed'

   Line 135: "Organization Created!"
   Context: Alert.alert(
        'Organization Created!'

   Line 141: "Create org failed"
   Context: console.error('Create org failed'

   Line 74: "Verify your email"
   Context: 'Verify your email'

   Line 95: "Create account failed"
   Context: 'Create account failed'

   Line 96: "Failed to create account"
   Context: 'Failed to create account'

   Line 141: "Create org failed"
   Context: 'Create org failed'

   Line 142: "Failed to create organization"
   Context: 'Failed to create organization'

   Line 150: "Organization Onboarding"
   Context: 'Organization Onboarding'

   Line 153: "Create Your Account"
   Context: 'Create Your Account'

   Line 267: "Admin full name"
   Context: "Admin full name"

   Line 68: "Account creation failed - no user returned"
   Context: throw new Error('Account creation failed - no user returned'

üìÑ app/screens/parent-child-registration.tsx:
   Line 26: "Missing info"
   Context: {
    if (!firstName.trim() || !lastName.trim()) {
      Alert.alert('Missing info', "Please enter your child's first and last name");
      return false;
    }

   Line 31: "Missing date of birth"
   Context: {
      Alert.alert('Missing date of birth', 'Please enter your child\'s date of birth (YYYY-MM-DD)');
      return false;
    }

   Line 35: "Profile missing"
   Context: {
      Alert.alert('Profile missing', 'We could not determine your school context. Please try again after reloading.');
      return false;
    }

   Line 79: "Submission failed"
   Context: {
      Alert.alert('Submission failed', e?.message || 'Please try again');
    }

   Line 102: "Register a Child"
   Context: {{ title: 'Register a Child', headerStyle: styles.headerTint as any, headerTitleStyle: { color: theme.text }

   Line 115: "YYYY-MM-DD"
   Context: placeholder="YYYY-MM-DD"

   Line 119: "Male / Female / Other"
   Context: placeholder="Male / Female / Other"

   Line 147: "Anything else the school should know"
   Context: placeholder="Anything else the school should know"

   Line 28: "Missing info"
   Context: Alert.alert('Missing info'

   Line 32: "Missing date of birth"
   Context: Alert.alert('Missing date of birth'

   Line 36: "Profile missing"
   Context: Alert.alert('Profile missing'

   Line 80: "Submission failed"
   Context: Alert.alert('Submission failed'

   Line 28: "Missing info"
   Context: 'Missing info'

   Line 28: "Please enter your child"
   Context: "Please enter your child'

   Line 32: "Missing date of birth"
   Context: 'Missing date of birth'

   Line 36: "Profile missing"
   Context: 'Profile missing'

   Line 80: "Submission failed"
   Context: 'Submission failed'

   Line 80: "Please try again"
   Context: 'Please try again'

   Line 102: "Register a Child"
   Context: 'Register a Child'

   Line 147: "Anything else the school should know"
   Context: "Anything else the school should know"

üìÑ app/screens/parent-children.tsx:
   Line 64: "Error loading children:"
   Context: {
      console.error('Error loading children:', error);
      Alert.alert('Error', 'Failed to load children');
    }

   Line 82: "Age unknown"
   Context: {
    if (!dateOfBirth) return 'Age unknown';
    try {
      const birth = new Date(dateOfBirth);
      const today = new Date();
      const age = Math.floor((today.getTime() - birth.getTime()) / (365.25 * 24 * 60 * 60 * 1000));
      return age > 0 && age < 10 ? `${age}

   Line 89: "Age unknown"
   Context: {
      return 'Age unknown';
    }

   Line 261: "Not assigned"
   Context: {child.classes?.name || 'Not assigned'}

   Line 219: "My Children"
   Context: title="My Children"

   Line 219: "My Children"
   Context: title="My Children"

   Line 65: "Error loading children:"
   Context: console.error('Error loading children:'

   Line 66: "Failed to load children"
   Context: 'Failed to load children'

   Line 83: "Age unknown"
   Context: 'Age unknown'

   Line 83: "Age unknown"
   Context: 'Age unknown'

   Line 83: "Age unknown"
   Context: 'Age unknown'

   Line 219: "My Children"
   Context: "My Children"

   Line 219: "My Children"
   Context: "My Children"

   Line 261: "Not assigned"
   Context: 'Not assigned'

üìÑ app/screens/parent-dashboard.tsx:
   Line 121: "/sign-in"
   Context: {
    const buttonAction = () => router.replace(isAuthMissing ? '/sign-in' : '/profiles-gate');
    const buttonText = isAuthMissing ? 'Go to Sign in' : 'Go to Profiles';
    const titleText = isAuthMissing ? 'Redirecting to sign in...' : 'Redirecting...';
    const subtitleText = isAuthMissing
      ? 'Your session is missing or expired'
      : 'You will be redirected shortly. If this screen stays, tap below.';

    return (
      <View style={{ flex: 1 }

   Line 123: "Go to Sign in"
   Context: 'Go to Sign in'

   Line 123: "Go to Profiles"
   Context: 'Go to Profiles'

   Line 126: "Your session is missing or expired"
   Context: 'Your session is missing or expired'

üìÑ app/screens/parent-join-by-code.tsx:
   Line 19: "Missing info"
   Context: {
    if (!code.trim() || !email.trim()) {
      Alert.alert('Missing info', 'Enter the school code and your email.');
      return;
    }

   Line 33: "Invalid code"
   Context: {
      Alert.alert('Invalid code', e?.message || 'This code is invalid or expired.');
    }

   Line 40: "Sign in required"
   Context: {
    if (!user?.id) {
      Alert.alert('Sign in required', 'Please sign in first.');
      return;
    }

   Line 45: "Missing code"
   Context: {
      Alert.alert('Missing code', 'Enter a school code first.');
      return;
    }

   Line 71: "Join School by Code"
   Context: {{ title: 'Join School by Code' }

   Line 100: "No expiry"
   Context: {validated.expires_at ? new Date(validated.expires_at).toLocaleString() : 'No expiry'}

   Line 21: "Missing info"
   Context: Alert.alert('Missing info'

   Line 32: "Code valid"
   Context: Alert.alert('Code valid'

   Line 34: "Invalid code"
   Context: Alert.alert('Invalid code'

   Line 42: "Sign in required"
   Context: Alert.alert('Sign in required'

   Line 46: "Missing code"
   Context: Alert.alert('Missing code'

   Line 60: "Joined!"
   Context: Alert.alert('Joined!'

   Line 21: "Missing info"
   Context: 'Missing info'

   Line 30: "Code not found or inactive"
   Context: 'Code not found or inactive'

   Line 32: "Code valid"
   Context: 'Code valid'

   Line 34: "Invalid code"
   Context: 'Invalid code'

   Line 42: "Sign in required"
   Context: 'Sign in required'

   Line 46: "Missing code"
   Context: 'Missing code'

   Line 71: "Join School by Code"
   Context: 'Join School by Code'

   Line 100: "No expiry"
   Context: 'No expiry'

   Line 30: "Code not found or inactive"
   Context: throw new Error('Code not found or inactive'

üìÑ app/screens/parent-link-child.tsx:
   Line 13: "Missing info"
   Context: {
    if (!user) return;
    if (!childFullName && !studentId) {
      Alert.alert('Missing info', 'Enter your child name or student ID');
      return;
    }

   Line 40: "Link Your Child"
   Context: {{ title: 'Link Your Child' }

   Line 48: "Submitting..."
   Context: {submitting ? 'Submitting...' : 'Submit Request'}

   Line 16: "Missing info"
   Context: Alert.alert('Missing info'

   Line 28: "Request sent"
   Context: Alert.alert('Request sent'

   Line 16: "Missing info"
   Context: 'Missing info'

   Line 16: "Enter your child name or student ID"
   Context: 'Enter your child name or student ID'

   Line 28: "Request sent"
   Context: 'Request sent'

   Line 32: "Failed to submit request"
   Context: 'Failed to submit request'

   Line 40: "Link Your Child"
   Context: 'Link Your Child'

   Line 48: "Submit Request"
   Context: 'Submit Request'

üìÑ app/screens/parent-messages.tsx:
   Line 21: "Just now"
   Context: {
  const now = new Date();
  const messageTime = new Date(timestamp);
  const diffInHours = Math.abs(now.getTime() - messageTime.getTime()) / (1000 * 60 * 60);
  
  if (diffInHours < 1) {
    return 'Just now';
  }

   Line 27: "Just now"
   Context: 'Just now'

üìÑ app/screens/parent-picture-of-progress.tsx:
   Line 26: "mathematics"
   Context: { value: 'mathematics', label: 'Mathematics' }

   Line 27: "english"
   Context: { value: 'english', label: 'English' }

   Line 28: "afrikaans"
   Context: { value: 'afrikaans', label: 'Afrikaans' }

   Line 29: "art"
   Context: { value: 'art', label: 'Art & Creativity' }

   Line 30: "science"
   Context: { value: 'science', label: 'Science' }

   Line 31: "physical_education"
   Context: { value: 'physical_education', label: 'Physical Education' }

   Line 32: "life_skills"
   Context: { value: 'life_skills', label: 'Life Skills' }

   Line 33: "music"
   Context: { value: 'music', label: 'Music' }

   Line 34: "reading"
   Context: { value: 'reading', label: 'Reading' }

   Line 35: "writing"
   Context: { value: 'writing', label: 'Writing' }

   Line 36: "social_skills"
   Context: { value: 'social_skills', label: 'Social Skills' }

   Line 37: "other"
   Context: { value: 'other', label: 'Other' }

   Line 89: "Failed to convert image URI:"
   Context: {
          console.error('Failed to convert image URI:', error);
          setDisplayUri(selectedFile.uri); // Fallback to original URI
        }

   Line 258: "common.error"
   Context: {
        Alert.alert(
          t('common.error'),
          'Camera roll permission is required to select images.'
        );
        return;
      }

   Line 282: "common.error"
   Context: {
      Alert.alert(t('common.error'), 'Failed to select image');
    }

   Line 290: "common.error"
   Context: {
        Alert.alert(
          t('common.error'),
          'Camera permission is required to take photos.'
        );
        return;
      }

   Line 313: "common.error"
   Context: {
      Alert.alert(t('common.error'), 'Failed to take photo');
    }

   Line 318: "Title is required"
   Context: {
    const errors: string[] = [];
    
    if (!title.trim()) {
      errors.push('Title is required');
    }

   Line 324: "Subject is required"
   Context: {
      errors.push('Subject is required');
    }

   Line 327: "Description is required"
   Context: {
      errors.push('Description is required');
    }

   Line 330: "Photo is required"
   Context: {
      errors.push('Photo is required');
    }

   Line 371: "common.error"
   Context: {
      Alert.alert(
        t('common.error'),
        error instanceof Error ? error.message : 'Upload failed'
      );
    }

   Line 535: "Unknown size"
   Context: {selectedFile.size ? formatFileSize(selectedFile.size) : 'Unknown size'}

   Line 90: "Failed to convert image URI:"
   Context: console.error('Failed to convert image URI:'

   Line 31: "Physical Education"
   Context: 'Physical Education'

   Line 32: "Life Skills"
   Context: 'Life Skills'

   Line 36: "Social Skills"
   Context: 'Social Skills'

   Line 283: "Failed to select image"
   Context: 'Failed to select image'

   Line 314: "Failed to take photo"
   Context: 'Failed to take photo'

   Line 322: "Title is required"
   Context: 'Title is required'

   Line 325: "Subject is required"
   Context: 'Subject is required'

   Line 328: "Description is required"
   Context: 'Description is required'

   Line 331: "Photo is required"
   Context: 'Photo is required'

   Line 374: "Upload failed"
   Context: 'Upload failed'

   Line 494: "Letter recognition"
   Context: "Letter recognition"

   Line 494: "Color mixing"
   Context: "Color mixing"

   Line 494: "Fine motor skills"
   Context: "Fine motor skills"

   Line 535: "Unknown size"
   Context: 'Unknown size'

üìÑ app/screens/parent-pop-history.tsx:
   Line 30: "proof_of_payment"
   Context: { value: 'proof_of_payment', label: 'Proof of Payment' }

   Line 31: "picture_of_progress"
   Context: { value: 'picture_of_progress', label: 'Picture of Progress' }

   Line 36: "pending"
   Context: { value: 'pending', label: 'Pending Review' }

   Line 37: "approved"
   Context: { value: 'approved', label: 'Approved' }

   Line 38: "rejected"
   Context: { value: 'rejected', label: 'Rejected' }

   Line 39: "needs_revision"
   Context: { value: 'needs_revision', label: 'Needs Revision' }

   Line 522: "Delete Upload"
   Context: {
    Alert.alert(
      'Delete Upload',
      `Are you sure you want to delete "${upload.title}

   Line 534: "common.error"
   Context: {
              Alert.alert(t('common.error'), 'Failed to delete upload');
            }

   Line 523: "Delete Upload"
   Context: Alert.alert(
      'Delete Upload'

   Line 29: "All Types"
   Context: 'All Types'

   Line 30: "Proof of Payment"
   Context: 'Proof of Payment'

   Line 31: "Picture of Progress"
   Context: 'Picture of Progress'

   Line 35: "All Statuses"
   Context: 'All Statuses'

   Line 36: "Pending Review"
   Context: 'Pending Review'

   Line 39: "Needs Revision"
   Context: 'Needs Revision'

   Line 524: "Delete Upload"
   Context: 'Delete Upload'

   Line 535: "Failed to delete upload"
   Context: 'Failed to delete upload'

üìÑ app/screens/parent-pop-upload.tsx:
   Line 16: "Missing info"
   Context: {
    if (!ref.trim() || !amount.trim()) {
      Alert.alert('Missing info', 'Please enter reference and amount');
      return;
    }

   Line 31: "Upload failed"
   Context: {
      Alert.alert('Upload failed', e?.message || 'Please try again');
    }

   Line 48: "Upload PoP"
   Context: {{ title: 'Upload PoP', headerStyle: { backgroundColor: theme.background }

   Line 18: "Missing info"
   Context: Alert.alert('Missing info'

   Line 32: "Upload failed"
   Context: Alert.alert('Upload failed'

   Line 18: "Missing info"
   Context: 'Missing info'

   Line 18: "Please enter reference and amount"
   Context: 'Please enter reference and amount'

   Line 32: "Upload failed"
   Context: 'Upload failed'

   Line 32: "Please try again"
   Context: 'Please try again'

   Line 48: "Upload PoP"
   Context: 'Upload PoP'

üìÑ app/screens/parent-proof-of-payment.tsx:
   Line 26: "cash"
   Context: { value: 'cash', label: 'Cash' }

   Line 27: "bank_transfer"
   Context: { value: 'bank_transfer', label: 'Bank Transfer' }

   Line 28: "card"
   Context: { value: 'card', label: 'Card Payment' }

   Line 29: "mobile_payment"
   Context: { value: 'mobile_payment', label: 'Mobile Payment' }

   Line 30: "other"
   Context: { value: 'other', label: 'Other' }

   Line 229: "common.error"
   Context: {
        Alert.alert(
          t('common.error'),
          'Camera roll permission is required to select images.'
        );
        return;
      }

   Line 253: "common.error"
   Context: {
      Alert.alert(t('common.error'), 'Failed to select image');
    }

   Line 274: "common.error"
   Context: {
      Alert.alert(t('common.error'), 'Failed to select document');
    }

   Line 279: "Title is required"
   Context: {
    const errors: string[] = [];
    
    if (!title.trim()) {
      errors.push('Title is required');
    }

   Line 285: "Valid payment amount is required"
   Context: {
      errors.push('Valid payment amount is required');
    }

   Line 288: "Payment method is required"
   Context: {
      errors.push('Payment method is required');
    }

   Line 291: "Payment receipt file is required"
   Context: {
      errors.push('Payment receipt file is required');
    }

   Line 307: "proof_of_payment"
   Context: {
      const uploadData: CreatePOPUploadData = {
        student_id: studentId,
        upload_type: 'proof_of_payment',
        title: title.trim(),
        description: description.trim() || undefined,
        file_uri: selectedFile.uri,
        file_name: selectedFile.name,
        payment_amount: parseFloat(amount),
        payment_method: paymentMethod,
        payment_date: paymentDate.toISOString().split('T')[0], // YYYY-MM-DD format
        payment_reference: paymentReference.trim() || undefined,
      }

   Line 333: "common.error"
   Context: {
      Alert.alert(
        t('common.error'),
        error instanceof Error ? error.message : 'Upload failed'
      );
    }

   Line 492: "Unknown size"
   Context: {selectedFile.size ? formatFileSize(selectedFile.size) : 'Unknown size'}

   Line 27: "Bank Transfer"
   Context: 'Bank Transfer'

   Line 28: "Card Payment"
   Context: 'Card Payment'

   Line 29: "Mobile Payment"
   Context: 'Mobile Payment'

   Line 254: "Failed to select image"
   Context: 'Failed to select image'

   Line 275: "Failed to select document"
   Context: 'Failed to select document'

   Line 283: "Title is required"
   Context: 'Title is required'

   Line 286: "Valid payment amount is required"
   Context: 'Valid payment amount is required'

   Line 289: "Payment method is required"
   Context: 'Payment method is required'

   Line 292: "Payment receipt file is required"
   Context: 'Payment receipt file is required'

   Line 336: "Upload failed"
   Context: 'Upload failed'

   Line 492: "Unknown size"
   Context: 'Unknown size'

üìÑ app/screens/parent-registration.tsx:
   Line 32: "Invalid Code"
   Context: {
        Alert.alert('Invalid Code', 'The invitation code is not valid.');
        setInvitationCode(undefined);
        return;
      }

   Line 39: "Inactive Code"
   Context: {
        Alert.alert('Inactive Code', 'This invitation code is no longer active.');
        setInvitationCode(undefined);
        return;
      }

   Line 46: "Expired Code"
   Context: {
        Alert.alert('Expired Code', 'This invitation code has expired.');
        setInvitationCode(undefined);
        return;
      }

   Line 53: "Code Limit Reached"
   Context: {
        Alert.alert('Code Limit Reached', 'This invitation code has reached its maximum number of uses.');
        setInvitationCode(undefined);
        return;
      }

   Line 62: "Invitation code validation error:"
   Context: {
      console.error('Invitation code validation error:', error);
      Alert.alert('Validation Error', 'Failed to validate invitation code.');
      setInvitationCode(undefined);
    }

   Line 113: "Failed to redeem invitation code:"
   Context: {
            console.error('Failed to redeem invitation code:', redeemError);
            Alert.alert(
              'Registration Successful',
              'Your account was created, but we couldn\'t link you to the school. You can join later using the invitation code.',
              [{ text: 'OK' }

   Line 120: "Success!"
   Context: {
            Alert.alert(
              'Success!',
              'Your account has been created and linked to the school.',
              [{ text: 'OK' }

   Line 127: "Invitation code redemption error:"
   Context: {
          console.error('Invitation code redemption error:', codeError);
        }

   Line 138: "Registration error:"
   Context: {
      console.error('Registration error:', error);
      handleRegistrationError(error.message || 'Registration failed');
    }

   Line 144: "Registration error:"
   Context: {
    console.error('Registration error:', error);
    // Error handling is done by the form component
  }

   Line 173: "Parent Registration"
   Context: {{
          title: 'Parent Registration',
          headerShown: true,
          headerStyle: {
            backgroundColor: theme.surface,
          }

   Line 33: "Invalid Code"
   Context: Alert.alert('Invalid Code'

   Line 40: "Inactive Code"
   Context: Alert.alert('Inactive Code'

   Line 47: "Expired Code"
   Context: Alert.alert('Expired Code'

   Line 54: "Code Limit Reached"
   Context: Alert.alert('Code Limit Reached'

   Line 61: "Code Validated"
   Context: Alert.alert('Code Validated'

   Line 63: "Invitation code validation error:"
   Context: console.error('Invitation code validation error:'

   Line 64: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 114: "Failed to redeem invitation code:"
   Context: console.error('Failed to redeem invitation code:'

   Line 115: "Registration Successful"
   Context: Alert.alert(
              'Registration Successful'

   Line 121: "Success!"
   Context: Alert.alert(
              'Success!'

   Line 128: "Invitation code redemption error:"
   Context: console.error('Invitation code redemption error:'

   Line 139: "Registration error:"
   Context: console.error('Registration error:'

   Line 139: "Registration error:"
   Context: console.error('Registration error:'

   Line 33: "Invalid Code"
   Context: 'Invalid Code'

   Line 40: "Inactive Code"
   Context: 'Inactive Code'

   Line 47: "Expired Code"
   Context: 'Expired Code'

   Line 54: "Code Limit Reached"
   Context: 'Code Limit Reached'

   Line 61: "Code Validated"
   Context: 'Code Validated'

   Line 64: "Validation Error"
   Context: 'Validation Error'

   Line 116: "Registration Successful"
   Context: 'Registration Successful'

   Line 140: "Registration failed"
   Context: 'Registration failed'

   Line 174: "Parent Registration"
   Context: 'Parent Registration'

üìÑ app/screens/payments/return.tsx:
   Line 53: "failed"
   Context: {
    if (pollingCount >= maxPollingAttempts) {
      setPaymentStatus('failed');
      setMessage('Payment processing timed out. Please contact support if you were charged.');
      track('payment_activation_timeout', {
        polling_attempts: pollingCount,
        invoice_id: params.invoice_id,
      }

   Line 64: "failed"
   Context: {
      // Poll for active subscription
      const ownerId = profile?.organization_id || profile?.id;
      if (!ownerId) {
        setPaymentStatus('failed');
        setMessage('Unable to verify user information. Please contact support.');
        return;
      }

   Line 82: "Subscription polling error:"
   Context: {
        console.error('Subscription polling error:', error);
      }

   Line 86: "success"
   Context: {
        // Found active subscription - payment successful!
        setSubscription(activeSubscription);
        setPaymentStatus('success');
        setMessage('Payment successful! Your subscription is now active.');
        
        track('payment_activation_success', {
          subscription_id: activeSubscription.id,
          plan_id: activeSubscription.plan_id,
          polling_attempts: pollingCount + 1,
        }

   Line 107: "Payment verification error:"
   Context: {
      console.error('Payment verification error:', error);
      setPaymentStatus('failed');
      setMessage('Unable to verify payment status. Please contact support.');
      
      track('payment_verification_error', {
        error: error.message,
        polling_attempts: pollingCount,
      }

   Line 135: "Contact Support"
   Context: {
    Alert.alert(
      'Contact Support',
      'Please reach out to our support team with your transaction details.',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 141: "Send Email"
   Context: {
          text: 'Send Email',
          onPress: () => {
            const subject = encodeURIComponent('Payment Issue - Transaction ' + (params.transaction_id || 'Unknown'));
            const body = encodeURIComponent(`Hi Support Team,

I experienced an issue with my payment:
- Status: ${params.status}

   Line 149: "N/A"
   Context: {params.invoice_id || 'N/A'}

   Line 150: "N/A"
   Context: {params.transaction_id || 'N/A'}

   Line 150: "N/A"
   Context: {params.transaction_id || 'N/A'}

   Line 188: "Payment Status"
   Context: {{
          title: 'Payment Status',
          headerStyle: { backgroundColor: theme.surface }

   Line 209: "success"
   Context: {paymentStatus === 'success' && 'Payment Successful!'}

   Line 210: "failed"
   Context: {paymentStatus === 'failed' && 'Payment Failed'}

   Line 211: "cancelled"
   Context: {paymentStatus === 'cancelled' && 'Payment Cancelled'}

   Line 212: "processing"
   Context: {paymentStatus === 'processing' && 'Processing Payment...'}

   Line 286: "success"
   Context: {paymentStatus === 'success' ? 'Continue to Dashboard' : 'Back to Pricing'}

   Line 83: "Subscription polling error:"
   Context: console.error('Subscription polling error:'

   Line 108: "Payment verification error:"
   Context: console.error('Payment verification error:'

   Line 136: "Contact Support"
   Context: Alert.alert(
      'Contact Support'

   Line 160: "Support Email"
   Context: Alert.alert('Support Email'

   Line 137: "Contact Support"
   Context: 'Contact Support'

   Line 142: "Send Email"
   Context: 'Send Email'

   Line 160: "Support Email"
   Context: 'Support Email'

   Line 189: "Payment Status"
   Context: 'Payment Status'

   Line 210: "Payment Failed"
   Context: 'Payment Failed'

   Line 211: "Payment Cancelled"
   Context: 'Payment Cancelled'

   Line 286: "Continue to Dashboard"
   Context: 'Continue to Dashboard'

   Line 286: "Back to Pricing"
   Context: 'Back to Pricing'

üìÑ app/screens/pdf-generator.tsx:
   Line 61: "prompt"
   Context: {
    id: 'prompt',
    title: 'Prompt',
    icon: 'chatbubble-ellipses-outline',
    description: 'Generate PDFs from natural language descriptions',
  }

   Line 67: "template"
   Context: {
    id: 'template',
    title: 'Template',
    icon: 'library-outline',
    description: 'Use pre-built templates with customizable fields',
  }

   Line 73: "structured"
   Context: {
    id: 'structured',
    title: 'Structured',
    icon: 'document-text-outline',
    description: 'Create documents using structured forms',
  }

   Line 290: "prompt"
   Context: {
        case 'prompt':
          if (!promptForm.content.trim()) {
            throw new Error('Please enter some content to preview');
          }

   Line 295: "Preview Document"
   Context: {
            type: promptForm.documentType,
            title: promptForm.title || 'Preview Document',
            prompt: promptForm.content,
          }

   Line 303: "Please select a template first"
   Context: {
            throw new Error('Please select a template first');
          }

   Line 315: "Structured Document"
   Context: {
            type: structuredForm.documentType,
            title: (structuredForm.formData as any).title || 'Structured Document',
            sections: [{
              id: 'main',
              title: 'Content',
              markdown: JSON.stringify(structuredForm.formData, null, 2),
            }

   Line 345: "Failed to generate preview"
   Context: {
      setPreview(prev => ({
        ...prev,
        isLoading: false,
        error: error instanceof Error ? error.message : 'Failed to generate preview',
      }

   Line 352: "error"
   Context: {
        type: 'error',
        message: error instanceof Error ? error.message : 'Failed to generate preview',
        dismissible: true,
        timeout: 10000,
      }

   Line 361: "prompt"
   Context: {
    try {
      setIsGenerating(true);
      
      let observable;
      switch (activeTab) {
        case 'prompt':
          if (!promptForm.content.trim()) {
            throw new Error('Please enter some content to generate PDF');
          }

   Line 303: "Please select a template first"
   Context: {
            throw new Error('Please select a template first');
          }

   Line 408: "success"
   Context: {
            type: 'success',
            message: 'PDF generated successfully!',
            dismissible: true,
            timeout: 5000,
          }

   Line 415: "error"
   Context: {
          setIsGenerating(false);
          addNotification({
            type: 'error',
            message: error.message || 'Failed to generate PDF',
            dismissible: true,
            timeout: 10000,
          }

   Line 426: "error"
   Context: {
      setIsGenerating(false);
      addNotification({
        type: 'error',
        message: error instanceof Error ? error.message : 'Failed to start PDF generation',
        dismissible: true,
        timeout: 10000,
      }

   Line 459: "info"
   Context: {
    addNotification({
      type: 'info',
      message: 'PDF shared successfully',
      dismissible: true,
      timeout: 3000,
    }

   Line 468: "info"
   Context: {
    addNotification({
      type: 'info',
      message: 'PDF sent to printer',
      dismissible: true,
      timeout: 3000,
    }

   Line 477: "info"
   Context: {
    addNotification({
      type: 'info',
      message: 'PDF downloaded successfully',
      dismissible: true,
      timeout: 3000,
    }

   Line 536: "Show preview"
   Context: {previewCollapsed ? 'Show preview' : 'Hide preview'}

   Line 548: "PDF Settings"
   Context: accessibilityLabel="PDF Settings"

   Line 65: "Generate PDFs from natural language descriptions"
   Context: 'Generate PDFs from natural language descriptions'

   Line 77: "Create documents using structured forms"
   Context: 'Create documents using structured forms'

   Line 293: "Please enter some content to preview"
   Context: 'Please enter some content to preview'

   Line 297: "Preview Document"
   Context: 'Preview Document'

   Line 304: "Please select a template first"
   Context: 'Please select a template first'

   Line 317: "Structured Document"
   Context: 'Structured Document'

   Line 349: "Failed to generate preview"
   Context: 'Failed to generate preview'

   Line 349: "Failed to generate preview"
   Context: 'Failed to generate preview'

   Line 369: "Please enter some content to generate PDF"
   Context: 'Please enter some content to generate PDF'

   Line 304: "Please select a template first"
   Context: 'Please select a template first'

   Line 419: "Failed to generate PDF"
   Context: 'Failed to generate PDF'

   Line 430: "Failed to start PDF generation"
   Context: 'Failed to start PDF generation'

   Line 462: "PDF shared successfully"
   Context: 'PDF shared successfully'

   Line 471: "PDF sent to printer"
   Context: 'PDF sent to printer'

   Line 480: "PDF downloaded successfully"
   Context: 'PDF downloaded successfully'

   Line 536: "Show preview"
   Context: 'Show preview'

   Line 536: "Hide preview"
   Context: 'Hide preview'

   Line 548: "PDF Settings"
   Context: "PDF Settings"

   Line 293: "Please enter some content to preview"
   Context: throw new Error('Please enter some content to preview'

   Line 304: "Please select a template first"
   Context: throw new Error('Please select a template first'

   Line 369: "Please enter some content to generate PDF"
   Context: throw new Error('Please enter some content to generate PDF'

   Line 304: "Please select a template first"
   Context: throw new Error('Please select a template first'

üìÑ app/screens/petty-cash-reconcile.tsx:
   Line 47: "R200"
   Context: { value: 200, label: 'R200', color: '#8B5A2B' }

   Line 48: "R100"
   Context: { value: 100, label: 'R100', color: '#4A90E2' }

   Line 49: "R50"
   Context: { value: 50, label: 'R50', color: '#E94B3C' }

   Line 50: "R20"
   Context: { value: 20, label: 'R20', color: '#F5A623' }

   Line 51: "R10"
   Context: { value: 10, label: 'R10', color: '#7ED321' }

   Line 160: "Error loading reconciliation data:"
   Context: {
      console.error('Error loading reconciliation data:', error);
      Alert.alert(t('common.error'), t('petty_cash_reconcile.load_error'));
    }

   Line 231: "Error performing reconciliation:"
   Context: {
      console.error('Error performing reconciliation:', error);
      Alert.alert(t('common.error'), t('petty_cash_reconcile.save_error'));
    }

   Line 239: "en-ZA"
   Context: {
    return new Intl.NumberFormat('en-ZA', {
      style: 'currency',
      currency: 'ZAR',
    }

   Line 161: "Error loading reconciliation data:"
   Context: console.error('Error loading reconciliation data:'

   Line 232: "Error performing reconciliation:"
   Context: console.error('Error performing reconciliation:'

   Line 201: "No school assigned to your account"
   Context: 'No school assigned to your account'

üìÑ app/screens/petty-cash.tsx:
   Line 225: "Error loading transactions:"
   Context: {
        console.error('Error loading transactions:', transError);
      }

   Line 285: "Error loading petty cash data:"
   Context: {
      console.error('Error loading petty cash data:', error);
      Alert.alert(t('common.error'), t('petty_cash.error_failed_load'));
    }

   Line 458: "Withdrawal/Adjustment"
   Context: {
            school_id: userProfile?.preschool_id,
            account_id: accountId,
            amount,
            description: expenseForm.description.trim(),
            category: 'Withdrawal/Adjustment',
            type: 'adjustment',
            reference_number: expenseForm.receipt_number.trim() || null,
            created_by: user?.id,
            status: 'approved',
          }

   Line 490: "en-ZA"
   Context: {
    return new Intl.NumberFormat('en-ZA', {
      style: 'currency',
      currency: 'ZAR',
    }

   Line 506: "Stationery & Supplies"
   Context: {
    switch (category) {
      case 'Stationery & Supplies': return 'library';
      case 'Refreshments': return 'cafe';
      case 'Maintenance & Repairs': return 'construct';
      case 'Travel & Transport': return 'car';
      case 'Communication': return 'call';
      case 'Medical & First Aid': return 'medical';
      case 'Cleaning Supplies': return 'sparkles';
      case 'Utilities (small amounts)': return 'flash';
      case 'Airtime (Mobile)': return 'phone-portrait';
      case 'Data Bundles': return 'wifi';
      case 'Groceries': return 'cart';
      case 'Transport': return 'car';
      case 'Emergency Expenses': return 'alert-circle';
      case 'Replenishment': return 'add-circle';
      case 'Withdrawal/Adjustment': return 'arrow-down-circle';
      default: return 'receipt';
    }

   Line 540: "file://"
   Context: {
        if (imageUri.startsWith('file://') && typeof window !== 'undefined') {
          // Web environment with file:// URI - this shouldn't happen but handle gracefully
          console.warn('File URI detected in web environment, cannot process:', imageUri);
          return null;
        }

   Line 552: "Error fetching image:"
   Context: {
        console.error('Error fetching image:', fetchError);
        return null;
      }

   Line 579: "Failed to record petty cash receipt row:"
   Context: {
        // Non-blocking: log and continue
        console.warn('Failed to record petty cash receipt row:', e);
      }

   Line 585: "Error uploading receipt:"
   Context: {
      console.error('Error uploading receipt:', error);
      return null;
    }

   Line 591: "receipt.attach_receipt"
   Context: {
    try {
      // Choose method
      Alert.alert(
        t('receipt.attach_receipt', { defaultValue: 'Attach Receipt' }

   Line 596: "Choose how to add your receipt:"
   Context: { defaultValue: 'Choose how to add your receipt:' }

   Line 598: "receipt.take_photo"
   Context: {
            text: t('receipt.take_photo', { defaultValue: 'Take Photo' }

   Line 613: "common.success"
   Context: {
                  const path = await uploadReceiptImage(result.assets[0].uri, transactionId);
                  if (path) Alert.alert(t('common.success'), t('receipt.attached_success', { defaultValue: 'Receipt attached' }

   Line 617: "common.error"
   Context: {
                Alert.alert(t('common.error'), t('receipt.attached_failed', { defaultValue: 'Failed to attach receipt' }

   Line 622: "receipt.choose_from_gallery"
   Context: {
            text: t('receipt.choose_from_gallery', { defaultValue: 'Choose from Gallery' }

   Line 613: "common.success"
   Context: {
                  const path = await uploadReceiptImage(result.assets[0].uri, transactionId);
                  if (path) Alert.alert(t('common.success'), t('receipt.attached_success', { defaultValue: 'Receipt attached' }

   Line 617: "common.error"
   Context: {
                Alert.alert(t('common.error'), t('receipt.attached_failed', { defaultValue: 'Failed to attach receipt' }

   Line 667: "common.info"
   Context: {
        setReceiptsVisible(false);
        Alert.alert(t('common.info'), t('receipt.no_receipts', { defaultValue: 'No receipts attached for this transaction.' }

   Line 690: "common.error"
   Context: {
      setReceiptsVisible(false);
      Alert.alert(t('common.error'), t('receipt.error_select_image', { defaultValue: 'Failed to load receipts' }

   Line 737: "Error taking photo:"
   Context: {
      console.error('Error taking photo:', error);
      Alert.alert(t('common.error'), t('receipt.error_take_photo'));
    }

   Line 761: "Error picking image:"
   Context: {
      console.error('Error picking image:', error);
      Alert.alert(t('common.error'), t('receipt.error_select_image'));
    }

   Line 798: "common.error"
   Context: {
      Alert.alert(t('common.error'), t('transaction.failed_cancel', 'Failed to cancel transaction'));
    }

   Line 803: "common.not_allowed"
   Context: {
    try {
      const allowed = await canDelete();
      if (!allowed) {
        Alert.alert(t('common.not_allowed', 'Not allowed'), t('transaction.principals_only_delete', 'Only principals can delete transactions'));
        return;
      }

   Line 817: "common.error"
   Context: {
      Alert.alert(t('common.error'), t('transaction.failed_delete', 'Failed to delete transaction'));
    }

   Line 843: "Error reversing transaction:"
   Context: {
        console.error('Error reversing transaction:', error);
        throw error;
      }

   Line 849: "Reversal error:"
   Context: {
      console.error('Reversal error:', error);
      Alert.alert(t('common.error'), error?.message || t('transaction.failed_reverse', 'Failed to create reversal'));
    }

   Line 896: "petty_cash.loading_data"
   Context: {t('petty_cash.loading_data', 'Loading petty cash data...')}

   Line 932: "petty_cash.low_balance_warning"
   Context: {t('petty_cash.low_balance_warning', 'Low balance - consider replenishment')}

   Line 1010: "Withdrawal/Adjustment"
   Context: { defaultValue: 'Withdrawal/Adjustment' }

   Line 1021: "30d"
   Context: { key: '30d', label: t('common.last_30_days', { defaultValue: 'Last 30 days' }

   Line 1022: "all"
   Context: { key: 'all', label: t('common.all_time', { defaultValue: 'All time' }

   Line 1023: "custom"
   Context: { key: 'custom', label: t('common.custom_range', { defaultValue: 'Custom range' }

   Line 1089: "receipt.view_receipts"
   Context: {async () => {
                        const options: any[] = [];
                    options.push({ text: t('receipt.view_receipts', { defaultValue: 'View Receipts' }

   Line 1092: "receipt.attach_receipt"
   Context: { text: t('receipt.attach_receipt', { defaultValue: 'Attach Receipt' }

   Line 1093: "petty_cash.cancel"
   Context: {
                      options.push({ text: t('petty_cash.cancel', { defaultValue: 'Cancel' }

   Line 1098: "common.delete"
   Context: {
                          options.push({ text: t('common.delete', { defaultValue: 'Delete' }

   Line 1101: "common.close"
   Context: { text: t('common.close', { defaultValue: 'Close' }

   Line 1102: "Transaction Options"
   Context: { defaultValue: 'Transaction Options' }

   Line 1102: "Choose an action"
   Context: { defaultValue: 'Choose an action' }

   Line 1104: "transaction.options"
   Context: {t('transaction.options', { defaultValue: 'Transaction Options' }

   Line 1141: "common.uploading"
   Context: {uploadingReceipt ? t('common.uploading', 'Uploading...') : t('common.add', 'Add')}

   Line 1187: "common.optional"
   Context: {t('common.optional', 'Optional')}

   Line 1198: "receipt.receipt_image"
   Context: {t('receipt.receipt_image', 'Receipt Image')}

   Line 1187: "common.optional"
   Context: {t('common.optional', 'Optional')}

   Line 1216: "receipt.add_receipt_photo"
   Context: {t('receipt.add_receipt_photo', 'Add Receipt Photo')}

   Line 1217: "receipt.tap_to_photo_gallery"
   Context: {t('receipt.tap_to_photo_gallery', 'Tap to take photo or select from gallery')}

   Line 1223: "petty_cash.available_balance"
   Context: {t('petty_cash.available_balance', 'Available Balance')}

   Line 1244: "common.custom_range"
   Context: {t('common.custom_range', { defaultValue: 'Custom range' }

   Line 1249: "common.apply"
   Context: {t('common.apply', { defaultValue: 'Apply' }

   Line 1255: "common.start_date"
   Context: {t('common.start_date', { defaultValue: 'Start date' }

   Line 1264: "common.end_date"
   Context: {t('common.end_date', { defaultValue: 'End date' }

   Line 1286: "common.close"
   Context: {t('common.close', { defaultValue: 'Close' }

   Line 1288: "receipt.receipt_image"
   Context: {t('receipt.receipt_image', { defaultValue: 'Receipt Image' }

   Line 1296: "common.loading"
   Context: {t('common.loading', { defaultValue: 'Loading...' }

   Line 1334: "category.search_categories"
   Context: {t('category.search_categories', { defaultValue: 'Search categories' }

   Line 1373: "common.record"
   Context: {t('common.record', 'Record')}

   Line 1379: "petty_cash.replenishment_amount"
   Context: {t('petty_cash.replenishment_amount', 'Replenishment Amount')}

   Line 1390: "petty_cash.current_status"
   Context: {t('petty_cash.current_status', 'Current Status')}

   Line 1395: "petty_cash.replenishment_recommendation"
   Context: {t('petty_cash.replenishment_recommendation', 'Recommended replenishment when balance falls below R1,000')}

   Line 1422: "petty_cash.withdrawal_amount"
   Context: {t('petty_cash.withdrawal_amount', 'Withdrawal Amount')}

   Line 1433: "petty_cash.withdrawal_reason"
   Context: {t('petty_cash.withdrawal_reason', 'Reason for Withdrawal')}

   Line 1438: "petty_cash.withdrawal_reason_placeholder"
   Context: {t('petty_cash.withdrawal_reason_placeholder', 'Why are you withdrawing this cash?')}

   Line 1445: "petty_cash.reference_number"
   Context: {t('petty_cash.reference_number', 'Reference Number')}

   Line 1187: "common.optional"
   Context: {t('common.optional', 'Optional')}

   Line 1450: "petty_cash.reference_placeholder"
   Context: {t('petty_cash.reference_placeholder', 'Bank deposit slip, reference number, etc.')}

   Line 1455: "common.important"
   Context: {t('common.important', 'Important')}

   Line 1460: "petty_cash.withdrawal_notice"
   Context: {t('petty_cash.withdrawal_notice', 'This withdrawal will reduce your petty cash balance. Use this when cash needs to be deposited back to the main account or removed for other reasons.')}

   Line 1260: "YYYY-MM-DD"
   Context: placeholder="YYYY-MM-DD"

   Line 1260: "YYYY-MM-DD"
   Context: placeholder="YYYY-MM-DD"

   Line 226: "Error loading transactions:"
   Context: console.error('Error loading transactions:'

   Line 286: "Error loading petty cash data:"
   Context: console.error('Error loading petty cash data:'

   Line 543: "File URI detected in web environment, cannot process:"
   Context: console.warn('File URI detected in web environment, cannot process:'

   Line 553: "Error fetching image:"
   Context: console.error('Error fetching image:'

   Line 581: "Failed to record petty cash receipt row:"
   Context: console.warn('Failed to record petty cash receipt row:'

   Line 586: "Error uploading receipt:"
   Context: console.error('Error uploading receipt:'

   Line 738: "Error taking photo:"
   Context: console.error('Error taking photo:'

   Line 762: "Error picking image:"
   Context: console.error('Error picking image:'

   Line 844: "Error reversing transaction:"
   Context: console.error('Error reversing transaction:'

   Line 850: "Reversal error:"
   Context: console.error('Reversal error:'

   Line 61: "Teaching Materials"
   Context: 'Teaching Materials'

   Line 70: "Student Snacks"
   Context: 'Student Snacks'

   Line 71: "Kitchen Supplies"
   Context: 'Kitchen Supplies'

   Line 75: "Cleaning Supplies"
   Context: 'Cleaning Supplies'

   Line 76: "Cleaning Services"
   Context: 'Cleaning Services'

   Line 77: "Pest Control"
   Context: 'Pest Control'

   Line 78: "Waste Removal"
   Context: 'Waste Removal'

   Line 79: "Minor Repairs"
   Context: 'Minor Repairs'

   Line 88: "Data Bundles"
   Context: 'Data Bundles'

   Line 92: "First Aid Supplies"
   Context: 'First Aid Supplies'

   Line 94: "Safety Equipment"
   Context: 'Safety Equipment'

   Line 100: "Parking Fees"
   Context: 'Parking Fees'

   Line 102: "Vehicle Maintenance"
   Context: 'Vehicle Maintenance'

   Line 107: "Advertising Materials"
   Context: 'Advertising Materials'

   Line 111: "Staff Welfare"
   Context: 'Staff Welfare'

   Line 112: "Staff Uniforms"
   Context: 'Staff Uniforms'

   Line 113: "Staff Training Materials"
   Context: 'Staff Training Materials'

   Line 118: "Birthday Parties"
   Context: 'Birthday Parties'

   Line 119: "Sports Day Supplies"
   Context: 'Sports Day Supplies'

   Line 120: "Field Trip Expenses"
   Context: 'Field Trip Expenses'

   Line 121: "Parent Meeting Refreshments"
   Context: 'Parent Meeting Refreshments'

   Line 124: "Emergency Expenses"
   Context: 'Emergency Expenses'

   Line 125: "Bank Charges"
   Context: 'Bank Charges'

   Line 126: "Petty Licensing Fees"
   Context: 'Petty Licensing Fees'

   Line 75: "Cleaning Supplies"
   Context: 'Cleaning Supplies'

   Line 88: "Data Bundles"
   Context: 'Data Bundles'

   Line 124: "Emergency Expenses"
   Context: 'Emergency Expenses'

   Line 595: "Attach Receipt"
   Context: 'Attach Receipt'

   Line 599: "Take Photo"
   Context: 'Take Photo'

   Line 615: "Receipt attached"
   Context: 'Receipt attached'

   Line 618: "Failed to attach receipt"
   Context: 'Failed to attach receipt'

   Line 623: "Choose from Gallery"
   Context: 'Choose from Gallery'

   Line 615: "Receipt attached"
   Context: 'Receipt attached'

   Line 618: "Failed to attach receipt"
   Context: 'Failed to attach receipt'

   Line 692: "Failed to load receipts"
   Context: 'Failed to load receipts'

   Line 799: "Failed to cancel transaction"
   Context: 'Failed to cancel transaction'

   Line 807: "Not allowed"
   Context: 'Not allowed'

   Line 807: "Only principals can delete transactions"
   Context: 'Only principals can delete transactions'

   Line 818: "Failed to delete transaction"
   Context: 'Failed to delete transaction'

   Line 847: "Transaction reversed successfully"
   Context: 'Transaction reversed successfully'

   Line 851: "Failed to create reversal"
   Context: 'Failed to create reversal'

   Line 1022: "All time"
   Context: 'All time'

   Line 1023: "Custom range"
   Context: 'Custom range'

   Line 595: "Attach Receipt"
   Context: 'Attach Receipt'

   Line 1102: "Transaction Options"
   Context: 'Transaction Options'

   Line 1102: "Choose an action"
   Context: 'Choose an action'

   Line 1102: "Transaction Options"
   Context: 'Transaction Options'

   Line 1198: "Receipt Image"
   Context: 'Receipt Image'

   Line 1216: "Add Receipt Photo"
   Context: 'Add Receipt Photo'

   Line 1217: "Tap to take photo or select from gallery"
   Context: 'Tap to take photo or select from gallery'

   Line 1223: "Available Balance"
   Context: 'Available Balance'

   Line 1023: "Custom range"
   Context: 'Custom range'

   Line 1255: "Start date"
   Context: 'Start date'

   Line 1264: "End date"
   Context: 'End date'

   Line 1198: "Receipt Image"
   Context: 'Receipt Image'

   Line 1334: "Search categories"
   Context: 'Search categories'

   Line 1379: "Replenishment Amount"
   Context: 'Replenishment Amount'

   Line 1390: "Current Status"
   Context: 'Current Status'

   Line 1422: "Withdrawal Amount"
   Context: 'Withdrawal Amount'

   Line 1433: "Reason for Withdrawal"
   Context: 'Reason for Withdrawal'

   Line 1445: "Reference Number"
   Context: 'Reference Number'

üìÑ app/screens/principal-announcement.tsx:
   Line 31: "Not signed in"
   Context: 'Not signed in'

   Line 43: "No school found for your profile"
   Context: 'No school found for your profile'

   Line 46: "Failed to create announcement"
   Context: 'Failed to create announcement'

   Line 47: "Announcement created"
   Context: 'Announcement created'

   Line 46: "Failed to create announcement"
   Context: 'Failed to create announcement'

üìÑ app/screens/principal-approval-dashboard.tsx:
   Line 76: "Error loading school:"
   Context: {
        console.error('Error loading school:', schoolError);
        return;
      }

   Line 92: "Error loading approval data:"
   Context: {
      console.error('Error loading approval data:', error);
      Alert.alert('Error', 'Failed to load approval data');
    }

   Line 209: "Principal Approvals"
   Context: {{ title: 'Principal Approvals', headerShown: true }

   Line 231: "Pending POPs"
   Context: label="Pending POPs"

   Line 232: "Pending Petty Cash"
   Context: label="Pending Petty Cash"

   Line 233: "Total Pending"
   Context: label="Total Pending"

   Line 235: "Overdue Receipts"
   Context: label="Overdue Receipts"

   Line 296: "Add any notes for this review"
   Context: placeholder="Add any notes for this review"

   Line 306: "Provide a reason if rejecting"
   Context: placeholder="Provide a reason if rejecting"

   Line 296: "Add any notes for this review"
   Context: placeholder="Add any notes for this review"

   Line 306: "Provide a reason if rejecting"
   Context: placeholder="Provide a reason if rejecting"

   Line 77: "Error loading school:"
   Context: console.error('Error loading school:'

   Line 93: "Error loading approval data:"
   Context: console.error('Error loading approval data:'

   Line 66: "No school assigned to your account"
   Context: 'No school assigned to your account'

   Line 94: "Failed to load approval data"
   Context: 'Failed to load approval data'

   Line 122: "Payment proof approved successfully"
   Context: 'Payment proof approved successfully'

   Line 127: "Failed to approve payment proof"
   Context: 'Failed to approve payment proof'

   Line 133: "Please provide a rejection reason"
   Context: 'Please provide a rejection reason'

   Line 146: "Payment proof rejected"
   Context: 'Payment proof rejected'

   Line 152: "Failed to reject payment proof"
   Context: 'Failed to reject payment proof'

   Line 170: "Petty cash request approved"
   Context: 'Petty cash request approved'

   Line 176: "Failed to approve petty cash request"
   Context: 'Failed to approve petty cash request'

   Line 133: "Please provide a rejection reason"
   Context: 'Please provide a rejection reason'

   Line 195: "Petty cash request rejected"
   Context: 'Petty cash request rejected'

   Line 201: "Failed to reject petty cash request"
   Context: 'Failed to reject petty cash request'

   Line 209: "Principal Approvals"
   Context: 'Principal Approvals'

   Line 231: "Pending POPs"
   Context: "Pending POPs"

   Line 232: "Pending Petty Cash"
   Context: "Pending Petty Cash"

   Line 233: "Total Pending"
   Context: "Total Pending"

   Line 235: "Overdue Receipts"
   Context: "Overdue Receipts"

   Line 296: "Add any notes for this review"
   Context: "Add any notes for this review"

   Line 306: "Provide a reason if rejecting"
   Context: "Provide a reason if rejecting"

   Line 296: "Add any notes for this review"
   Context: "Add any notes for this review"

   Line 306: "Provide a reason if rejecting"
   Context: "Provide a reason if rejecting"

üìÑ app/screens/principal-dashboard.tsx:
   Line 30: "Principal dashboard: No school found, redirecting to onboarding"
   Context: {
    // Only make routing decisions after profile has loaded
    if (!isStillLoading && !orgId) {
      // If user is not authenticated, the guard above will handle navigation
      if (!user) return;
      console.log('Principal dashboard: No school found, redirecting to onboarding', {
        profile,
        organization_id: profile?.organization_id,
        preschool_id: (profile as any)?.preschool_id,
        profileLoading,
        loading
      }

   Line 43: "Redirect to onboarding failed"
   Context: {
        console.debug('Redirect to onboarding failed', e);
      }

   Line 72: "Redirect failed"
   Context: { console.debug('Redirect failed', e); }

   Line 35: "Principal dashboard: No school found, redirecting to onboarding"
   Context: console.log('Principal dashboard: No school found, redirecting to onboarding'

   Line 44: "Redirect to onboarding failed"
   Context: 'Redirect to onboarding failed'

   Line 72: "Redirect failed"
   Context: 'Redirect failed'

üìÑ app/screens/principal-onboarding.tsx:
   Line 49: "starter_classes"
   Context: { id: 'starter_classes', name: 'Starter Class Groups' }

   Line 50: "starter_lessons"
   Context: { id: 'starter_lessons', name: 'AI Lesson Starters' }

   Line 51: "attendance_pack"
   Context: { id: 'attendance_pack', name: 'Attendance + Reports Pack' }

   Line 74: "Load onboarding state failed"
   Context: { console.debug('Load onboarding state failed', e); }

   Line 96: "Persist onboarding state failed"
   Context: { console.debug('Persist onboarding state failed', e); }

   Line 145: "email_verification"
   Context: {data.next_step === 'email_verification' ? 'You may receive an email verification shortly. ' : ''}

   Line 151: "Create school failed"
   Context: {
      console.error('Create school failed', e);
      
      // Enhanced error messages
      let errorMessage = 'Failed to create school';
      if (e.message?.includes('already exists')) {
        errorMessage = 'A school with this name already exists. Please choose a different name.';
      }

   Line 158: "This email is already registered. Please use a different email address."
   Context: {
        errorMessage = 'This email is already registered. Please use a different email address.';
      }

   Line 175: "Invalid email"
   Context: {
    const trimmed = emailInput.trim().toLowerCase();
    if (!trimmed) return;
    if (!/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(trimmed)) {
      Alert.alert('Invalid email', 'Please enter a valid email address.');
      return;
    }

   Line 195: "Missing school"
   Context: {
    if (!schoolId || !user?.id) {
      Alert.alert('Missing school', 'Please create the school first.');
      return;
    }

   Line 212: "Invite failed"
   Context: {
          console.debug('Invite failed', e);
          results.push({ email, status: 'error' }

   Line 239: "Setup complete"
   Context: {
    // In future: call seeding RPC for selectedTemplates
    Alert.alert('Setup complete', 'Your school is ready. You can adjust settings anytime.');
    try { AsyncStorage?.removeItem('onboarding_principal_state'); }

   Line 253: "type_selection"
   Context: {steps.map((s, idx) => {
          const stepNames: Record<Step, string> = {
            'type_selection': 'Type',
            'details': 'School',
            'invites': 'Teachers', 
            'templates': 'Setup',
            'subscription': 'Plan',
            'review': 'Review'
          }

   Line 278: "Principal Onboarding"
   Context: {{ title: 'Principal Onboarding' }

   Line 282: "type_selection"
   Context: {step === 'type_selection' 
            ? 'First, tell us what type of educational institution you run.'
            : `Let's set up your ${schoolType === 'preschool' ? 'preschool' : schoolType === 'k12_school' ? 'school' : 'educational institution'}

   Line 294: "preschool"
   Context: {[{id: 'preschool', name: 'Preschool', desc: 'Early childhood education (ages 0-6)'}

   Line 295: "k12_school"
   Context: {id: 'k12_school', name: 'K-12 School', desc: 'Primary & secondary education (grades K-12)'}

   Line 296: "hybrid"
   Context: {id: 'hybrid', name: 'Hybrid Institution', desc: 'Combined preschool and K-12 programs'}

   Line 323: "preschool"
   Context: {schoolType === 'preschool' ? 'Preschool' : schoolType === 'k12_school' ? 'K-12 School' : 'Hybrid Institution'}

   Line 405: "Send invites & Continue"
   Context: {emails.length ? 'Send invites & Continue' : 'Skip & Continue'}

   Line 344: "Principal full name"
   Context: placeholder="Principal full name"

   Line 143: "School Created!"
   Context: Alert.alert(
        'School Created!'

   Line 152: "Create school failed"
   Context: console.error('Create school failed'

   Line 179: "Invalid email"
   Context: Alert.alert('Invalid email'

   Line 197: "Missing school"
   Context: Alert.alert('Missing school'

   Line 218: "Invites processed"
   Context: Alert.alert('Invites processed'

   Line 241: "Setup complete"
   Context: Alert.alert('Setup complete'

   Line 49: "Starter Class Groups"
   Context: 'Starter Class Groups'

   Line 50: "AI Lesson Starters"
   Context: 'AI Lesson Starters'

   Line 74: "Load onboarding state failed"
   Context: 'Load onboarding state failed'

   Line 96: "Persist onboarding state failed"
   Context: 'Persist onboarding state failed'

   Line 152: "Create school failed"
   Context: 'Create school failed'

   Line 155: "Failed to create school"
   Context: 'Failed to create school'

   Line 179: "Invalid email"
   Context: 'Invalid email'

   Line 197: "Missing school"
   Context: 'Missing school'

   Line 213: "Invite failed"
   Context: 'Invite failed'

   Line 218: "Invites processed"
   Context: 'Invites processed'

   Line 241: "Setup complete"
   Context: 'Setup complete'

   Line 278: "Principal Onboarding"
   Context: 'Principal Onboarding'

   Line 296: "Hybrid Institution"
   Context: 'Hybrid Institution'

   Line 296: "Hybrid Institution"
   Context: 'Hybrid Institution'

   Line 344: "Principal full name"
   Context: "Principal full name"

üìÑ app/screens/principal-parent-invite-code.tsx:
   Line 46: "Missing context"
   Context: {
    if (!schoolId || !user?.id) {
      Alert.alert('Missing context', 'You need a school to create invites.');
      return;
    }

   Line 51: "preschool"
   Context: {
      setLoading(true);
      const uses = unlimited ? null : Number(maxUses) > 0 ? Number(maxUses) : 1;
      const days = Number(expiryDays);
      const expiresAt = isFinite(days) && days > 0
        ? new Date(Date.now() + days * 24 * 60 * 60 * 1000).toISOString()
        : null;

      const created = await InviteCodeService.createInviteCode({
        invitationType: inviteType,
        preschoolId: schoolId!,
        organizationId: organizationId,
        organizationKind: preschoolId ? 'preschool' : 'org',
        invitedBy: user.id,
        maxUses: uses,
        expiresAt,
        description: inviteType === 'parent' ? 'Parent invite' : inviteType === 'student' ? 'Learner invite' : 'Member invite',
      }

   Line 85: "Clipboard not available"
   Context: {
        throw new Error('Clipboard not available');
      }

   Line 88: "Copy failed"
   Context: {
      Alert.alert('Copy failed', 'Clipboard not available on this platform');
    }

   Line 104: "Share failed"
   Context: {
      Alert.alert('Share failed', e?.message || 'Unable to open share dialog');
    }

   Line 116: "WhatsApp not available"
   Context: {
        Alert.alert('WhatsApp not available', 'Please install WhatsApp or use Share/Copy instead.');
      }

   Line 119: "Share failed"
   Context: {
      Alert.alert('Share failed', e?.message || 'Unable to share via WhatsApp');
    }

   Line 139: "Create School-wide Invite"
   Context: {{ 
          title: 'Create School-wide Invite',
          headerShown: false,
          headerBackVisible: false,
        }

   Line 155: "parent"
   Context: {(['parent','student','member'] as const).map((type) => {
                  const selected = inviteType === type;
                  const label = type === 'parent' ? 'Parent' : type === 'student' ? 'Student' : 'Member';
                  return (
                    <TouchableOpacity
                      key={type}

   Line 178: "No code"
   Context: {
                    if (!latest) return Alert.alert('No code', 'Generate an invite first.');
                    try {
                      if (Clipboard?.setStringAsync) {
                        await Clipboard.setStringAsync(link);
                        Alert.alert('Copied', 'Share link copied to clipboard');
                      }

   Line 184: "Clipboard not available"
   Context: {
                        throw new Error('Clipboard not available');
                      }

   Line 187: "Copy failed"
   Context: {
                      Alert.alert('Copy failed', 'Clipboard not available on this platform');
                    }

   Line 192: "No code"
   Context: {
                    if (!latest) return Alert.alert('No code', 'Generate an invite first.');
                    try {
                      const message = buildShareMessage(latest.code);
                      await Share.share({ message }

   Line 197: "Share failed"
   Context: {
                      Alert.alert('Share failed', e?.message || 'Unable to open share dialog');
                    }

   Line 202: "No code"
   Context: {
                    if (!latest) return Alert.alert('No code', 'Generate an invite first.');
                    try {
                      const message = encodeURIComponent(buildShareMessage(latest.code));
                      const url = `whatsapp://send?text=${message}

   Line 210: "Share failed"
   Context: {
                      Alert.alert('Share failed', e?.message || 'Unable to share via WhatsApp');
                    }

   Line 258: "Working‚Ä¶"
   Context: {loading ? 'Working‚Ä¶' : 'Generate Invite Code'}

   Line 282: "No expiry"
   Context: {item.expires_at ? new Date(item.expires_at).toLocaleString() : 'No expiry'}

   Line 48: "Missing context"
   Context: Alert.alert('Missing context'

   Line 72: "Invite created"
   Context: Alert.alert('Invite created'

   Line 89: "Copy failed"
   Context: Alert.alert('Copy failed'

   Line 105: "Share failed"
   Context: Alert.alert('Share failed'

   Line 117: "WhatsApp not available"
   Context: Alert.alert('WhatsApp not available'

   Line 105: "Share failed"
   Context: Alert.alert('Share failed'

   Line 179: "No code"
   Context: Alert.alert('No code'

   Line 89: "Copy failed"
   Context: Alert.alert('Copy failed'

   Line 179: "No code"
   Context: Alert.alert('No code'

   Line 105: "Share failed"
   Context: Alert.alert('Share failed'

   Line 179: "No code"
   Context: Alert.alert('No code'

   Line 117: "WhatsApp not available"
   Context: Alert.alert('WhatsApp not available'

   Line 105: "Share failed"
   Context: Alert.alert('Share failed'

   Line 38: "Failed to load invite codes"
   Context: 'Failed to load invite codes'

   Line 48: "Missing context"
   Context: 'Missing context'

   Line 67: "Parent invite"
   Context: 'Parent invite'

   Line 67: "Learner invite"
   Context: 'Learner invite'

   Line 67: "Member invite"
   Context: 'Member invite'

   Line 72: "Invite created"
   Context: 'Invite created'

   Line 74: "Failed to create invite"
   Context: 'Failed to create invite'

   Line 84: "Invite code copied to clipboard"
   Context: 'Invite code copied to clipboard'

   Line 86: "Clipboard not available"
   Context: 'Clipboard not available'

   Line 89: "Copy failed"
   Context: 'Copy failed'

   Line 89: "Clipboard not available on this platform"
   Context: 'Clipboard not available on this platform'

   Line 105: "Share failed"
   Context: 'Share failed'

   Line 105: "Unable to open share dialog"
   Context: 'Unable to open share dialog'

   Line 117: "WhatsApp not available"
   Context: 'WhatsApp not available'

   Line 105: "Share failed"
   Context: 'Share failed'

   Line 120: "Unable to share via WhatsApp"
   Context: 'Unable to share via WhatsApp'

   Line 130: "Failed to update"
   Context: 'Failed to update'

   Line 179: "No code"
   Context: 'No code'

   Line 183: "Share link copied to clipboard"
   Context: 'Share link copied to clipboard'

   Line 86: "Clipboard not available"
   Context: 'Clipboard not available'

   Line 89: "Copy failed"
   Context: 'Copy failed'

   Line 89: "Clipboard not available on this platform"
   Context: 'Clipboard not available on this platform'

   Line 179: "No code"
   Context: 'No code'

   Line 105: "Share failed"
   Context: 'Share failed'

   Line 105: "Unable to open share dialog"
   Context: 'Unable to open share dialog'

   Line 179: "No code"
   Context: 'No code'

   Line 117: "WhatsApp not available"
   Context: 'WhatsApp not available'

   Line 105: "Share failed"
   Context: 'Share failed'

   Line 120: "Unable to share via WhatsApp"
   Context: 'Unable to share via WhatsApp'

   Line 258: "Generate Invite Code"
   Context: 'Generate Invite Code'

   Line 282: "No expiry"
   Context: 'No expiry'

   Line 86: "Clipboard not available"
   Context: throw new Error('Clipboard not available'

   Line 86: "Clipboard not available"
   Context: throw new Error('Clipboard not available'

üìÑ app/screens/principal-parent-requests.tsx:
   Line 58: "Parent Requests"
   Context: {{ 
          title: 'Parent Requests',
          headerShown: true,
          headerBackVisible: true,
        }

   Line 77: "Enter student ID"
   Context: {item.student_id || 'Enter student ID'}

   Line 34: "Student required"
   Context: Alert.alert('Student required'

   Line 34: "Student required"
   Context: 'Student required'

   Line 39: "Parent linked to student"
   Context: 'Parent linked to student'

   Line 42: "Failed to approve"
   Context: 'Failed to approve'

   Line 51: "Failed to reject"
   Context: 'Failed to reject'

   Line 59: "Parent Requests"
   Context: 'Parent Requests'

   Line 77: "Enter student ID"
   Context: 'Enter student ID'

üìÑ app/screens/principal-parents.tsx:
   Line 82: "Load parents failed"
   Context: {
      console.error('Load parents failed', e);
      Alert.alert('Error', e?.message || 'Failed to load parents');
    }

   Line 119: "Search by name, email, or phone"
   Context: placeholder="Search by name, email, or phone"

   Line 83: "Load parents failed"
   Context: console.error('Load parents failed'

   Line 83: "Load parents failed"
   Context: 'Load parents failed'

   Line 84: "Failed to load parents"
   Context: 'Failed to load parents'

üìÑ app/screens/principal-seat-management.tsx:
   Line 53: "Failed to resolve school id:"
   Context: {
        console.debug('Failed to resolve school id:', e);
      }

   Line 65: "Load failed"
   Context: { setError(e?.message || 'Load failed'); }

   Line 114: "Fallback users query failed:"
   Context: {
          console.debug('Fallback users query failed:', fallbackErr);
        }

   Line 135: "Failed to load seats via RPC:"
   Context: {
            console.warn('Failed to load seats via RPC:', seatsError);
          }

   Line 138: "RPC call failed:"
   Context: {
          console.warn('RPC call failed:', rpcErr);
        }

   Line 144: "Failed to load teachers for seat management"
   Context: {
      console.debug('Failed to load teachers for seat management', e);
    }

   Line 169: "Missing subscription or email"
   Context: {
    if (!subscriptionId || !teacherEmail) { setError('Missing subscription or email'); return; }

   Line 171: "Teacher not found by email"
   Context: {
      setAssigning(true); setError(null); setSuccess(null);
      const userId = await findTeacherIdByEmail(teacherEmail);
      if (!userId) { setError('Teacher not found by email'); return; }

   Line 183: "Failed to assign seat"
   Context: {
      setError(error?.message || 'Failed to assign seat');
    }

   Line 169: "Missing subscription or email"
   Context: {
    if (!subscriptionId || !teacherEmail) { setError('Missing subscription or email'); return; }

   Line 192: "Teacher not found by email"
   Context: {
      setRevoking(true); setError(null); setSuccess(null);
      const userId = await findTeacherIdByEmail(teacherEmail);
      if (!userId) { setError('Teacher not found by email'); return; }

   Line 202: "Failed to revoke seat"
   Context: {
      setError(error?.message || 'Failed to revoke seat');
    }

   Line 214: "Seat Management"
   Context: {{ title: 'Seat Management', headerStyle: { backgroundColor: theme.headerBackground }

   Line 232: "No active subscription for this school"
   Context: {async () => {
            if (!subscriptionId) { setError('No active subscription for this school'); return; }

   Line 246: "Bulk assignment failed"
   Context: {
              setError(e?.message || 'Bulk assignment failed');
            }

   Line 285: "Failed to start trial"
   Context: {
                    setError(e?.message || 'Failed to start trial');
                  }

   Line 383: "No active subscription for this school"
   Context: {async () => {
                          if (!subscriptionId) { 
                            setError('No active subscription for this school'); 
                            return; 
                          }

   Line 459: "No active subscription for this school"
   Context: {async () => {
                          if (!subscriptionId) { setError('No active subscription for this school'); return; }

   Line 136: "Failed to load seats via RPC:"
   Context: console.warn('Failed to load seats via RPC:'

   Line 139: "RPC call failed:"
   Context: console.warn('RPC call failed:'

   Line 65: "Load failed"
   Context: 'Load failed'

   Line 145: "Failed to load teachers for seat management"
   Context: 'Failed to load teachers for seat management'

   Line 170: "Missing subscription or email"
   Context: 'Missing subscription or email'

   Line 174: "Teacher not found by email"
   Context: 'Teacher not found by email'

   Line 178: "Seat assigned successfully"
   Context: 'Seat assigned successfully'

   Line 184: "Failed to assign seat"
   Context: 'Failed to assign seat'

   Line 170: "Missing subscription or email"
   Context: 'Missing subscription or email'

   Line 174: "Teacher not found by email"
   Context: 'Teacher not found by email'

   Line 199: "Seat revoked successfully"
   Context: 'Seat revoked successfully'

   Line 203: "Failed to revoke seat"
   Context: 'Failed to revoke seat'

   Line 214: "Seat Management"
   Context: 'Seat Management'

   Line 233: "No active subscription for this school"
   Context: 'No active subscription for this school'

   Line 247: "Bulk assignment failed"
   Context: 'Bulk assignment failed'

   Line 286: "Failed to start trial"
   Context: 'Failed to start trial'

   Line 233: "No active subscription for this school"
   Context: 'No active subscription for this school'

   Line 233: "No active subscription for this school"
   Context: 'No active subscription for this school'

üìÑ app/screens/school-registration.tsx:
   Line 39: "infants"
   Context: {
  preschool: [
    { id: 'infants', label: 'Infants (6m-12m)', description: 'Infant care programs' }

   Line 42: "toddlers"
   Context: { id: 'toddlers', label: 'Toddlers (1-2 years)', description: 'Toddler development programs' }

   Line 43: "pre_k"
   Context: { id: 'pre_k', label: 'Pre-K (3-4 years)', description: 'Pre-kindergarten preparation' }

   Line 44: "reception"
   Context: { id: 'reception', label: 'Reception (4-5 years)', description: 'School readiness programs' }

   Line 47: "foundation"
   Context: { id: 'foundation', label: 'Foundation Phase (Grade R-3)', description: 'Ages 5-9' }

   Line 48: "intermediate"
   Context: { id: 'intermediate', label: 'Intermediate Phase (Grade 4-6)', description: 'Ages 9-12' }

   Line 49: "senior"
   Context: { id: 'senior', label: 'Senior Phase (Grade 7-9)', description: 'Ages 12-15' }

   Line 50: "fet"
   Context: { id: 'fet', label: 'FET Phase (Grade 10-12)', description: 'Ages 15-18' }

   Line 41: "infants"
   Context: { id: 'infants', label: 'Infants (6m-12m)', description: 'Infant care programs' }

   Line 42: "toddlers"
   Context: { id: 'toddlers', label: 'Toddlers (1-2 years)', description: 'Toddler development programs' }

   Line 43: "pre_k"
   Context: { id: 'pre_k', label: 'Pre-K (3-4 years)', description: 'Pre-kindergarten preparation' }

   Line 47: "foundation"
   Context: { id: 'foundation', label: 'Foundation Phase (Grade R-3)', description: 'Ages 5-9' }

   Line 48: "intermediate"
   Context: { id: 'intermediate', label: 'Intermediate Phase (Grade 4-6)', description: 'Ages 9-12' }

   Line 49: "senior"
   Context: { id: 'senior', label: 'Senior Phase (Grade 7-9)', description: 'Ages 12-15' }

   Line 50: "fet"
   Context: { id: 'fet', label: 'FET Phase (Grade 10-12)', description: 'Ages 15-18' }

   Line 102: "Failed to load saved registration data"
   Context: {
        console.debug('Failed to load saved registration data', e);
      }

   Line 117: "Failed to save registration data"
   Context: {
      console.debug('Failed to save registration data', e);
    }

   Line 151: "School name is required"
   Context: {
      if (!formData.schoolName.trim()) {
        newErrors.schoolName = 'School name is required';
      }

   Line 155: "At least one grade level must be selected"
   Context: {
        newErrors.gradelevels = 'At least one grade level must be selected';
      }

   Line 160: "Valid contact email is required"
   Context: {
      if (!formData.contactEmail || !/^[^\s@]+@[^\s@]+\.[^\s@]+$/.test(formData.contactEmail)) {
        newErrors.contactEmail = 'Valid contact email is required';
      }

   Line 164: "Contact phone is required"
   Context: {
        newErrors.contactPhone = 'Contact phone is required';
      }

   Line 169: "Principal name is required"
   Context: {
      if (!formData.principalName.trim()) {
        newErrors.principalName = 'Principal name is required';
      }

   Line 173: "Valid principal email is required"
   Context: {
        newErrors.principalEmail = 'Valid principal email is required';
      }

   Line 241: "Continue to Verification"
   Context: {
            text: 'Continue to Verification',
            onPress: () => {
              router.push({
                pathname: '/screens/email-verification',
                params: {
                  schoolId: data.school_id,
                  email: formData.contactEmail,
                  verificationId: data.verification_id
                }

   Line 257: "Registration failed:"
   Context: {
      console.error('Registration failed:', error);
      
      Alert.alert(
        'Registration Failed',
        error.message || 'Failed to register school. Please try again.',
        [{ text: 'OK' }

   Line 295: "School Details"
   Context: {step === 1 && 'School Details'}

   Line 296: "Contact Info"
   Context: {step === 2 && 'Contact Info'}

   Line 297: "Principal Info"
   Context: {step === 3 && 'Principal Info'}

   Line 329: "preschool"
   Context: {formData.schoolType === 'preschool' && 'Preschool'}

   Line 330: "k12_school"
   Context: {formData.schoolType === 'k12_school' && 'K-12 School'}

   Line 331: "hybrid"
   Context: {formData.schoolType === 'hybrid' && 'Hybrid Institution'}

   Line 329: "preschool"
   Context: {formData.schoolType === 'preschool' && 'Preschool'}

   Line 330: "k12_school"
   Context: {formData.schoolType === 'k12_school' && 'K-12 School'}

   Line 331: "hybrid"
   Context: {formData.schoolType === 'hybrid' && 'Hybrid Institution'}

   Line 490: "School Registration"
   Context: {{
        title: 'School Registration',
        headerStyle: { backgroundColor: theme.headerBackground }

   Line 527: "Register School"
   Context: {currentStep === totalSteps ? 'Register School' : 'Continue'}

   Line 435: "Dr. Jane Smith"
   Context: placeholder="Dr. Jane Smith"

   Line 237: "School Registered Successfully!"
   Context: Alert.alert(
        'School Registered Successfully!'

   Line 258: "Registration failed:"
   Context: console.error('Registration failed:'

   Line 260: "Registration Failed"
   Context: Alert.alert(
        'Registration Failed'

   Line 41: "Infant care programs"
   Context: 'Infant care programs'

   Line 42: "Toddler development programs"
   Context: 'Toddler development programs'

   Line 44: "School readiness programs"
   Context: 'School readiness programs'

   Line 41: "Infant care programs"
   Context: 'Infant care programs'

   Line 42: "Toddler development programs"
   Context: 'Toddler development programs'

   Line 103: "Failed to load saved registration data"
   Context: 'Failed to load saved registration data'

   Line 118: "Failed to save registration data"
   Context: 'Failed to save registration data'

   Line 153: "School name is required"
   Context: 'School name is required'

   Line 156: "At least one grade level must be selected"
   Context: 'At least one grade level must be selected'

   Line 162: "Valid contact email is required"
   Context: 'Valid contact email is required'

   Line 165: "Contact phone is required"
   Context: 'Contact phone is required'

   Line 171: "Principal name is required"
   Context: 'Principal name is required'

   Line 174: "Valid principal email is required"
   Context: 'Valid principal email is required'

   Line 242: "Continue to Verification"
   Context: 'Continue to Verification'

   Line 261: "Registration Failed"
   Context: 'Registration Failed'

   Line 295: "School Details"
   Context: 'School Details'

   Line 296: "Contact Info"
   Context: 'Contact Info'

   Line 297: "Principal Info"
   Context: 'Principal Info'

   Line 331: "Hybrid Institution"
   Context: 'Hybrid Institution'

   Line 331: "Hybrid Institution"
   Context: 'Hybrid Institution'

   Line 491: "School Registration"
   Context: 'School Registration'

   Line 527: "Register School"
   Context: 'Register School'

üìÑ app/screens/school-settings.tsx:
   Line 42: "Invalid number"
   Context: {
        Alert.alert('Invalid number', 'Please enter a valid WhatsApp number in E.164 format (e.g. +27821234567)');
        return;
      }

   Line 66: "School Settings"
   Context: {{ title: 'School Settings', headerStyle: { backgroundColor: theme.background }

   Line 43: "Invalid number"
   Context: Alert.alert('Invalid number'

   Line 32: "Failed to load school settings"
   Context: 'Failed to load school settings'

   Line 43: "Invalid number"
   Context: 'Invalid number'

   Line 48: "WhatsApp number updated"
   Context: 'WhatsApp number updated'

   Line 50: "Failed to save number"
   Context: 'Failed to save number'

   Line 66: "School Settings"
   Context: 'School Settings'

üìÑ app/screens/school-type-selection.tsx:
   Line 33: "preschool"
   Context: {
    id: 'preschool',
    name: 'Preschool',
    description: 'For early childhood education centers, daycares, and nurseries.',
    features: [
      'Simplified attendance tracking',
      'Parent communication tools',
      'Daily activity reporting',
      'Child development tracking',
      'Photo sharing with parents'
    ],
    icon: require('@/assets/icons/preschool-icon.png'),
    primaryColor: '#00f5ff',
    secondaryColor: '#0ea5b6'
  }

   Line 48: "k12_school"
   Context: {
    id: 'k12_school',
    name: 'K-12 School',
    description: 'For primary and secondary schools with formal grade levels.',
    features: [
      'Grade and curriculum management',
      'Timetable scheduling',
      'Homework and assignment tracking',
      'Student performance analytics',
      'Test and exam management'
    ],
    icon: require('@/assets/icons/k12-icon.png'),
    primaryColor: '#7e22ce',
    secondaryColor: '#6b21a8'
  }

   Line 63: "hybrid"
   Context: {
    id: 'hybrid',
    name: 'Hybrid Institution',
    description: 'For educational centers that offer both preschool and K-12 programs.',
    features: [
      'Combined grade/class management',
      'Seamless transition between levels',
      'Unified administration tools',
      'Age-appropriate features by level',
      'Custom role management'
    ],
    icon: require('@/assets/icons/hybrid-icon.png'),
    primaryColor: '#16a34a',
    secondaryColor: '#15803d'
  }

   Line 103: "Failed to load saved school type"
   Context: {
          console.debug('Failed to load saved school type', e);
        }

   Line 142: "Failed to save school type or navigate"
   Context: {
      console.error('Failed to save school type or navigate', e);
    }

   Line 188: "preschool"
   Context: {typeDetails.id === 'preschool' && 
                  'Early childhood education centers, daycares, nurseries, and montessori schools serving children typically aged 0-6 years.'}

   Line 190: "k12_school"
   Context: {typeDetails.id === 'k12_school' && 
                  'Primary and secondary schools, including government, private, and independent schools serving grades K-12 (ages 5-18).'}

   Line 192: "hybrid"
   Context: {typeDetails.id === 'hybrid' && 
                  'Combined institutions offering both preschool and K-12 education, or schools that provide continuous education from early childhood through secondary levels.'}

   Line 198: "preschool"
   Context: {typeDetails.id === 'preschool' && 
                  'Your dashboard will focus on daily activities, child development tracking, and simplified attendance. Features are optimized for early childhood educators and daycare providers.'}

   Line 200: "k12_school"
   Context: {typeDetails.id === 'k12_school' && 
                  'Your platform will include grade management, formal assessment tools, and advanced academic tracking. The interface is designed for teachers working with formal curriculum requirements.'}

   Line 202: "hybrid"
   Context: {typeDetails.id === 'hybrid' && 
                  'You\'ll have access to both preschool and K-12 features in a unified system. Administrators can customize which features are available to different grade levels and staff members.'}

   Line 234: "Select School Type"
   Context: {{ 
        title: 'Select School Type',
        headerStyle: { backgroundColor: '#0b1220' }

   Line 305: "Selected Type"
   Context: {
                selectedType ? SCHOOL_TYPES.find(t => t.id === selectedType)?.name : 'Selected Type'
              }

   Line 143: "Failed to save school type or navigate"
   Context: console.error('Failed to save school type or navigate'

   Line 38: "Simplified attendance tracking"
   Context: 'Simplified attendance tracking'

   Line 39: "Parent communication tools"
   Context: 'Parent communication tools'

   Line 40: "Daily activity reporting"
   Context: 'Daily activity reporting'

   Line 41: "Child development tracking"
   Context: 'Child development tracking'

   Line 42: "Photo sharing with parents"
   Context: 'Photo sharing with parents'

   Line 53: "Grade and curriculum management"
   Context: 'Grade and curriculum management'

   Line 54: "Timetable scheduling"
   Context: 'Timetable scheduling'

   Line 55: "Homework and assignment tracking"
   Context: 'Homework and assignment tracking'

   Line 56: "Student performance analytics"
   Context: 'Student performance analytics'

   Line 57: "Test and exam management"
   Context: 'Test and exam management'

   Line 65: "Hybrid Institution"
   Context: 'Hybrid Institution'

   Line 69: "Seamless transition between levels"
   Context: 'Seamless transition between levels'

   Line 70: "Unified administration tools"
   Context: 'Unified administration tools'

   Line 72: "Custom role management"
   Context: 'Custom role management'

   Line 104: "Failed to load saved school type"
   Context: 'Failed to load saved school type'

   Line 143: "Failed to save school type or navigate"
   Context: 'Failed to save school type or navigate'

   Line 235: "Select School Type"
   Context: 'Select School Type'

   Line 306: "Selected Type"
   Context: 'Selected Type'

üìÑ app/screens/settings.tsx:
   Line 200: "Settings: Biometric check:"
   Context: {
    try {
      setLoading(true);
      
      // Load biometric information using direct methods that work on OppoA40
      try {
        // Use unified service
        const [capabilities, availableTypes, isEnabled] = await Promise.all([
          BiometricAuthService.checkCapabilities(),
          BiometricAuthService.getAvailableBiometricOptions(),
          BiometricAuthService.isBiometricEnabled(),
        ]);
        
        console.log('Settings: Biometric check:', { capabilities, availableTypes, isEnabled }

   Line 224: "Error loading biometric info:"
   Context: {
        console.error("Error loading biometric info:", error);
      }

   Line 227: "Error loading settings:"
   Context: {
      console.error("Error loading settings:", error);
    }

   Line 245: "Biometric Setup Required"
   Context: {
    if (!biometricEnrolled) {
      Alert.alert(
        "Biometric Setup Required",
        "Please set up fingerprint or face recognition in your device settings first.",
        [{ text: "OK" }

   Line 264: "Biometric Login Disabled"
   Context: {
        // Disable biometric authentication
        await BiometricAuthService.disableBiometric();
        setBiometricEnabled(false);
        Alert.alert(
          "Biometric Login Disabled",
          "You will need to use your password to sign in.",
        );
      }

   Line 286: "Error toggling biometric:"
   Context: {
      console.error("Error toggling biometric:", error);
      Alert.alert("Error", "Failed to update biometric settings.");
    }

   Line 301: "finger-print-outline"
   Context: {
    if (!biometricSupported) return "finger-print-outline";
    // Prioritize Fingerprint icon for OPPO devices with multiple biometric types
    if (biometricTypes.includes('Fingerprint')) {
      return biometricEnabled ? "finger-print" : "finger-print-outline";
    }

   Line 417: "settings.biometric.setupRequired"
   Context: {() => {
                    Alert.alert(
                      t('settings.biometric.setupRequired'),
                      "Please set up fingerprint or face recognition in your device settings.",
                      [{ text: t('common.ok') }

   Line 443: "Privacy & Security"
   Context: {() =>
                Alert.alert(
                  "Privacy & Security",
                  "Your data is encrypted and stored securely. Biometric data never leaves your device.",
                )
              }

   Line 775: "Downloading update‚Ä¶"
   Context: {isDownloading 
                        ? 'Downloading update‚Ä¶' 
                        : isUpdateDownloaded 
                        ? 'Update ready to install' 
                        : updateError 
                        ? 'Check failed - tap to retry' 
                        : `Current version: ${Constants.expoConfig?.version ?? 'n/a'}

   Line 802: "EduDash Pro"
   Context: {() =>
                Alert.alert(
                  "EduDash Pro",
                  "Version 1.0.2\nBuilt with ‚ù§Ô∏è for educators and parents\n\nWhat's New:\n‚Ä¢ WhatsApp notifications integration\n‚Ä¢ Enhanced superadmin controls\n‚Ä¢ Improved mobile-first responsive design\n‚Ä¢ Push notifications system",
                  [{ text: "OK" }

   Line 827: "Help & Support"
   Context: {() =>
                Alert.alert(
                  "Help & Support",
                  "For support, please contact us at support@edudashpro.com",
                  [{ text: "OK" }

   Line 213: "Settings: Biometric check:"
   Context: console.log('Settings: Biometric check:'

   Line 225: "Error loading biometric info:"
   Context: console.error("Error loading biometric info:"

   Line 228: "Error loading settings:"
   Context: console.error("Error loading settings:"

   Line 247: "Biometric Setup Required"
   Context: Alert.alert(
        "Biometric Setup Required"

   Line 268: "Biometric Login Disabled"
   Context: Alert.alert(
          "Biometric Login Disabled"

   Line 280: "Biometric Login Enabled"
   Context: Alert.alert(
            "Biometric Login Enabled"

   Line 287: "Error toggling biometric:"
   Context: console.error("Error toggling biometric:"

   Line 444: "Privacy & Security"
   Context: Alert.alert(
                  "Privacy & Security"

   Line 803: "EduDash Pro"
   Context: Alert.alert(
                  "EduDash Pro"

   Line 828: "Help & Support"
   Context: Alert.alert(
                  "Help & Support"

   Line 248: "Biometric Setup Required"
   Context: "Biometric Setup Required"

   Line 260: "User not found"
   Context: "User not found"

   Line 269: "Biometric Login Disabled"
   Context: "Biometric Login Disabled"

   Line 281: "Biometric Login Enabled"
   Context: "Biometric Login Enabled"

   Line 306: "Face ID"
   Context: 'Face ID'

   Line 308: "Iris Scan"
   Context: 'Iris Scan'

   Line 306: "Face ID"
   Context: 'Face ID'

   Line 308: "Iris Scan"
   Context: 'Iris Scan'

   Line 306: "Face ID"
   Context: 'Face ID'

   Line 778: "Update ready to install"
   Context: 'Update ready to install'

   Line 804: "EduDash Pro"
   Context: "EduDash Pro"

üìÑ app/screens/sound-alert-settings.tsx:
   Line 41: "urgent"
   Context: {
    type: 'urgent',
    title: 'Urgent Alerts',
    description: 'Critical system alerts and emergencies',
    icon: 'warning',
    color: '#ef4444',
    defaultStyle: 'urgent',
  }

   Line 49: "message"
   Context: {
    type: 'message',
    title: 'Messages',
    description: 'Direct messages from teachers and parents',
    icon: 'chatbubble',
    color: '#3b82f6',
    defaultStyle: 'normal',
  }

   Line 57: "payment"
   Context: {
    type: 'payment',
    title: 'Payment Alerts',
    description: 'Payment confirmations and reminders',
    icon: 'card',
    color: '#10b981',
    defaultStyle: 'prominent',
  }

   Line 65: "attendance"
   Context: {
    type: 'attendance',
    title: 'Attendance Alerts',
    description: 'Student check-in and check-out notifications',
    icon: 'checkmark-circle',
    color: '#f59e0b',
    defaultStyle: 'normal',
  }

   Line 73: "system"
   Context: {
    type: 'system',
    title: 'System Notifications',
    description: 'App updates and system maintenance',
    icon: 'cog',
    color: '#8b5cf6',
    defaultStyle: 'prominent',
  }

   Line 81: "success"
   Context: {
    type: 'success',
    title: 'Success Confirmations',
    description: 'Successful actions and completions',
    icon: 'checkmark-done',
    color: '#10b981',
    defaultStyle: 'normal',
  }

   Line 89: "warning"
   Context: {
    type: 'warning',
    title: 'Warning Alerts',
    description: 'Important warnings and advisories',
    icon: 'alert-circle',
    color: '#f59e0b',
    defaultStyle: 'prominent',
  }

   Line 97: "error"
   Context: {
    type: 'error',
    title: 'Error Alerts',
    description: 'Error notifications and failed actions',
    icon: 'close-circle',
    color: '#ef4444',
    defaultStyle: 'urgent',
  }

   Line 105: "notification"
   Context: {
    type: 'notification',
    title: 'General Notifications',
    description: 'General app notifications and updates',
    icon: 'notifications',
    color: '#6b7280',
    defaultStyle: 'normal',
  }

   Line 113: "reminder"
   Context: {
    type: 'reminder',
    title: 'Reminders',
    description: 'Task reminders and scheduled alerts',
    icon: 'time',
    color: '#ec4899',
    defaultStyle: 'normal',
  }

   Line 124: "subtle"
   Context: { value: 'subtle', label: 'Subtle', description: 'Quiet and unobtrusive' }

   Line 125: "normal"
   Context: { value: 'normal', label: 'Normal', description: 'Standard notification sound' }

   Line 126: "prominent"
   Context: { value: 'prominent', label: 'Prominent', description: 'Louder and more noticeable' }

   Line 127: "urgent"
   Context: { value: 'urgent', label: 'Urgent', description: 'Loud and attention-grabbing' }

   Line 128: "custom"
   Context: { value: 'custom', label: 'Custom', description: 'Use custom sound file' }

   Line 132: "none"
   Context: { value: 'none', label: 'None', description: 'No vibration' }

   Line 133: "light"
   Context: { value: 'light', label: 'Light', description: 'Gentle vibration' }

   Line 134: "medium"
   Context: { value: 'medium', label: 'Medium', description: 'Moderate vibration' }

   Line 135: "heavy"
   Context: { value: 'heavy', label: 'Heavy', description: 'Strong vibration' }

   Line 136: "success"
   Context: { value: 'success', label: 'Success', description: 'Success pattern' }

   Line 137: "warning"
   Context: { value: 'warning', label: 'Warning', description: 'Warning pattern' }

   Line 138: "error"
   Context: { value: 'error', label: 'Error', description: 'Error pattern' }

   Line 198: "Failed to load sound settings:"
   Context: {
      console.error('Failed to load sound settings:', error);
      Alert.alert('Error', 'Failed to load sound alert settings');
    }

   Line 228: "Failed to update alert setting:"
   Context: {
      console.error('Failed to update alert setting:', error);
      Alert.alert('Error', 'Failed to update sound alert setting');
    }

   Line 248: "Failed to test alert:"
   Context: {
      console.error('Failed to test alert:', error);
      Alert.alert('Error', 'Failed to test sound alert');
      setTestingAlert(null);
    }

   Line 255: "System Settings"
   Context: {
    Alert.alert(
      'System Settings',
      'To modify system-level notification settings, please go to your device settings.',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 261: "Open Settings"
   Context: {
          text: 'Open Settings',
          onPress: () => {
            if (Platform.OS === 'ios') {
              // iOS Settings app
              // Linking.openURL('app-settings:');
            }

   Line 277: "Reset to Defaults"
   Context: {
    Alert.alert(
      'Reset to Defaults',
      'This will reset all sound alert settings to their default values. Are you sure?',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 301: "Failed to reset settings:"
   Context: {
              console.error('Failed to reset settings:', error);
              Alert.alert('Error', 'Failed to reset sound alert settings');
            }

   Line 330: "Failed to update quiet hours:"
   Context: {
      console.error('Failed to update quiet hours:', error);
      Alert.alert('Error', 'Failed to update quiet hours');
    }

   Line 385: "Testing..."
   Context: {testingAlert === alertConfig.type ? 'Testing...' : 'Test'}

   Line 646: "Sound Alerts"
   Context: {{ title: 'Sound Alerts', headerShown: false }

   Line 646: "Sound Alerts"
   Context: {{ title: 'Sound Alerts', headerShown: false }

   Line 199: "Failed to load sound settings:"
   Context: console.error('Failed to load sound settings:'

   Line 229: "Failed to update alert setting:"
   Context: console.error('Failed to update alert setting:'

   Line 249: "Failed to test alert:"
   Context: console.error('Failed to test alert:'

   Line 256: "System Settings"
   Context: Alert.alert(
      'System Settings'

   Line 278: "Reset to Defaults"
   Context: Alert.alert(
      'Reset to Defaults'

   Line 302: "Failed to reset settings:"
   Context: console.error('Failed to reset settings:'

   Line 331: "Failed to update quiet hours:"
   Context: console.error('Failed to update quiet hours:'

   Line 43: "Urgent Alerts"
   Context: 'Urgent Alerts'

   Line 44: "Critical system alerts and emergencies"
   Context: 'Critical system alerts and emergencies'

   Line 52: "Direct messages from teachers and parents"
   Context: 'Direct messages from teachers and parents'

   Line 59: "Payment Alerts"
   Context: 'Payment Alerts'

   Line 60: "Payment confirmations and reminders"
   Context: 'Payment confirmations and reminders'

   Line 67: "Attendance Alerts"
   Context: 'Attendance Alerts'

   Line 75: "System Notifications"
   Context: 'System Notifications'

   Line 76: "App updates and system maintenance"
   Context: 'App updates and system maintenance'

   Line 83: "Success Confirmations"
   Context: 'Success Confirmations'

   Line 84: "Successful actions and completions"
   Context: 'Successful actions and completions'

   Line 91: "Warning Alerts"
   Context: 'Warning Alerts'

   Line 92: "Important warnings and advisories"
   Context: 'Important warnings and advisories'

   Line 99: "Error Alerts"
   Context: 'Error Alerts'

   Line 100: "Error notifications and failed actions"
   Context: 'Error notifications and failed actions'

   Line 107: "General Notifications"
   Context: 'General Notifications'

   Line 108: "General app notifications and updates"
   Context: 'General app notifications and updates'

   Line 116: "Task reminders and scheduled alerts"
   Context: 'Task reminders and scheduled alerts'

   Line 124: "Quiet and unobtrusive"
   Context: 'Quiet and unobtrusive'

   Line 125: "Standard notification sound"
   Context: 'Standard notification sound'

   Line 126: "Louder and more noticeable"
   Context: 'Louder and more noticeable'

   Line 128: "Use custom sound file"
   Context: 'Use custom sound file'

   Line 132: "No vibration"
   Context: 'No vibration'

   Line 133: "Gentle vibration"
   Context: 'Gentle vibration'

   Line 134: "Moderate vibration"
   Context: 'Moderate vibration'

   Line 135: "Strong vibration"
   Context: 'Strong vibration'

   Line 136: "Success pattern"
   Context: 'Success pattern'

   Line 137: "Warning pattern"
   Context: 'Warning pattern'

   Line 138: "Error pattern"
   Context: 'Error pattern'

   Line 200: "Failed to load sound alert settings"
   Context: 'Failed to load sound alert settings'

   Line 230: "Failed to update sound alert setting"
   Context: 'Failed to update sound alert setting'

   Line 250: "Failed to test sound alert"
   Context: 'Failed to test sound alert'

   Line 257: "System Settings"
   Context: 'System Settings'

   Line 262: "Open Settings"
   Context: 'Open Settings'

   Line 279: "Reset to Defaults"
   Context: 'Reset to Defaults'

   Line 299: "Sound alert settings have been reset to defaults"
   Context: 'Sound alert settings have been reset to defaults'

   Line 303: "Failed to reset sound alert settings"
   Context: 'Failed to reset sound alert settings'

   Line 328: "Quiet hours have been updated"
   Context: 'Quiet hours have been updated'

   Line 332: "Failed to update quiet hours"
   Context: 'Failed to update quiet hours'

   Line 646: "Sound Alerts"
   Context: 'Sound Alerts'

   Line 646: "Sound Alerts"
   Context: 'Sound Alerts'

üìÑ app/screens/student-dashboard.tsx:
   Line 8: "Student Dashboard"
   Context: {{ title: 'Student Dashboard' }

   Line 8: "Student Dashboard"
   Context: 'Student Dashboard'

üìÑ app/screens/student-detail.tsx:
   Line 134: "Error loading student:"
   Context: {
        console.error('Error loading student:', studentError);
        Alert.alert('Error', 'Student not found');
        router.back();
        return;
      }

   Line 216: "Error loading student data:"
   Context: {
      console.error('Error loading student data:', error);
      Alert.alert('Error', 'Failed to load student information');
    }

   Line 267: "No Contact"
   Context: {
    if (!student?.parent_phone && !student?.parent_email) {
      Alert.alert('No Contact', 'No parent contact information available');
      return;
    }

   Line 292: "en-ZA"
   Context: {
    return new Intl.NumberFormat('en-ZA', {
      style: 'currency',
      currency: 'ZAR',
    }

   Line 432: "N/A"
   Context: {student.last_attendance 
                  ? new Date(student.last_attendance).toLocaleDateString()
                  : 'N/A'
                }

   Line 512: "current"
   Context: {student.payment_status === 'current' ? 'Up to Date' : 'Overdue'}

   Line 581: "No teacher"
   Context: {cls.teacher_name || 'No teacher'}

   Line 577: "Select a class..."
   Context: label="Select a class..."

   Line 135: "Error loading student:"
   Context: console.error('Error loading student:'

   Line 217: "Error loading student data:"
   Context: console.error('Error loading student data:'

   Line 269: "No Contact"
   Context: Alert.alert('No Contact'

   Line 101: "No school assigned to your account"
   Context: 'No school assigned to your account'

   Line 136: "Student not found"
   Context: 'Student not found'

   Line 218: "Failed to load student information"
   Context: 'Failed to load student information'

   Line 255: "Failed to assign class"
   Context: 'Failed to assign class'

   Line 259: "Student successfully assigned to class"
   Context: 'Student successfully assigned to class'

   Line 255: "Failed to assign class"
   Context: 'Failed to assign class'

   Line 269: "No Contact"
   Context: 'No Contact'

   Line 269: "No parent contact information available"
   Context: 'No parent contact information available'

   Line 512: "Up to Date"
   Context: 'Up to Date'

   Line 581: "No teacher"
   Context: 'No teacher'

üìÑ app/screens/student-enrollment.tsx:
   Line 143: "baby-class"
   Context: { 
      id: 'baby-class', name: 'Baby Class (6-12 months)', capacity: 8, enrolled: 6, available: 2,
      fees: { admission: 300, tuition: 1800, books: 150, uniform: 200, activities: 100 }

   Line 147: "toddler-class"
   Context: { 
      id: 'toddler-class', name: 'Toddler Class (1-2 years)', capacity: 12, enrolled: 10, available: 2,
      fees: { admission: 350, tuition: 2000, books: 200, uniform: 220, activities: 120 }

   Line 151: "pre-k"
   Context: { 
      id: 'pre-k', name: 'Pre-K (3-4 years)', capacity: 15, enrolled: 14, available: 1,
      fees: { admission: 400, tuition: 2200, books: 250, uniform: 250, activities: 150 }

   Line 155: "kindergarten"
   Context: { 
      id: 'kindergarten', name: 'Kindergarten (4-5 years)', capacity: 18, enrolled: 16, available: 2,
      fees: { admission: 450, tuition: 2400, books: 300, uniform: 280, activities: 170 }

   Line 162: "grade-r"
   Context: { 
      id: 'grade-r', name: 'Grade R (5-6 years)', capacity: 30, enrolled: 28, available: 2,
      fees: { admission: 500, tuition: 2800, books: 450, uniform: 300, activities: 200 }

   Line 166: "grade-1"
   Context: { 
      id: 'grade-1', name: 'Grade 1', capacity: 30, enrolled: 25, available: 5,
      fees: { admission: 500, tuition: 3200, books: 520, uniform: 350, activities: 250 }

   Line 170: "grade-2"
   Context: { 
      id: 'grade-2', name: 'Grade 2', capacity: 30, enrolled: 30, available: 0,
      fees: { admission: 500, tuition: 3200, books: 520, uniform: 350, activities: 250 }

   Line 174: "grade-3"
   Context: { 
      id: 'grade-3', name: 'Grade 3', capacity: 30, enrolled: 27, available: 3,
      fees: { admission: 500, tuition: 3500, books: 580, uniform: 380, activities: 300 }

   Line 178: "grade-4"
   Context: { 
      id: 'grade-4', name: 'Grade 4', capacity: 30, enrolled: 24, available: 6,
      fees: { admission: 500, tuition: 3500, books: 580, uniform: 380, activities: 300 }

   Line 182: "grade-5"
   Context: { 
      id: 'grade-5', name: 'Grade 5', capacity: 30, enrolled: 29, available: 1,
      fees: { admission: 500, tuition: 3800, books: 620, uniform: 400, activities: 350 }

   Line 186: "grade-6"
   Context: { 
      id: 'grade-6', name: 'Grade 6', capacity: 30, enrolled: 26, available: 4,
      fees: { admission: 500, tuition: 3800, books: 620, uniform: 400, activities: 350 }

   Line 190: "grade-7"
   Context: { 
      id: 'grade-7', name: 'Grade 7', capacity: 30, enrolled: 23, available: 7,
      fees: { admission: 500, tuition: 4200, books: 720, uniform: 450, activities: 400 }

   Line 194: "grade-8"
   Context: { 
      id: 'grade-8', name: 'Grade 8', capacity: 30, enrolled: 28, available: 2,
      fees: { admission: 500, tuition: 4200, books: 720, uniform: 450, activities: 400 }

   Line 198: "grade-9"
   Context: { 
      id: 'grade-9', name: 'Grade 9', capacity: 30, enrolled: 25, available: 5,
      fees: { admission: 600, tuition: 4500, books: 800, uniform: 500, activities: 450 }

   Line 202: "grade-10"
   Context: { 
      id: 'grade-10', name: 'Grade 10', capacity: 30, enrolled: 27, available: 3,
      fees: { admission: 600, tuition: 4500, books: 800, uniform: 500, activities: 450 }

   Line 206: "grade-11"
   Context: { 
      id: 'grade-11', name: 'Grade 11', capacity: 30, enrolled: 22, available: 8,
      fees: { admission: 600, tuition: 4800, books: 850, uniform: 520, activities: 480 }

   Line 210: "grade-12"
   Context: { 
      id: 'grade-12', name: 'Grade 12', capacity: 30, enrolled: 24, available: 6,
      fees: { admission: 600, tuition: 4800, books: 850, uniform: 520, activities: 480 }

   Line 260: "basic"
   Context: {
    switch (currentStep) {
      case 'basic': return 'Basic Information';
      case 'contact': return 'Contact Details';
      case 'parent': return 'Parent/Guardian Info';
      case 'medical': return 'Medical Information';
      case 'documents': return 'Required Documents';
      case 'fees': return 'Fee Structure';
      case 'review': return 'Review & Submit';
      default: return 'Enrollment';
    }

   Line 280: "preschool"
   Context: {
    return schoolType === 'preschool' ? 'Preschool Enrollment' : 'K-12 School Enrollment';
  }

   Line 284: "preschool"
   Context: {
    return schoolType === 'preschool' 
      ? 'Enroll children aged 6 months to 5 years in our preschool programs'
      : 'Enroll students from Grade R (Reception) to Grade 12 in our K-12 school';
  }

   Line 292: "Missing Information"
   Context: {
      Alert.alert('Missing Information', 'Please fill in all required fields.');
      return;
    }

   Line 339: "Error enrolling student:"
   Context: {
                console.error('Error enrolling student:', insertError);
                Alert.alert('Enrollment Error', 'Failed to enroll student. Please try again.');
                return;
              }

   Line 351: "Enroll Another"
   Context: {
                    text: 'Enroll Another',
                    onPress: () => {
                      setStudentInfo(initialStudentInfo);
                      setSelectedGrade('');
                    }

   Line 365: "Failed to enroll student:"
   Context: {
              console.error('Failed to enroll student:', error);
              Alert.alert('Error', 'Failed to enroll student. Please check your connection and try again.');
            }

   Line 491: "preschool"
   Context: {schoolType === 'preschool' ? 'Class' : 'Grade'}

   Line 517: "No Class Found"
   Context: {
                    Alert.alert('No Class Found', 'No suitable class suggestion is available.');
                    setSuggestedClass(null);
                  }

   Line 523: "Auto-assign class failed"
   Context: {
                  console.error('Auto-assign class failed', e);
                  Alert.alert('Error', 'Could not suggest a class.');
                }

   Line 533: "Finding class‚Ä¶"
   Context: {suggesting ? 'Finding class‚Ä¶' : 'Auto-Assign Class'}

   Line 603: "preschool"
   Context: {schoolType === 'preschool' ? 'Preschool' : 'K-12 School'}

   Line 491: "preschool"
   Context: {schoolType === 'preschool' ? 'Class' : 'Grade'}

   Line 635: "Enrolling..."
   Context: {loading ? 'Enrolling...' : 'Enroll Student'}

   Line 567: "Enter student"
   Context: placeholder="Enter student'

   Line 567: "Enter student"
   Context: placeholder="Enter student'

   Line 293: "Missing Information"
   Context: Alert.alert('Missing Information'

   Line 303: "Enroll Student"
   Context: Alert.alert(
      'Enroll Student'

   Line 340: "Error enrolling student:"
   Context: console.error('Error enrolling student:'

   Line 341: "Enrollment Error"
   Context: Alert.alert('Enrollment Error'

   Line 347: "Success! üéâ"
   Context: Alert.alert(
                'Success! üéâ'

   Line 366: "Failed to enroll student:"
   Context: console.error('Failed to enroll student:'

   Line 518: "No Class Found"
   Context: Alert.alert('No Class Found'

   Line 524: "Auto-assign class failed"
   Context: console.error('Auto-assign class failed'

   Line 262: "Basic Information"
   Context: 'Basic Information'

   Line 263: "Contact Details"
   Context: 'Contact Details'

   Line 265: "Medical Information"
   Context: 'Medical Information'

   Line 266: "Required Documents"
   Context: 'Required Documents'

   Line 267: "Fee Structure"
   Context: 'Fee Structure'

   Line 281: "Preschool Enrollment"
   Context: 'Preschool Enrollment'

   Line 293: "Missing Information"
   Context: 'Missing Information'

   Line 304: "Enroll Student"
   Context: 'Enroll Student'

   Line 341: "Enrollment Error"
   Context: 'Enrollment Error'

   Line 352: "Enroll Another"
   Context: 'Enroll Another'

   Line 518: "No Class Found"
   Context: 'No Class Found'

   Line 567: "Enter student"
   Context: "Enter student'

   Line 567: "Enter student"
   Context: "Enter student'

   Line 304: "Enroll Student"
   Context: 'Enroll Student'

üìÑ app/screens/student-join-by-code.tsx:
   Line 23: "Missing info"
   Context: {
    if (!code.trim() || !email.trim()) {
      Alert.alert('Missing info', 'Enter the invite code and your email.');
      return;
    }

   Line 37: "Invalid code"
   Context: {
      Alert.alert('Invalid code', e?.message || 'This code is invalid or expired.');
    }

   Line 44: "Sign in required"
   Context: {
    if (!user?.id) {
      Alert.alert('Sign in required', 'Please sign in first.');
      return;
    }

   Line 49: "Missing code"
   Context: {
      Alert.alert('Missing code', 'Enter a code first.');
      return;
    }

   Line 75: "Join by Code"
   Context: {{ title: 'Join by Code' }

   Line 104: "No expiry"
   Context: {validated.expires_at ? new Date(validated.expires_at).toLocaleString() : 'No expiry'}

   Line 81: "Enter your code"
   Context: placeholder="Enter your code"

   Line 25: "Missing info"
   Context: Alert.alert('Missing info'

   Line 36: "Code valid"
   Context: Alert.alert('Code valid'

   Line 38: "Invalid code"
   Context: Alert.alert('Invalid code'

   Line 46: "Sign in required"
   Context: Alert.alert('Sign in required'

   Line 50: "Missing code"
   Context: Alert.alert('Missing code'

   Line 64: "Joined!"
   Context: Alert.alert('Joined!'

   Line 25: "Missing info"
   Context: 'Missing info'

   Line 34: "Code not found or inactive"
   Context: 'Code not found or inactive'

   Line 36: "Code valid"
   Context: 'Code valid'

   Line 38: "Invalid code"
   Context: 'Invalid code'

   Line 46: "Sign in required"
   Context: 'Sign in required'

   Line 50: "Missing code"
   Context: 'Missing code'

   Line 75: "Join by Code"
   Context: 'Join by Code'

   Line 81: "Enter your code"
   Context: "Enter your code"

   Line 104: "No expiry"
   Context: 'No expiry'

   Line 34: "Code not found or inactive"
   Context: throw new Error('Code not found or inactive'

üìÑ app/screens/student-management.tsx:
   Line 172: "Error fetching student data:"
   Context: {
      console.error('Error fetching student data:', error);
      Alert.alert('Error', 'Failed to load student information');
    }

   Line 219: "#9CA3AF"
   Context: {
    if (!ageGroupName) return '#9CA3AF';
    
    if (schoolType === 'preschool') {
      switch (ageGroupName) {
        case 'Toddlers': return '#EC4899'; // Pink for toddlers
        case 'Preschool 3-4': return '#8B5CF6'; // Purple for 3-4 year olds
        case 'Preschool 4-5': return '#3B82F6'; // Blue for 4-5 year olds
        case 'Pre-K (Reception)': return '#059669'; // Green for school readiness
        default: return '#6B7280';
      }

   Line 230: "Grade R"
   Context: {
      // Primary/Secondary color coding by phase
      if (ageGroupName?.includes('Grade R') || ageGroupName?.includes('Grade 1-3')) return '#059669';
      if (ageGroupName?.includes('Grade 4-6')) return '#3B82F6';
      if (ageGroupName?.includes('Grade 7-9')) return '#8B5CF6';
      if (ageGroupName?.includes('Grade 10-12')) return '#DC2626';
      return '#6B7280';
    }

   Line 260: "preschool"
   Context: {
    switch (schoolType) {
      case 'preschool': return 'Pre-School';
      case 'primary': return 'Primary School';
      case 'secondary': return 'Secondary School';
      case 'combined': return 'Combined School';
      default: return 'School';
    }

   Line 403: "No Students Enrolled"
   Context: {students.length === 0 ? 'No Students Enrolled' : 'No Students Match Filters'}

   Line 350: "Search students..."
   Context: placeholder="Search students..."

   Line 173: "Error fetching student data:"
   Context: console.error('Error fetching student data:'

   Line 100: "No school assigned to your account"
   Context: 'No school assigned to your account'

   Line 174: "Failed to load student information"
   Context: 'Failed to load student information'

   Line 232: "Grade R"
   Context: 'Grade R'

   Line 263: "Primary School"
   Context: 'Primary School'

   Line 264: "Secondary School"
   Context: 'Secondary School'

   Line 265: "Combined School"
   Context: 'Combined School'

   Line 403: "No Students Enrolled"
   Context: 'No Students Enrolled'

   Line 403: "No Students Match Filters"
   Context: 'No Students Match Filters'

   Line 408: "Try adjusting your search or filter criteria"
   Context: 'Try adjusting your search or filter criteria'

üìÑ app/screens/students-detail.tsx:
   Line 163: "Error fetching students:"
   Context: {
        console.error('Error fetching students:', studentsError);
        Alert.alert('Error', 'Failed to load students. Please try again.');
        return;
      }

   Line 235: "Failed to load students:"
   Context: {
      console.error('Failed to load students:', error);
      Alert.alert('Error', 'Failed to load students directory');
    }

   Line 339: "Access Denied"
   Context: {
    if (!canEditStudent(student)) {
      Alert.alert('Access Denied', 'You do not have permission to edit student information.');
      return;
    }

   Line 349: "Access Denied"
   Context: {
    if (!canManageStudent()) {
      Alert.alert('Access Denied', 'Only principals can delete students.');
      return;
    }

   Line 372: "Access Denied"
   Context: {
    if (!canManageStudent()) {
      Alert.alert('Access Denied', 'Only principals can change student status.');
      return;
    }

   Line 487: "Grade R-A"
   Context: {['Grade R-A', 'Grade R-B', 'Grade 1-A', 'Grade 1-B', 'Grade 2-A'].map(grade => (
                <TouchableOpacity
                  key={grade}

   Line 603: "Search students..."
   Context: placeholder="Search students..."

   Line 164: "Error fetching students:"
   Context: console.error('Error fetching students:'

   Line 236: "Failed to load students:"
   Context: console.error('Failed to load students:'

   Line 341: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 341: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 355: "Delete Student"
   Context: Alert.alert(
      'Delete Student'

   Line 341: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 180: "Guardian Name"
   Context: 'Guardian Name'

   Line 183: "Emergency Contact"
   Context: 'Emergency Contact'

   Line 192: "Teacher Name"
   Context: 'Teacher Name'

   Line 237: "Failed to load students directory"
   Context: 'Failed to load students directory'

   Line 341: "Access Denied"
   Context: 'Access Denied'

   Line 341: "Access Denied"
   Context: 'Access Denied'

   Line 356: "Delete Student"
   Context: 'Delete Student'

   Line 341: "Access Denied"
   Context: 'Access Denied'

üìÑ app/screens/subscription-setup.tsx:
   Line 43: "preschool"
   Context: {
  switch (schoolType) {
    case 'preschool': return 'Preschool';
    case 'k12_school': return 'K-12 School';
    case 'hybrid': return 'Hybrid Institution';
    default: return 'School';
  }

   Line 52: "preschool"
   Context: {
  switch (schoolType) {
    case 'preschool': return 'Plans optimized for early childhood education';
    case 'k12_school': return 'Plans designed for primary and secondary schools';
    case 'hybrid': return 'Comprehensive plans for combined educational institutions';
    default: return 'Educational institution plans';
  }

   Line 161: "Error loading school info:"
   Context: {
      console.error('Error loading school info:', error);
    }

   Line 205: "Error checking existing subscription:"
   Context: {
      console.error('Error checking existing subscription:', error);
    }

   Line 224: "Enterprise Plan"
   Context: {
      if (isEnterprise) {
        // Enterprise tier - redirect to Contact Sales
        Alert.alert(
          'Enterprise Plan',
          'Enterprise plans require custom setup. Our sales team will contact you to configure your solution.',
          [
            { text: 'Cancel', style: 'cancel' }

   Line 232: "Contact Sales"
   Context: { 
              text: 'Contact Sales', 
              onPress: () => {
                track('enterprise_redirect_from_setup', {
                  plan_tier: plan.tier,
                  user_role: profile?.role,
                }

   Line 349: "contact_sales_required"
   Context: {
        if (result.error.includes('contact_sales_required')) {
          Alert.alert(
            'Contact Required',
            'This plan requires sales contact for setup.',
            [
              { text: 'Cancel', style: 'cancel' }

   Line 356: "Contact Sales"
   Context: { text: 'Contact Sales', onPress: () => navigateTo.contact() }

   Line 413: "Subscription Active"
   Context: {{ 
          title: 'Subscription Active',
          headerStyle: { backgroundColor: '#0b1220' }

   Line 456: "Setup Subscription"
   Context: {{ 
        title: 'Setup Subscription',
        headerStyle: { backgroundColor: '#0b1220' }

   Line 659: "Get Started Free"
   Context: {isFree ? 'Get Started Free' : isEnterprise ? 'Contact Sales' : 'Subscribe Now'}

   Line 162: "Error loading school info:"
   Context: console.error('Error loading school info:'

   Line 206: "Error checking existing subscription:"
   Context: console.error('Error checking existing subscription:'

   Line 227: "Enterprise Plan"
   Context: Alert.alert(
          'Enterprise Plan'

   Line 311: "Success!"
   Context: Alert.alert(
          'Success!'

   Line 351: "Contact Required"
   Context: Alert.alert(
            'Contact Required'

   Line 47: "Hybrid Institution"
   Context: 'Hybrid Institution'

   Line 54: "Plans optimized for early childhood education"
   Context: 'Plans optimized for early childhood education'

   Line 55: "Plans designed for primary and secondary schools"
   Context: 'Plans designed for primary and secondary schools'

   Line 56: "Comprehensive plans for combined educational institutions"
   Context: 'Comprehensive plans for combined educational institutions'

   Line 57: "Educational institution plans"
   Context: 'Educational institution plans'

   Line 141: "Failed to load subscription plans"
   Context: 'Failed to load subscription plans'

   Line 214: "Selected plan not found"
   Context: 'Selected plan not found'

   Line 228: "Enterprise Plan"
   Context: 'Enterprise Plan'

   Line 233: "Contact Sales"
   Context: 'Contact Sales'

   Line 251: "School information not found for free plan setup"
   Context: 'School information not found for free plan setup'

   Line 276: "Free plan not found"
   Context: 'Free plan not found'

   Line 352: "Contact Required"
   Context: 'Contact Required'

   Line 233: "Contact Sales"
   Context: 'Contact Sales'

   Line 391: "Failed to start checkout"
   Context: 'Failed to start checkout'

   Line 414: "Subscription Active"
   Context: 'Subscription Active'

   Line 457: "Setup Subscription"
   Context: 'Setup Subscription'

   Line 470: "Select a plan to enable teacher seat management for your school"
   Context: 'Select a plan to enable teacher seat management for your school'

   Line 659: "Get Started Free"
   Context: 'Get Started Free'

   Line 233: "Contact Sales"
   Context: 'Contact Sales'

   Line 659: "Subscribe Now"
   Context: 'Subscribe Now'

   Line 276: "Free plan not found"
   Context: new Error('Free plan not found'

üìÑ app/screens/subscription-upgrade-post.tsx:
   Line 72: "warning"
   Context: {
  limit_reached: {
    icon: 'warning',
    color: '#f59e0b',
    title: 'Upgrade Required',
    subtitle: 'You\'ve reached your current plan limits'
  }

   Line 79: "lock-closed"
   Context: {
    icon: 'lock-closed',
    color: '#8b5cf6',
    title: 'Unlock Premium Features',
    subtitle: 'This feature requires a higher tier plan'
  }

   Line 85: "trending-up"
   Context: {
    icon: 'trending-up',
    color: '#10b981',
    title: 'Upgrade Your Plan',
    subtitle: 'Get access to more features and higher limits'
  }

   Line 149: "‚ùå Screen initialization failed:"
   Context: {
        console.error('‚ùå Screen initialization failed:', error);
        setRenderError(error.message || 'Initialization failed');
        setLoading(false);
      }

   Line 198: "Plans fetch error:"
   Context: {
        console.error('Plans fetch error:', error);
        throw new Error(error.message || 'Failed to fetch plans');
      }

   Line 225: "Plans loading failed:"
   Context: {
      clearTimeout(timeoutId);
      console.error('Plans loading failed:', error);
      
      // Set empty array to show empty state UI
      setPlans([]);
      
      track('upgrade_post_load_failed', { 
        error: error?.message || String(error),
        current_tier: currentTier 
      }

   Line 238: "Failed to load subscription plans:"
   Context: {
        console.warn('Failed to load subscription plans:', error?.message || String(error));
      }

   Line 246: "‚ùå handleUpgrade: planId is missing"
   Context: {
    // Defensive checks
    if (!planId) {
      console.error('‚ùå handleUpgrade: planId is missing');
      Alert.alert('Error', 'No plan selected');
      return;
    }

   Line 255: "‚ùå handleUpgrade: Plan not found for ID:"
   Context: {
      console.error('‚ùå handleUpgrade: Plan not found for ID:', planId);
      Alert.alert('Error', 'Selected plan not found');
      return;
    }

   Line 262: "‚ùå handleUpgrade: User profile not available"
   Context: {
      console.error('‚ùå handleUpgrade: User profile not available');
      Alert.alert('Error', 'User profile not loaded. Please try again.');
      return;
    }

   Line 285: "Enterprise Upgrade"
   Context: {
      if (isEnterprise) {
        // Enterprise tier - redirect to Contact Sales
        Alert.alert(
          'Enterprise Upgrade',
          'Enterprise plans require custom setup. Our sales team will contact you to configure your upgrade.',
          [
            { text: 'Cancel', style: 'cancel' }

   Line 293: "Contact Sales"
   Context: { 
              text: 'Contact Sales', 
              onPress: () => {
                track('enterprise_upgrade_contact', {
                  from_tier: currentTier,
                  reason: reasonKey,
                }

   Line 326: "annual"
   Context: {
            subscriptionId: sub.id,
            newPlanId: plan.id,
            billingFrequency: annual ? 'annual' : 'monthly',
            seatsTotal: plan.max_teachers || 1,
            reason: 'Downgrade to Free via upgrade screen',
            metadata: {
              changed_via: 'principal_upgrade_screen',
              payment_required: false,
              downgrade: true,
            }

   Line 391: "function"
   Context: {
        // First, try to check if WebBrowser is available
        if (typeof WebBrowser.openBrowserAsync !== 'function') {
          throw new Error('WebBrowser.openBrowserAsync is not available');
        }

   Line 429: "‚ùå handleUpgrade: Both WebBrowser and Linking failed:"
   Context: {
          console.error('‚ùå handleUpgrade: Both WebBrowser and Linking failed:', linkingError);
          Alert.alert(
            'Unable to Open Payment', 
            'Cannot open the payment page. Please try again or contact support.',
            [
              { text: 'Copy URL', onPress: () => {
                // Copy URL to clipboard as last resort  
                try {
                  require('@expo/clipboard').setStringAsync(result.redirect_url);
                  Alert.alert('URL Copied', 'Payment URL copied to clipboard');
                }

   Line 452: "‚ùå handleUpgrade: Upgrade failed:"
   Context: {
      console.error('‚ùå handleUpgrade: Upgrade failed:', error);
      const errorMessage = error?.message || String(error) || 'Failed to start upgrade';
      Alert.alert('Upgrade Failed', errorMessage);
      track('upgrade_failed', {
        to_tier: plan.tier,
        error: errorMessage,
        error_type: error?.name || 'unknown',
      }

   Line 544: "Upgrade Plan"
   Context: {{ 
        title: 'Upgrade Plan',
        headerShown: true,
        headerStyle: { backgroundColor: '#0b1220' }

   Line 698: "Hide features"
   Context: {expanded[plan.id] ? 'Hide features' : `See all features (${plan.features.length}

   Line 710: "Contact Sales"
   Context: {isEnterprise ? 'Contact Sales' : (monthlyPrice === 0 ? 'Downgrade' : 'Upgrade')}

   Line 738: "enterprise"
   Context: {plans.find(p => p.id === selectedPlan)?.tier.toLowerCase() === 'enterprise'
                        ? 'Contact Sales'
                        : (plans.find(p => p.id === selectedPlan)?.price_monthly === 0 ? 'Downgrade Now' : 'Upgrade Now')}

   Line 743: "No payment required"
   Context: {plans.find(p => p.id === selectedPlan)?.price_monthly === 0 ? 'No payment required' : `Start your ${annual ? 'annual' : 'monthly'}

   Line 754: "Back navigation failed, using replace:"
   Context: {
                    // Fallback navigation if back() fails
                    console.warn('Back navigation failed, using replace:', error);
                    router.replace('/screens/principal-dashboard');
                  }

   Line 779: "Subscription upgrade screen render error:"
   Context: {
    // Fallback render for crash protection
    console.error('Subscription upgrade screen render error:', renderError);
    return (
      <View style={styles.container}

   Line 199: "Plans fetch error:"
   Context: console.error('Plans fetch error:'

   Line 227: "Plans loading failed:"
   Context: console.error('Plans loading failed:'

   Line 239: "Failed to load subscription plans:"
   Context: console.warn('Failed to load subscription plans:'

   Line 288: "Enterprise Upgrade"
   Context: Alert.alert(
          'Enterprise Upgrade'

   Line 339: "Plan Updated"
   Context: Alert.alert('Plan Updated'

   Line 431: "Unable to Open Payment"
   Context: Alert.alert(
            'Unable to Open Payment'

   Line 455: "Upgrade Failed"
   Context: Alert.alert('Upgrade Failed'

   Line 756: "Back navigation failed, using replace:"
   Context: console.warn('Back navigation failed, using replace:'

   Line 781: "Subscription upgrade screen render error:"
   Context: console.error('Subscription upgrade screen render error:'

   Line 76: "Upgrade Required"
   Context: 'Upgrade Required'

   Line 82: "Unlock Premium Features"
   Context: 'Unlock Premium Features'

   Line 83: "This feature requires a higher tier plan"
   Context: 'This feature requires a higher tier plan'

   Line 88: "Upgrade Your Plan"
   Context: 'Upgrade Your Plan'

   Line 89: "Get access to more features and higher limits"
   Context: 'Get access to more features and higher limits'

   Line 151: "Initialization failed"
   Context: 'Initialization failed'

   Line 200: "Failed to fetch plans"
   Context: 'Failed to fetch plans'

   Line 250: "No plan selected"
   Context: 'No plan selected'

   Line 257: "Selected plan not found"
   Context: 'Selected plan not found'

   Line 289: "Enterprise Upgrade"
   Context: 'Enterprise Upgrade'

   Line 294: "Contact Sales"
   Context: 'Contact Sales'

   Line 324: "Active subscription not found"
   Context: 'Active subscription not found'

   Line 331: "Downgrade to Free via upgrade screen"
   Context: 'Downgrade to Free via upgrade screen'

   Line 339: "Plan Updated"
   Context: 'Plan Updated'

   Line 432: "Unable to Open Payment"
   Context: 'Unable to Open Payment'

   Line 454: "Failed to start upgrade"
   Context: 'Failed to start upgrade'

   Line 455: "Upgrade Failed"
   Context: 'Upgrade Failed'

   Line 545: "Upgrade Plan"
   Context: 'Upgrade Plan'

   Line 698: "Hide features"
   Context: 'Hide features'

   Line 294: "Contact Sales"
   Context: 'Contact Sales'

   Line 294: "Contact Sales"
   Context: 'Contact Sales'

   Line 740: "Downgrade Now"
   Context: 'Downgrade Now'

   Line 740: "Upgrade Now"
   Context: 'Upgrade Now'

   Line 743: "No payment required"
   Context: 'No payment required'

   Line 324: "Active subscription not found"
   Context: throw new Error('Active subscription not found'

   Line 394: "WebBrowser.openBrowserAsync is not available"
   Context: throw new Error('WebBrowser.openBrowserAsync is not available'

üìÑ app/screens/super-admin-admin-management.tsx:
   Line 49: "admin"
   Context: {
    value: 'admin',
    label: 'General Admin',
    description: 'Full administrative access across all areas',
    color: '#3b82f6',
    permissions: ['user_management', 'content_moderation', 'billing', 'system_config', 'analytics']
  }

   Line 56: "content_moderator"
   Context: {
    value: 'content_moderator',
    label: 'Content Moderator',
    description: 'Moderate user content and communications',
    color: '#f59e0b',
    permissions: ['content_moderation', 'user_communication']
  }

   Line 63: "support_admin"
   Context: {
    value: 'support_admin',
    label: 'Support Admin',
    description: 'Handle user support and troubleshooting',
    color: '#10b981',
    permissions: ['user_support', 'system_diagnostics', 'user_management']
  }

   Line 70: "billing_admin"
   Context: {
    value: 'billing_admin',
    label: 'Billing Admin',
    description: 'Manage subscriptions and billing',
    color: '#ec4899',
    permissions: ['billing', 'subscriptions', 'payments', 'analytics']
  }

   Line 77: "system_admin"
   Context: {
    value: 'system_admin',
    label: 'System Admin',
    description: 'Technical system administration',
    color: '#8b5cf6',
    permissions: ['system_config', 'database_access', 'analytics', 'system_diagnostics']
  }

   Line 87: "customer_success"
   Context: {
    id: 'customer_success',
    name: 'Customer Success',
    description: 'User support and satisfaction',
    permissions: ['user_support', 'user_communication', 'analytics'],
    color: '#10b981'
  }

   Line 94: "product"
   Context: {
    id: 'product',
    name: 'Product Team',
    description: 'Product development and features',
    permissions: ['system_config', 'analytics', 'content_moderation'],
    color: '#3b82f6'
  }

   Line 101: "operations"
   Context: {
    id: 'operations',
    name: 'Operations',
    description: 'Business operations and billing',
    permissions: ['billing', 'subscriptions', 'analytics', 'user_management'],
    color: '#ec4899'
  }

   Line 108: "engineering"
   Context: {
    id: 'engineering',
    name: 'Engineering',
    description: 'Technical systems and infrastructure',
    permissions: ['system_config', 'database_access', 'system_diagnostics'],
    color: '#8b5cf6'
  }

   Line 115: "content"
   Context: {
    id: 'content',
    name: 'Content Team',
    description: 'Content moderation and curation',
    permissions: ['content_moderation', 'user_communication'],
    color: '#f59e0b'
  }

   Line 143: "Access Denied"
   Context: {
    if (!isSuperAdmin(profile?.role)) {
      Alert.alert('Access Denied', 'Super admin privileges required');
      return;
    }

   Line 208: "Failed to fetch admin users:"
   Context: {
      console.error('Failed to fetch admin users:', error);
      Alert.alert('Error', 'Failed to load admin users');
    }

   Line 226: "Validation Error"
   Context: {
    try {
      // Validate form
      if (!formData.email || !formData.full_name) {
        Alert.alert('Validation Error', 'Please fill in all required fields');
        return;
      }

   Line 254: "Failed to create admin user:"
   Context: {
      console.error('Failed to create admin user:', error);
      Alert.alert('Error', 'Failed to create admin user');
    }

   Line 283: "Delete Admin User"
   Context: {
    Alert.alert(
      'Delete Admin User',
      `Are you sure you want to permanently delete ${user.full_name}

   Line 331: "Admin Management"
   Context: {{ title: 'Admin Management', headerShown: false }

   Line 331: "Admin Management"
   Context: {{ title: 'Admin Management', headerShown: false }

   Line 547: "Enter full name"
   Context: placeholder="Enter full name"

   Line 145: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 209: "Failed to fetch admin users:"
   Context: console.error('Failed to fetch admin users:'

   Line 230: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 255: "Failed to create admin user:"
   Context: console.error('Failed to create admin user:'

   Line 284: "Delete Admin User"
   Context: Alert.alert(
      'Delete Admin User'

   Line 51: "General Admin"
   Context: 'General Admin'

   Line 52: "Full administrative access across all areas"
   Context: 'Full administrative access across all areas'

   Line 58: "Content Moderator"
   Context: 'Content Moderator'

   Line 59: "Moderate user content and communications"
   Context: 'Moderate user content and communications'

   Line 65: "Support Admin"
   Context: 'Support Admin'

   Line 66: "Handle user support and troubleshooting"
   Context: 'Handle user support and troubleshooting'

   Line 72: "Billing Admin"
   Context: 'Billing Admin'

   Line 73: "Manage subscriptions and billing"
   Context: 'Manage subscriptions and billing'

   Line 79: "System Admin"
   Context: 'System Admin'

   Line 80: "Technical system administration"
   Context: 'Technical system administration'

   Line 89: "Customer Success"
   Context: 'Customer Success'

   Line 90: "User support and satisfaction"
   Context: 'User support and satisfaction'

   Line 96: "Product Team"
   Context: 'Product Team'

   Line 97: "Product development and features"
   Context: 'Product development and features'

   Line 104: "Business operations and billing"
   Context: 'Business operations and billing'

   Line 111: "Technical systems and infrastructure"
   Context: 'Technical systems and infrastructure'

   Line 117: "Content Team"
   Context: 'Content Team'

   Line 118: "Content moderation and curation"
   Context: 'Content moderation and curation'

   Line 145: "Access Denied"
   Context: 'Access Denied'

   Line 145: "Super admin privileges required"
   Context: 'Super admin privileges required'

   Line 157: "Sarah Johnson"
   Context: 'Sarah Johnson'

   Line 170: "Mike Chen"
   Context: 'Mike Chen'

   Line 182: "Lisa Rodriguez"
   Context: 'Lisa Rodriguez'

   Line 195: "Alex Kumar"
   Context: 'Alex Kumar'

   Line 210: "Failed to load admin users"
   Context: 'Failed to load admin users'

   Line 230: "Validation Error"
   Context: 'Validation Error'

   Line 230: "Please fill in all required fields"
   Context: 'Please fill in all required fields'

   Line 256: "Failed to create admin user"
   Context: 'Failed to create admin user'

   Line 285: "Delete Admin User"
   Context: 'Delete Admin User'

   Line 322: "Just now"
   Context: 'Just now'

   Line 331: "Admin Management"
   Context: 'Admin Management'

   Line 331: "Admin Management"
   Context: 'Admin Management'

   Line 547: "Enter full name"
   Context: "Enter full name"

üìÑ app/screens/super-admin-ai-quotas.tsx:
   Line 108: "Access Denied"
   Context: {
    if (!isSuperAdmin(profile?.role)) {
      Alert.alert('Access Denied', 'Super admin privileges required');
      return;
    }

   Line 114: "get_superadmin_ai_quotas"
   Context: {
      setLoading(true);

      // Fetch real AI quota data from database
      const quotasResponse = await assertSupabase().rpc('get_superadmin_ai_quotas');
      
      if (quotasResponse.error) {
        console.error('AI quotas RPC error:', quotasResponse.error);
        throw new Error('Failed to fetch AI quota data');
      }

   Line 125: "Failed to fetch AI quota data"
   Context: {
        throw new Error(quotasResponse.data?.error || 'Failed to fetch AI quota data');
      }

   Line 181: "Failed to fetch AI quotas:"
   Context: {
      console.error('Failed to fetch AI quotas:', error);
      Alert.alert('Error', 'Failed to load AI quota settings');
    }

   Line 239: "Failed to log quota update:"
   Context: {
        console.error('Failed to log quota update:', logError);
      }

   Line 245: "Failed to update AI quota:"
   Context: {
      console.error('Failed to update AI quota:', error);
      Alert.alert('Error', 'Failed to update AI quota');
    }

   Line 299: "Failed to log AI access toggle:"
   Context: {
                console.error('Failed to log AI access toggle:', logError);
              }

   Line 315: "Reset Usage"
   Context: {
    Alert.alert(
      'Reset Usage',
      `Are you sure you want to reset AI usage for ${school.school_name}

   Line 346: "ai_usage_reset"
   Context: {
                  admin_user_id: profile?.id,
                  action: 'ai_usage_reset',
                  target_user_id: school.school_id,
                  details: {
                    school_name: school.school_name,
                    previous_usage: school.current_usage,
                    reset_reason: 'Manual admin reset',
                  }

   Line 357: "Failed to log usage reset:"
   Context: {
                console.error('Failed to log usage reset:', logError);
              }

   Line 363: "Failed to reset AI usage:"
   Context: {
              console.error('Failed to reset AI usage:', error);
              Alert.alert('Error', 'Failed to reset AI usage');
            }

   Line 400: "Failed to log global config update:"
   Context: {
        console.error('Failed to log global config update:', logError);
      }

   Line 407: "Failed to update global config:"
   Context: {
      console.error('Failed to update global config:', error);
      Alert.alert('Error', 'Failed to update global configuration');
    }

   Line 465: "AI Quota Management"
   Context: {{ title: 'AI Quota Management', headerShown: false }

   Line 465: "AI Quota Management"
   Context: {{ title: 'AI Quota Management', headerShown: false }

   Line 542: "all"
   Context: {plan === 'all' ? 'All Plans' : plan.charAt(0).toUpperCase() + plan.slice(1)}

   Line 556: "all"
   Context: {status === 'all' ? 'All Status' : 
                 status === 'over_limit' ? 'Over Limit' :
                 status.charAt(0).toUpperCase() + status.slice(1)}

   Line 528: "Search schools..."
   Context: placeholder="Search schools..."

   Line 110: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 121: "AI quotas RPC error:"
   Context: console.error('AI quotas RPC error:'

   Line 182: "Failed to fetch AI quotas:"
   Context: console.error('Failed to fetch AI quotas:'

   Line 240: "Failed to log quota update:"
   Context: console.error('Failed to log quota update:'

   Line 246: "Failed to update AI quota:"
   Context: console.error('Failed to update AI quota:'

   Line 300: "Failed to log AI access toggle:"
   Context: console.error('Failed to log AI access toggle:'

   Line 316: "Reset Usage"
   Context: Alert.alert(
      'Reset Usage'

   Line 358: "Failed to log usage reset:"
   Context: console.error('Failed to log usage reset:'

   Line 364: "Failed to reset AI usage:"
   Context: console.error('Failed to reset AI usage:'

   Line 401: "Failed to log global config update:"
   Context: console.error('Failed to log global config update:'

   Line 408: "Failed to update global config:"
   Context: console.error('Failed to update global config:'

   Line 110: "Access Denied"
   Context: 'Access Denied'

   Line 110: "Super admin privileges required"
   Context: 'Super admin privileges required'

   Line 122: "Failed to fetch AI quota data"
   Context: 'Failed to fetch AI quota data'

   Line 122: "Failed to fetch AI quota data"
   Context: 'Failed to fetch AI quota data'

   Line 183: "Failed to load AI quota settings"
   Context: 'Failed to load AI quota settings'

   Line 243: "AI quota updated successfully"
   Context: 'AI quota updated successfully'

   Line 247: "Failed to update AI quota"
   Context: 'Failed to update AI quota'

   Line 317: "Reset Usage"
   Context: 'Reset Usage'

   Line 353: "Manual admin reset"
   Context: 'Manual admin reset'

   Line 361: "AI usage reset successfully"
   Context: 'AI usage reset successfully'

   Line 365: "Failed to reset AI usage"
   Context: 'Failed to reset AI usage'

   Line 404: "Global AI configuration updated successfully"
   Context: 'Global AI configuration updated successfully'

   Line 409: "Failed to update global configuration"
   Context: 'Failed to update global configuration'

   Line 465: "AI Quota Management"
   Context: 'AI Quota Management'

   Line 465: "AI Quota Management"
   Context: 'AI Quota Management'

   Line 542: "All Plans"
   Context: 'All Plans'

   Line 556: "All Status"
   Context: 'All Status'

   Line 557: "Over Limit"
   Context: 'Over Limit'

   Line 122: "Failed to fetch AI quota data"
   Context: throw new Error('Failed to fetch AI quota data'

üìÑ app/screens/super-admin-analytics.tsx:
   Line 80: "Access Denied"
   Context: {
    if (!isSuperAdmin(profile?.role)) {
      Alert.alert('Access Denied', 'Super admin privileges required');
      return;
    }

   Line 93: "Platform stats error:"
   Context: {
        console.error('Platform stats error:', platformError);
      }

   Line 119: "Subscription analytics error:"
   Context: {
        console.error('Subscription analytics error:', subError);
      }

   Line 193: "Failed to fetch platform analytics:"
   Context: {
      console.error('Failed to fetch platform analytics:', error);
      Alert.alert('Error', 'Failed to load platform analytics');
    }

   Line 270: "Platform Analytics"
   Context: {{ title: 'Platform Analytics', headerShown: false }

   Line 270: "Platform Analytics"
   Context: {{ title: 'Platform Analytics', headerShown: false }

   Line 82: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 94: "Platform stats error:"
   Context: console.error('Platform stats error:'

   Line 120: "Subscription analytics error:"
   Context: console.error('Subscription analytics error:'

   Line 194: "Failed to fetch platform analytics:"
   Context: console.error('Failed to fetch platform analytics:'

   Line 82: "Access Denied"
   Context: 'Access Denied'

   Line 82: "Super admin privileges required"
   Context: 'Super admin privileges required'

   Line 195: "Failed to load platform analytics"
   Context: 'Failed to load platform analytics'

   Line 263: "Failed to export analytics data"
   Context: 'Failed to export analytics data'

   Line 270: "Platform Analytics"
   Context: 'Platform Analytics'

   Line 270: "Platform Analytics"
   Context: 'Platform Analytics'

üìÑ app/screens/super-admin-announcements.tsx:
   Line 87: "Access Denied"
   Context: {
    if (!isSuperAdmin(profile?.role)) {
      Alert.alert('Access Denied', 'Super admin privileges required');
      return;
    }

   Line 194: "school1"
   Context: { id: 'school1', name: 'Bright Minds Preschool' }

   Line 195: "school2"
   Context: { id: 'school2', name: 'Little Learners Academy' }

   Line 196: "school3"
   Context: { id: 'school3', name: 'Sunny Days Nursery' }

   Line 197: "school4"
   Context: { id: 'school4', name: 'Creative Kids Center' }

   Line 198: "school5"
   Context: { id: 'school5', name: 'Happy Kids Preschool' }

   Line 201: "Failed to fetch announcements:"
   Context: {
      console.error('Failed to fetch announcements:', error);
      Alert.alert('Error', 'Failed to load announcements');
    }

   Line 240: "Validation Error"
   Context: {
    if (!formData.title || !formData.content) {
      Alert.alert('Validation Error', 'Please fill in title and content');
      return;
    }

   Line 285: "Failed to log announcement creation:"
   Context: {
        console.error('Failed to log announcement creation:', logError);
      }

   Line 293: "Failed to create announcement:"
   Context: {
      console.error('Failed to create announcement:', error);
      Alert.alert('Error', 'Failed to create announcement');
    }

   Line 301: "Validation Error"
   Context: {
    if (!selectedAnnouncement || !formData.title || !formData.content) {
      Alert.alert('Validation Error', 'Please fill in title and content');
      return;
    }

   Line 340: "Failed to log announcement update:"
   Context: {
        console.error('Failed to log announcement update:', logError);
      }

   Line 349: "Failed to update announcement:"
   Context: {
      console.error('Failed to update announcement:', error);
      Alert.alert('Error', 'Failed to update announcement');
    }

   Line 357: "Delete Announcement"
   Context: {
    Alert.alert(
      'Delete Announcement',
      `Are you sure you want to delete "${announcement.title}

   Line 390: "Failed to log announcement deletion:"
   Context: {
                console.error('Failed to log announcement deletion:', logError);
              }

   Line 396: "Failed to delete announcement:"
   Context: {
              console.error('Failed to delete announcement:', error);
              Alert.alert('Error', 'Failed to delete announcement');
            }

   Line 434: "Failed to log announcement toggle:"
   Context: {
        console.error('Failed to log announcement toggle:', logError);
      }

   Line 438: "Failed to toggle announcement:"
   Context: {
      console.error('Failed to toggle announcement:', error);
      Alert.alert('Error', 'Failed to update announcement status');
      // Revert the change
      setAnnouncements(prev => prev.map(a => 
        a.id === announcement.id ? { ...a, is_active: !newStatus }

   Line 540: "Platform Announcements"
   Context: {{ title: 'Platform Announcements', headerShown: false }

   Line 540: "Platform Announcements"
   Context: {{ title: 'Platform Announcements', headerShown: false }

   Line 723: "Create Announcement"
   Context: {showCreateModal ? 'Create Announcement' : 'Edit Announcement'}

   Line 827: "all"
   Context: {audience === 'all' ? 'All Users' : audience.charAt(0).toUpperCase() + audience.slice(1).replace('_', ' ')}

   Line 744: "Announcement title"
   Context: placeholder="Announcement title"

   Line 755: "Announcement content..."
   Context: placeholder="Announcement content..."

   Line 89: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 202: "Failed to fetch announcements:"
   Context: console.error('Failed to fetch announcements:'

   Line 242: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 286: "Failed to log announcement creation:"
   Context: console.error('Failed to log announcement creation:'

   Line 294: "Failed to create announcement:"
   Context: console.error('Failed to create announcement:'

   Line 242: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 341: "Failed to log announcement update:"
   Context: console.error('Failed to log announcement update:'

   Line 350: "Failed to update announcement:"
   Context: console.error('Failed to update announcement:'

   Line 358: "Delete Announcement"
   Context: Alert.alert(
      'Delete Announcement'

   Line 391: "Failed to log announcement deletion:"
   Context: console.error('Failed to log announcement deletion:'

   Line 397: "Failed to delete announcement:"
   Context: console.error('Failed to delete announcement:'

   Line 435: "Failed to log announcement toggle:"
   Context: console.error('Failed to log announcement toggle:'

   Line 439: "Failed to toggle announcement:"
   Context: console.error('Failed to toggle announcement:'

   Line 89: "Access Denied"
   Context: 'Access Denied'

   Line 89: "Super admin privileges required"
   Context: 'Super admin privileges required'

   Line 100: "New AI Features Available"
   Context: 'New AI Features Available'

   Line 118: "Scheduled Maintenance Window"
   Context: 'Scheduled Maintenance Window'

   Line 136: "Security Update Required"
   Context: 'Security Update Required'

   Line 154: "Holiday Greetings"
   Context: 'Holiday Greetings'

   Line 172: "Beta Testing Program"
   Context: 'Beta Testing Program'

   Line 194: "Bright Minds Preschool"
   Context: 'Bright Minds Preschool'

   Line 195: "Little Learners Academy"
   Context: 'Little Learners Academy'

   Line 196: "Sunny Days Nursery"
   Context: 'Sunny Days Nursery'

   Line 197: "Creative Kids Center"
   Context: 'Creative Kids Center'

   Line 198: "Happy Kids Preschool"
   Context: 'Happy Kids Preschool'

   Line 203: "Failed to load announcements"
   Context: 'Failed to load announcements'

   Line 242: "Validation Error"
   Context: 'Validation Error'

   Line 242: "Please fill in title and content"
   Context: 'Please fill in title and content'

   Line 289: "Announcement created successfully"
   Context: 'Announcement created successfully'

   Line 295: "Failed to create announcement"
   Context: 'Failed to create announcement'

   Line 242: "Validation Error"
   Context: 'Validation Error'

   Line 242: "Please fill in title and content"
   Context: 'Please fill in title and content'

   Line 344: "Announcement updated successfully"
   Context: 'Announcement updated successfully'

   Line 351: "Failed to update announcement"
   Context: 'Failed to update announcement'

   Line 359: "Delete Announcement"
   Context: 'Delete Announcement'

   Line 394: "Announcement deleted successfully"
   Context: 'Announcement deleted successfully'

   Line 398: "Failed to delete announcement"
   Context: 'Failed to delete announcement'

   Line 440: "Failed to update announcement status"
   Context: 'Failed to update announcement status'

   Line 540: "Platform Announcements"
   Context: 'Platform Announcements'

   Line 540: "Platform Announcements"
   Context: 'Platform Announcements'

   Line 723: "Create Announcement"
   Context: 'Create Announcement'

   Line 723: "Edit Announcement"
   Context: 'Edit Announcement'

   Line 744: "Announcement title"
   Context: "Announcement title"

   Line 827: "All Users"
   Context: 'All Users'

üìÑ app/screens/super-admin-dashboard.tsx:
   Line 76: "school-onboarding"
   Context: {
      id: 'school-onboarding',
      title: 'School Onboarding',
      description: 'Create and onboard new schools',
      icon: 'school',
      route: '/screens/super-admin/school-onboarding-wizard',
      color: '#00f5ff',
      badge: 0,
    }

   Line 85: "users"
   Context: {
      id: 'users',
      title: 'User Management',
      description: 'Manage users, roles, and permissions',
      icon: 'people',
      route: '/screens/super-admin-users',
      color: '#3b82f6',
      badge: dashboardStats?.pending_issues || 0,
    }

   Line 94: "admin-management"
   Context: {
      id: 'admin-management',
      title: 'Admin Management',
      description: 'Create and manage admin users',
      icon: 'people-circle',
      route: '/screens/super-admin-admin-management',
      color: '#6366f1',
    }

   Line 102: "ai-quotas"
   Context: {
      id: 'ai-quotas',
      title: 'AI Quota Management',
      description: 'Monitor and manage AI usage quotas',
      icon: 'hardware-chip',
      route: '/screens/super-admin-ai-quotas',
      color: '#10b981',
    }

   Line 110: "content-moderation"
   Context: {
      id: 'content-moderation',
      title: 'Content Moderation',
      description: 'Review and moderate user content',
      icon: 'shield-checkmark',
      route: '/screens/super-admin-moderation',
      color: '#f59e0b',
    }

   Line 118: "announcements"
   Context: {
      id: 'announcements',
      title: 'Announcements',
      description: 'Broadcast messages to all schools',
      icon: 'megaphone',
      route: '/screens/super-admin-announcements',
      color: '#ec4899',
    }

   Line 126: "whatsapp-integration"
   Context: {
      id: 'whatsapp-integration',
      title: 'WhatsApp Hub',
      description: 'Manage WhatsApp communications',
      icon: 'logo-whatsapp',
      route: '/screens/super-admin-whatsapp',
      color: '#25d366',
    }

   Line 134: "system-monitoring"
   Context: {
      id: 'system-monitoring',
      title: 'System Monitoring',
      description: 'View system health and performance',
      icon: 'analytics',
      route: '/screens/super-admin-system-monitoring',
      color: '#f59e0b',
    }

   Line 142: "system-test"
   Context: {
      id: 'system-test',
      title: 'System Tests',
      description: 'Run comprehensive system validation',
      icon: 'checkmark-circle',
      route: '/screens/super-admin-system-test',
      color: '#8b5cf6',
    }

   Line 192: "AI cost RPC error:"
   Context: {
        console.warn('AI cost RPC error:', aiCostResponse.error);
      }

   Line 266: "sys_down"
   Context: {
        alerts.unshift({
          id: 'sys_down',
          message: 'System health degraded - immediate attention required',
          severity: 'high',
          timestamp: new Date().toISOString()
        }

   Line 277: "Dashboard RPC error:"
   Context: {
        console.error('Dashboard RPC error:', dashboardResponse.error);
      }

   Line 300: "healthy"
   Context: {
        database: {
          status: dbStatus === 'healthy' ? 'Operational' : dbStatus === 'degraded' ? 'Degraded' : 'Issues',
          color: dbColor
        }

   Line 305: "healthy"
   Context: {
          status: systemHealthStatus === 'healthy' ? 'All Systems Go' : 'Some Issues',
          color: systemHealthStatus === 'healthy' ? '#10b981' : '#f59e0b'
        }

   Line 333: "AI Gateway"
   Context: {
          name: 'AI Gateway',
          percentage: configMap.ai_gateway_enabled === true || process.env.EXPO_PUBLIC_AI_ENABLED === 'true' ? 100 : 0,
          color: configMap.ai_gateway_enabled === true || process.env.EXPO_PUBLIC_AI_ENABLED === 'true' ? '#10b981' : '#ef4444',
          enabled: configMap.ai_gateway_enabled === true || process.env.EXPO_PUBLIC_AI_ENABLED === 'true'
        }

   Line 339: "Principal Hub"
   Context: {
          name: 'Principal Hub',
          percentage: totalOrgs > 0 ? (configMap.principal_hub_rollout?.percentage || 85) : 0,
          color: totalOrgs > 0 ? '#f59e0b' : '#6b7280',
          enabled: totalOrgs > 0
        }

   Line 345: "STEM Generator"
   Context: {
          name: 'STEM Generator',
          percentage: configMap.stem_generator_enabled === true ? 100 : 50, // Gradual rollout
          color: configMap.stem_generator_enabled === true ? '#10b981' : '#f59e0b',
          enabled: configMap.stem_generator_enabled === true
        }

   Line 351: "Payment Gateway"
   Context: {
          name: 'Payment Gateway',
          percentage: activeSeats > 0 ? 100 : 0, // Enable if we have active subscriptions
          color: activeSeats > 0 ? '#10b981' : '#6b7280',
          enabled: activeSeats > 0
        }

   Line 357: "Mobile App"
   Context: {
          name: 'Mobile App',
          percentage: configMap.mobile_app_rollout?.percentage || 75,
          color: (configMap.mobile_app_rollout?.percentage || 75) > 50 ? '#10b981' : '#f59e0b',
          enabled: (configMap.mobile_app_rollout?.percentage || 75) > 0
        }

   Line 366: "Failed to fetch dashboard data:"
   Context: {
      console.error('Failed to fetch dashboard data:', error);
      // Minimal fallback
      setDashboardStats({
        total_users: 0,
        active_users: 0,
        total_organizations: 0,
        active_seats: 0,
        monthly_revenue: 0,
        ai_usage_cost: 0,
        system_health: 'degraded',
        pending_issues: 1,
      }

   Line 379: "error"
   Context: {
        id: 'error',
        message: 'Failed to load dashboard data',
        severity: 'high',
        timestamp: new Date().toISOString()
      }

   Line 427: "Just now"
   Context: {
    const date = new Date(timestamp);
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffMins = Math.floor(diffMs / (1000 * 60));
    
    if (diffMins < 1) return 'Just now';
    if (diffMins < 60) return `${diffMins}

   Line 500: "superadmin_notifications_opened"
   Context: {() => {
                track('superadmin_notifications_opened');
                Alert.alert('Notifications', 'Notification center coming soon!');
              }

   Line 526: "healthy"
   Context: {dashboardStats?.system_health === 'healthy' ? 'All Systems Operational' : 'System Issues'}

   Line 193: "AI cost RPC error:"
   Context: console.warn('AI cost RPC error:'

   Line 278: "Dashboard RPC error:"
   Context: console.error('Dashboard RPC error:'

   Line 367: "Failed to fetch dashboard data:"
   Context: console.error('Failed to fetch dashboard data:'

   Line 78: "School Onboarding"
   Context: 'School Onboarding'

   Line 79: "Create and onboard new schools"
   Context: 'Create and onboard new schools'

   Line 87: "User Management"
   Context: 'User Management'

   Line 96: "Admin Management"
   Context: 'Admin Management'

   Line 97: "Create and manage admin users"
   Context: 'Create and manage admin users'

   Line 104: "AI Quota Management"
   Context: 'AI Quota Management'

   Line 105: "Monitor and manage AI usage quotas"
   Context: 'Monitor and manage AI usage quotas'

   Line 112: "Content Moderation"
   Context: 'Content Moderation'

   Line 113: "Review and moderate user content"
   Context: 'Review and moderate user content'

   Line 121: "Broadcast messages to all schools"
   Context: 'Broadcast messages to all schools'

   Line 128: "WhatsApp Hub"
   Context: 'WhatsApp Hub'

   Line 129: "Manage WhatsApp communications"
   Context: 'Manage WhatsApp communications'

   Line 136: "System Monitoring"
   Context: 'System Monitoring'

   Line 144: "System Tests"
   Context: 'System Tests'

   Line 145: "Run comprehensive system validation"
   Context: 'Run comprehensive system validation'

   Line 259: "System error occurred"
   Context: 'System error occurred'

   Line 306: "All Systems Go"
   Context: 'All Systems Go'

   Line 306: "Some Issues"
   Context: 'Some Issues'

   Line 334: "AI Gateway"
   Context: 'AI Gateway'

   Line 340: "Principal Hub"
   Context: 'Principal Hub'

   Line 346: "STEM Generator"
   Context: 'STEM Generator'

   Line 352: "Payment Gateway"
   Context: 'Payment Gateway'

   Line 358: "Mobile App"
   Context: 'Mobile App'

   Line 381: "Failed to load dashboard data"
   Context: 'Failed to load dashboard data'

   Line 433: "Just now"
   Context: 'Just now'

   Line 526: "All Systems Operational"
   Context: 'All Systems Operational'

   Line 526: "System Issues"
   Context: 'System Issues'

üìÑ app/screens/super-admin-feature-flags.tsx:
   Line 76: "Access Denied"
   Context: {
    if (!isSuperAdmin(profile?.role)) {
      Alert.alert('Access Denied', 'Super admin privileges required');
      return;
    }

   Line 91: "Feature flags fetch error:"
   Context: {
        console.error('Feature flags fetch error:', flagsError);
        // Create the table if it doesn't exist
        if (flagsError.code === '42P01') {
          console.log('Feature flags table does not exist, creating mock data...');
          // In a real implementation, you would create the table here
          setFeatureFlags([
            {
              id: '1',
              name: 'AI Lesson Generation',
              key: 'ai_lesson_generation',
              description: 'Enables AI-powered lesson generation for teachers',
              is_enabled: true,
              rollout_percentage: 100,
              target_roles: ['teacher', 'principal'],
              target_schools: [],
              environment: 'production',
              created_at: new Date().toISOString(),
              updated_at: new Date().toISOString(),
              created_by: profile?.id || 'system',
              updated_by: profile?.id || 'system',
            }

   Line 154: "Failed to fetch feature flags:"
   Context: {
      console.error('Failed to fetch feature flags:', error);
      Alert.alert('Error', 'Failed to load feature flags');
    }

   Line 172: "Toggle Feature Flag"
   Context: {
    const newStatus = !flag.is_enabled;
    
    Alert.alert(
      'Toggle Feature Flag',
      `Are you sure you want to ${newStatus ? 'enable' : 'disable'}

   Line 194: "Database update failed:"
   Context: {
                console.warn('Database update failed:', error);
              }

   Line 224: "Failed to log feature flag toggle:"
   Context: {
                console.error('Failed to log feature flag toggle:', logError);
              }

   Line 233: "Failed to toggle feature flag:"
   Context: {
              console.error('Failed to toggle feature flag:', error);
              Alert.alert('Error', 'Failed to update feature flag');
            }

   Line 243: "Validation Error"
   Context: {
    if (!formData.name || !formData.key || !formData.description) {
      Alert.alert('Validation Error', 'Please fill in all required fields');
      return;
    }

   Line 250: "Validation Error"
   Context: {
      Alert.alert('Validation Error', 'A feature flag with this key already exists');
      return;
    }

   Line 284: "Database insert failed:"
   Context: {
        console.warn('Database insert failed:', error);
      }

   Line 311: "Failed to log feature flag creation:"
   Context: {
        console.error('Failed to log feature flag creation:', logError);
      }

   Line 319: "Failed to create feature flag:"
   Context: {
      console.error('Failed to create feature flag:', error);
      Alert.alert('Error', 'Failed to create feature flag');
    }

   Line 327: "Validation Error"
   Context: {
    if (!selectedFlag || !formData.name || !formData.key || !formData.description) {
      Alert.alert('Validation Error', 'Please fill in all required fields');
      return;
    }

   Line 358: "Database update failed:"
   Context: {
        console.warn('Database update failed:', error);
      }

   Line 387: "Failed to log feature flag update:"
   Context: {
        console.error('Failed to log feature flag update:', logError);
      }

   Line 396: "Failed to update feature flag:"
   Context: {
      console.error('Failed to update feature flag:', error);
      Alert.alert('Error', 'Failed to update feature flag');
    }

   Line 404: "Delete Feature Flag"
   Context: {
    Alert.alert(
      'Delete Feature Flag',
      `Are you sure you want to delete ${flag.name}

   Line 421: "Database delete failed:"
   Context: {
                console.warn('Database delete failed:', error);
              }

   Line 448: "Failed to log feature flag deletion:"
   Context: {
                console.error('Failed to log feature flag deletion:', logError);
              }

   Line 454: "Failed to delete feature flag:"
   Context: {
              console.error('Failed to delete feature flag:', error);
              Alert.alert('Error', 'Failed to delete feature flag');
            }

   Line 506: "Feature Flags"
   Context: {{ title: 'Feature Flags', headerShown: false }

   Line 506: "Feature Flags"
   Context: {{ title: 'Feature Flags', headerShown: false }

   Line 666: "Create Feature Flag"
   Context: {showCreateModal ? 'Create Feature Flag' : 'Edit Feature Flag'}

   Line 687: "Feature flag display name"
   Context: placeholder="Feature flag display name"

   Line 710: "Describe what this feature flag controls"
   Context: placeholder="Describe what this feature flag controls"

   Line 78: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 92: "Feature flags fetch error:"
   Context: console.error('Feature flags fetch error:'

   Line 95: "Feature flags table does not exist, creating mock data..."
   Context: console.log('Feature flags table does not exist, creating mock data...'

   Line 155: "Failed to fetch feature flags:"
   Context: console.error('Failed to fetch feature flags:'

   Line 175: "Toggle Feature Flag"
   Context: Alert.alert(
      'Toggle Feature Flag'

   Line 195: "Database update failed:"
   Context: console.warn('Database update failed:'

   Line 225: "Failed to log feature flag toggle:"
   Context: console.error('Failed to log feature flag toggle:'

   Line 234: "Failed to toggle feature flag:"
   Context: console.error('Failed to toggle feature flag:'

   Line 245: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 245: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 285: "Database insert failed:"
   Context: console.warn('Database insert failed:'

   Line 312: "Failed to log feature flag creation:"
   Context: console.error('Failed to log feature flag creation:'

   Line 320: "Failed to create feature flag:"
   Context: console.error('Failed to create feature flag:'

   Line 245: "Validation Error"
   Context: Alert.alert('Validation Error'

   Line 195: "Database update failed:"
   Context: console.warn('Database update failed:'

   Line 388: "Failed to log feature flag update:"
   Context: console.error('Failed to log feature flag update:'

   Line 397: "Failed to update feature flag:"
   Context: console.error('Failed to update feature flag:'

   Line 405: "Delete Feature Flag"
   Context: Alert.alert(
      'Delete Feature Flag'

   Line 422: "Database delete failed:"
   Context: console.warn('Database delete failed:'

   Line 449: "Failed to log feature flag deletion:"
   Context: console.error('Failed to log feature flag deletion:'

   Line 455: "Failed to delete feature flag:"
   Context: console.error('Failed to delete feature flag:'

   Line 78: "Access Denied"
   Context: 'Access Denied'

   Line 78: "Super admin privileges required"
   Context: 'Super admin privileges required'

   Line 100: "AI Lesson Generation"
   Context: 'AI Lesson Generation'

   Line 115: "Advanced Analytics"
   Context: 'Advanced Analytics'

   Line 117: "Enhanced analytics and reporting features"
   Context: 'Enhanced analytics and reporting features'

   Line 130: "Mobile Push Notifications"
   Context: 'Mobile Push Notifications'

   Line 146: "Failed to load feature flags"
   Context: 'Failed to load feature flags'

   Line 146: "Failed to load feature flags"
   Context: 'Failed to load feature flags'

   Line 176: "Toggle Feature Flag"
   Context: 'Toggle Feature Flag'

   Line 235: "Failed to update feature flag"
   Context: 'Failed to update feature flag'

   Line 245: "Validation Error"
   Context: 'Validation Error'

   Line 245: "Please fill in all required fields"
   Context: 'Please fill in all required fields'

   Line 245: "Validation Error"
   Context: 'Validation Error'

   Line 251: "A feature flag with this key already exists"
   Context: 'A feature flag with this key already exists'

   Line 315: "Feature flag created successfully"
   Context: 'Feature flag created successfully'

   Line 321: "Failed to create feature flag"
   Context: 'Failed to create feature flag'

   Line 245: "Validation Error"
   Context: 'Validation Error'

   Line 245: "Please fill in all required fields"
   Context: 'Please fill in all required fields'

   Line 391: "Feature flag updated successfully"
   Context: 'Feature flag updated successfully'

   Line 235: "Failed to update feature flag"
   Context: 'Failed to update feature flag'

   Line 406: "Delete Feature Flag"
   Context: 'Delete Feature Flag'

   Line 452: "Feature flag deleted successfully"
   Context: 'Feature flag deleted successfully'

   Line 456: "Failed to delete feature flag"
   Context: 'Failed to delete feature flag'

   Line 506: "Feature Flags"
   Context: 'Feature Flags'

   Line 506: "Feature Flags"
   Context: 'Feature Flags'

   Line 666: "Create Feature Flag"
   Context: 'Create Feature Flag'

   Line 666: "Edit Feature Flag"
   Context: 'Edit Feature Flag'

   Line 687: "Feature flag display name"
   Context: "Feature flag display name"

   Line 710: "Describe what this feature flag controls"
   Context: "Describe what this feature flag controls"

üìÑ app/screens/super-admin-leads.tsx:
   Line 18: "Sales/Leads"
   Context: title="Sales/Leads"

üìÑ app/screens/super-admin-moderation.tsx:
   Line 71: "Access Denied"
   Context: {
    if (!isSuperAdmin(profile?.role)) {
      Alert.alert('Access Denied', 'Super admin privileges required');
      return;
    }

   Line 89: "Moderation items fetch error:"
   Context: {
        console.error('Moderation items fetch error:', moderationError);
        throw new Error('Failed to fetch moderation items');
      }

   Line 120: "No moderation items found in database"
   Context: {
        setModerationItems([]);
        console.log('No moderation items found in database');
      }

   Line 125: "Failed to fetch moderation items:"
   Context: {
      console.error('Failed to fetch moderation items:', error);
      Alert.alert('Error', 'Failed to load moderation items');
      // Set empty array on error to avoid crash
      setModerationItems([]);
    }

   Line 181: "reject"
   Context: {
    if (!reviewNotes && action === 'reject') {
      Alert.alert('Review Notes Required', 'Please provide review notes for rejected content');
      return;
    }

   Line 198: "Moderation RPC error:"
   Context: {
        console.error('Moderation RPC error:', moderationError);
        throw new Error('Failed to moderate content');
      }

   Line 232: "reject"
   Context: {action === 'reject' ? 'Author has been notified.' : ''}

   Line 242: "Failed to moderate content:"
   Context: {
      console.error('Failed to moderate content:', error);
      Alert.alert('Error', 'Failed to moderate content');
    }

   Line 300: "Content Moderation"
   Context: {{ title: 'Content Moderation', headerShown: false }

   Line 300: "Content Moderation"
   Context: {{ title: 'Content Moderation', headerShown: false }

   Line 342: "all"
   Context: {status === 'all' ? 'All Status' : status.charAt(0).toUpperCase() + status.slice(1)}

   Line 356: "all"
   Context: {type === 'all' ? 'All Types' : type.charAt(0).toUpperCase() + type.slice(1)}

   Line 544: "Add your review notes here..."
   Context: placeholder="Add your review notes here..."

   Line 73: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 90: "Moderation items fetch error:"
   Context: console.error('Moderation items fetch error:'

   Line 122: "No moderation items found in database"
   Context: console.log('No moderation items found in database'

   Line 126: "Failed to fetch moderation items:"
   Context: console.error('Failed to fetch moderation items:'

   Line 183: "Review Notes Required"
   Context: Alert.alert('Review Notes Required'

   Line 199: "Moderation RPC error:"
   Context: console.error('Moderation RPC error:'

   Line 243: "Failed to moderate content:"
   Context: console.error('Failed to moderate content:'

   Line 73: "Access Denied"
   Context: 'Access Denied'

   Line 73: "Super admin privileges required"
   Context: 'Super admin privileges required'

   Line 91: "Failed to fetch moderation items"
   Context: 'Failed to fetch moderation items'

   Line 122: "No moderation items found in database"
   Context: 'No moderation items found in database'

   Line 127: "Failed to load moderation items"
   Context: 'Failed to load moderation items'

   Line 183: "Review Notes Required"
   Context: 'Review Notes Required'

   Line 183: "Please provide review notes for rejected content"
   Context: 'Please provide review notes for rejected content'

   Line 200: "Failed to moderate content"
   Context: 'Failed to moderate content'

   Line 200: "Failed to moderate content"
   Context: 'Failed to moderate content'

   Line 300: "Content Moderation"
   Context: 'Content Moderation'

   Line 300: "Content Moderation"
   Context: 'Content Moderation'

   Line 342: "All Status"
   Context: 'All Status'

   Line 356: "All Types"
   Context: 'All Types'

   Line 91: "Failed to fetch moderation items"
   Context: throw new Error('Failed to fetch moderation items'

   Line 200: "Failed to moderate content"
   Context: throw new Error('Failed to moderate content'

üìÑ app/screens/super-admin-settings.tsx:
   Line 51: "Sign Out"
   Context: {
    Alert.alert(
      'Sign Out',
      'Are you sure you want to sign out of the Super Admin panel?',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 57: "Sign Out"
   Context: {
          text: 'Sign Out',
          style: 'destructive',
          onPress: async () => {
            try {
              // Track the sign out
              track('superadmin_signed_out', {
                session_duration: Date.now() - (profile?.last_login_at ? new Date(profile.last_login_at).getTime() : 0),
              }

   Line 78: "Failed to log sign out:"
   Context: {
                console.error('Failed to log sign out:', logError);
              }

   Line 83: "Sign out error:"
   Context: {
              console.error('Sign out error:', error);
              Alert.alert('Error', 'Failed to sign out');
            }

   Line 93: "Toggle Maintenance Mode"
   Context: {
    Alert.alert(
      'Toggle Maintenance Mode',
      value 
        ? 'This will put the platform in maintenance mode, making it inaccessible to all users except super admins.'
        : 'This will disable maintenance mode and restore normal platform access.',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 117: "maintenance_mode_toggled"
   Context: {
                  admin_user_id: profile?.id,
                  action: 'maintenance_mode_toggled',
                  details: {
                    enabled: value,
                    reason: 'Manual toggle by super admin',
                  }

   Line 126: "Failed to log maintenance mode toggle:"
   Context: {
                console.error('Failed to log maintenance mode toggle:', logError);
              }

   Line 135: "Failed to toggle maintenance mode:"
   Context: {
              console.error('Failed to toggle maintenance mode:', error);
              Alert.alert('Error', 'Failed to update maintenance mode');
              setMaintenanceMode(!value); // Revert on error
            }

   Line 146: "Clear Platform Cache"
   Context: {
    Alert.alert(
      'Clear Platform Cache',
      'This will clear all cached data across the platform. This may temporarily slow down the platform while caches rebuild.',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 152: "Clear Cache"
   Context: {
          text: 'Clear Cache',
          style: 'destructive',
          onPress: async () => {
            try {
              // Track the cache clear
              track('superadmin_cache_cleared', {
                timestamp: new Date().toISOString(),
              }

   Line 173: "Failed to log cache clear:"
   Context: {
                console.error('Failed to log cache clear:', logError);
              }

   Line 180: "Failed to clear cache:"
   Context: {
              console.error('Failed to clear cache:', error);
              Alert.alert('Error', 'Failed to clear platform cache');
            }

   Line 217: "Failed to log data export:"
   Context: {
                console.error('Failed to log data export:', logError);
              }

   Line 227: "Failed to initiate data export:"
   Context: {
              console.error('Failed to initiate data export:', error);
              Alert.alert('Error', 'Failed to initiate data export');
            }

   Line 238: "Platform Management"
   Context: {
      title: 'Platform Management',
      items: [
        {
          title: 'Platform Analytics',
          subtitle: 'View comprehensive platform metrics',
          icon: 'analytics',
          action: () => router.push('/screens/super-admin-analytics'),
          type: 'navigation',
        }

   Line 248: "User Management"
   Context: {
          title: 'User Management',
          subtitle: 'Manage users and impersonation',
          icon: 'people',
          action: () => router.push('/screens/super-admin-users'),
          type: 'navigation',
        }

   Line 255: "Subscription Management"
   Context: {
          title: 'Subscription Management',
          subtitle: 'Monitor and manage subscriptions',
          icon: 'card',
          action: () => router.push('/screens/super-admin-subscriptions'),
          type: 'navigation',
        }

   Line 262: "Lead Management"
   Context: {
          title: 'Lead Management',
          subtitle: 'Enterprise leads and conversions',
          icon: 'business',
          action: () => router.push('/screens/super-admin-leads'),
          type: 'navigation',
        }

   Line 271: "Content & Moderation"
   Context: {
      title: 'Content & Moderation',
      items: [
        {
          title: 'Content Moderation',
          subtitle: 'Review flagged content',
          icon: 'shield-checkmark',
          action: () => router.push('/screens/super-admin-moderation'),
          type: 'navigation',
        }

   Line 281: "Platform Announcements"
   Context: {
          title: 'Platform Announcements',
          subtitle: 'Manage platform-wide announcements',
          icon: 'megaphone',
          action: () => router.push('/screens/super-admin-announcements'),
          type: 'navigation',
        }

   Line 288: "Feature Flags"
   Context: {
          title: 'Feature Flags',
          subtitle: 'Control feature rollouts',
          icon: 'flag',
          action: () => router.push('/screens/super-admin-feature-flags'),
          type: 'navigation',
        }

   Line 297: "AI & Resources"
   Context: {
      title: 'AI & Resources',
      items: [
        {
          title: 'AI Quota Management',
          subtitle: 'Monitor and control AI usage',
          icon: 'flash',
          action: () => router.push('/screens/super-admin-ai-quotas'),
          type: 'navigation',
        }

   Line 309: "System Configuration"
   Context: {
      title: 'System Configuration',
      items: [
        {
          title: 'Maintenance Mode',
          subtitle: 'Platform-wide maintenance mode',
          icon: 'construct',
          action: () => toggleMaintenanceMode(!maintenanceMode),
          type: 'toggle',
          value: maintenanceMode,
          danger: true,
        }

   Line 321: "Debug Mode"
   Context: {
          title: 'Debug Mode',
          subtitle: 'Enable detailed logging',
          icon: 'bug',
          action: () => setDebugMode(!debugMode),
          type: 'toggle',
          value: debugMode,
        }

   Line 329: "Auto Backup"
   Context: {
          title: 'Auto Backup',
          subtitle: 'Automatic daily backups',
          icon: 'cloud-upload',
          action: () => setAutoBackup(!autoBackup),
          type: 'toggle',
          value: autoBackup,
        }

   Line 350: "Security Alerts"
   Context: {
          title: 'Security Alerts',
          subtitle: 'High-priority security notifications',
          icon: 'shield',
          action: () => setSecurityAlerts(!securityAlerts),
          type: 'toggle',
          value: securityAlerts,
        }

   Line 360: "Data Management"
   Context: {
      title: 'Data Management',
      items: [
        {
          title: 'Clear Platform Cache',
          subtitle: 'Clear all cached data',
          icon: 'refresh',
          action: clearPlatformCache,
          type: 'action',
          danger: true,
        }

   Line 398: "Super Admin Settings"
   Context: {{ title: 'Super Admin Settings', headerShown: false }

   Line 398: "Super Admin Settings"
   Context: {{ title: 'Super Admin Settings', headerShown: false }

   Line 52: "Sign Out"
   Context: Alert.alert(
      'Sign Out'

   Line 79: "Failed to log sign out:"
   Context: console.error('Failed to log sign out:'

   Line 84: "Sign out error:"
   Context: console.error('Sign out error:'

   Line 94: "Toggle Maintenance Mode"
   Context: Alert.alert(
      'Toggle Maintenance Mode'

   Line 127: "Failed to log maintenance mode toggle:"
   Context: console.error('Failed to log maintenance mode toggle:'

   Line 136: "Failed to toggle maintenance mode:"
   Context: console.error('Failed to toggle maintenance mode:'

   Line 147: "Clear Platform Cache"
   Context: Alert.alert(
      'Clear Platform Cache'

   Line 174: "Failed to log cache clear:"
   Context: console.error('Failed to log cache clear:'

   Line 181: "Failed to clear cache:"
   Context: console.error('Failed to clear cache:'

   Line 218: "Failed to log data export:"
   Context: console.error('Failed to log data export:'

   Line 228: "Failed to initiate data export:"
   Context: console.error('Failed to initiate data export:'

   Line 53: "Sign Out"
   Context: 'Sign Out'

   Line 53: "Sign Out"
   Context: 'Sign Out'

   Line 85: "Failed to sign out"
   Context: 'Failed to sign out'

   Line 95: "Toggle Maintenance Mode"
   Context: 'Toggle Maintenance Mode'

   Line 122: "Manual toggle by super admin"
   Context: 'Manual toggle by super admin'

   Line 137: "Failed to update maintenance mode"
   Context: 'Failed to update maintenance mode'

   Line 148: "Clear Platform Cache"
   Context: 'Clear Platform Cache'

   Line 153: "Clear Cache"
   Context: 'Clear Cache'

   Line 178: "Platform cache cleared successfully"
   Context: 'Platform cache cleared successfully'

   Line 182: "Failed to clear platform cache"
   Context: 'Failed to clear platform cache'

   Line 229: "Failed to initiate data export"
   Context: 'Failed to initiate data export'

   Line 239: "Platform Management"
   Context: 'Platform Management'

   Line 242: "Platform Analytics"
   Context: 'Platform Analytics'

   Line 249: "User Management"
   Context: 'User Management'

   Line 250: "Manage users and impersonation"
   Context: 'Manage users and impersonation'

   Line 256: "Subscription Management"
   Context: 'Subscription Management'

   Line 257: "Monitor and manage subscriptions"
   Context: 'Monitor and manage subscriptions'

   Line 263: "Lead Management"
   Context: 'Lead Management'

   Line 264: "Enterprise leads and conversions"
   Context: 'Enterprise leads and conversions'

   Line 275: "Content Moderation"
   Context: 'Content Moderation'

   Line 276: "Review flagged content"
   Context: 'Review flagged content'

   Line 282: "Platform Announcements"
   Context: 'Platform Announcements'

   Line 289: "Feature Flags"
   Context: 'Feature Flags'

   Line 290: "Control feature rollouts"
   Context: 'Control feature rollouts'

   Line 301: "AI Quota Management"
   Context: 'AI Quota Management'

   Line 302: "Monitor and control AI usage"
   Context: 'Monitor and control AI usage'

   Line 310: "System Configuration"
   Context: 'System Configuration'

   Line 313: "Maintenance Mode"
   Context: 'Maintenance Mode'

   Line 322: "Debug Mode"
   Context: 'Debug Mode'

   Line 323: "Enable detailed logging"
   Context: 'Enable detailed logging'

   Line 330: "Auto Backup"
   Context: 'Auto Backup'

   Line 331: "Automatic daily backups"
   Context: 'Automatic daily backups'

   Line 343: "Email Notifications"
   Context: 'Email Notifications'

   Line 344: "Receive admin email alerts"
   Context: 'Receive admin email alerts'

   Line 351: "Security Alerts"
   Context: 'Security Alerts'

   Line 361: "Data Management"
   Context: 'Data Management'

   Line 148: "Clear Platform Cache"
   Context: 'Clear Platform Cache'

   Line 365: "Clear all cached data"
   Context: 'Clear all cached data'

   Line 373: "Generate comprehensive data export"
   Context: 'Generate comprehensive data export'

   Line 53: "Sign Out"
   Context: 'Sign Out'

   Line 385: "Sign out of Super Admin panel"
   Context: 'Sign out of Super Admin panel'

   Line 398: "Super Admin Settings"
   Context: 'Super Admin Settings'

   Line 398: "Super Admin Settings"
   Context: 'Super Admin Settings'

üìÑ app/screens/super-admin-subscriptions.tsx:
   Line 82: "Form state updated:"
   Context: {
    console.log('Form state updated:', createForm);
  }

   Line 127: "School RPC error:"
   Context: {
        console.error('School RPC error:', schoolErr?.message || schoolErr);
        schoolsData = [];
      }

   Line 140: "Pro Plan"
   Context: {
          // Normalize names (e.g., "Pro Plan" -> "Pro Plus")
          const normalizedName = p.name === 'Pro Plan' ? 'Pro Plus' : p.name;
          return { ...p, name: normalizedName }

   Line 156: "Plan RPC error:"
   Context: {
        console.error('Plan RPC error:', planErr?.message || planErr);
        plansData = [];
      }

   Line 165: "Failed to fetch subscription data:"
   Context: {
      console.error('Failed to fetch subscription data:', e);
      Alert.alert('Error', 'Failed to load subscription data');
    }

   Line 197: "Failed to update subscription status:"
   Context: {
      console.error('Failed to update subscription status:', e);
      Alert.alert('Error', e.message || 'Failed to update subscription');
    }

   Line 203: "createSubscription called with form:"
   Context: {
    console.log('createSubscription called with form:', createForm);
    
    if (!createForm.school_id || !createForm.plan_tier) {
      console.log('Missing school or plan:', { school_id: createForm.school_id, plan_tier: createForm.plan_tier }

   Line 214: "Selected school not found in schools array:"
   Context: {
      console.error('Selected school not found in schools array:', {
        selectedId: createForm.school_id,
        availableSchools: schools.map(s => ({ id: s.id.substring(0, 8) + '...', name: s.name }

   Line 225: "Available plans:"
   Context: {
      console.log('Available plans:', plans);
      const selectedPlan = plans.find(p => {
        const key = (p.tier || p.id || p.name?.toLowerCase()?.replace(/\s+/g, '_'));
        return key === createForm.plan_tier || p.id === createForm.plan_id;
      }

   Line 234: "Plan not found for tier:"
   Context: {
        console.log('Plan not found for tier:', createForm.plan_tier);
        Alert.alert('Error', 'Selected plan not found');
        return;
      }

   Line 286: "Subscription RPC error:"
   Context: {
        console.error('Subscription RPC error:', error);
        throw error;
      }

   Line 303: "Failed to update preschool subscription metadata:"
   Context: {
        console.error('Failed to update preschool subscription metadata:', updateError);
        // Don't fail the whole process for this, just log it
      }

   Line 317: "Failed to send notification:"
   Context: {
        console.warn('Failed to send notification:', error);
      }

   Line 333: "Failed to send payment notifications:"
   Context: {
          console.warn('Failed to send payment notifications:', error);
        }

   Line 342: "Manual Override"
   Context: {
              text: 'Manual Override', 
              style: 'destructive',
              onPress: () => {
                Alert.alert(
                  'Manual Activation',
                  'You can manually activate this subscription from the subscriptions list if needed for exceptional circumstances.',
                  [{ text: 'Understood', style: 'default' }

   Line 369: "Failed to create subscription:"
   Context: {
      console.error('Failed to create subscription:', e);
      Alert.alert('Error', e.message || 'Failed to create subscription');
    }

   Line 394: "Manually Activate Subscription"
   Context: {
    Alert.alert(
      'Manually Activate Subscription',
      `Are you sure you want to activate the subscription for ${subscription.school?.name || 'Unknown School'}

   Line 407: "active"
   Context: { 
                  status: 'active',
                  metadata: {
                    ...subscription.metadata,
                    manual_activation: true,
                    manual_activation_by: 'superadmin',
                    manual_activation_at: new Date().toISOString(),
                    manual_activation_reason: 'SuperAdmin override - no payment confirmation'
                  }

   Line 431: "Failed to manually activate subscription:"
   Context: {
              console.error('Failed to manually activate subscription:', e);
              Alert.alert('Error', e.message || 'Failed to activate subscription');
            }

   Line 441: "Confirm Delete"
   Context: {
    Alert.alert(
      'Confirm Delete',
      `Are you sure you want to delete the subscription for ${schoolName}

   Line 462: "Failed to delete subscription:"
   Context: {
              console.error('Failed to delete subscription:', e);
              Alert.alert('Error', e.message || 'Failed to delete subscription');
            }

   Line 479: "Manage Subscriptions"
   Context: {{ 
          title: 'Manage Subscriptions',
          headerBackVisible: true,
          headerShown: true,
          headerStyle: { backgroundColor: '#0b1220' }

   Line 526: "Create Subscription button clicked"
   Context: {() => {
                console.log('Create Subscription button clicked');
                setShowCreateModal(true);
              }

   Line 397: "Unknown School"
   Context: {subscription.school?.name || 'Unknown School'}

   Line 565: "N/A"
   Context: {subscription.school?.tenant_slug || 'N/A'}

   Line 619: "Unknown School"
   Context: {() => deleteSubscription(subscription.id, subscription.school?.name || 'Unknown School')}

   Line 731: "None selected"
   Context: {createForm.plan_tier || 'None selected'}

   Line 740: "Plan selected:"
   Context: {() => {
                  console.log('Plan selected:', {
                    planId: plan.id,
                    planTier: plan.tier,
                    planName: plan.name,
                    maxTeachers: plan.max_teachers,
                    fullPlan: plan
                  }

   Line 759: "NO TIER"
   Context: {plan.tier || 'NO TIER'}

   Line 798: "Create Subscription button pressed!"
   Context: {() => {
                console.log('Create Subscription button pressed!');
                if (!creating) {
                  createSubscription();
                }

   Line 807: "Creating..."
   Context: {creating ? 'Creating...' : 'Create Subscription'}

   Line 507: "Go back"
   Context: accessibilityLabel="Go back"

   Line 697: "Create Subscription"
   Context: title="Create Subscription"

   Line 700: "Close modal"
   Context: accessibilityLabel="Close modal"

   Line 83: "Form state updated:"
   Context: console.log('Form state updated:'

   Line 128: "School RPC error:"
   Context: console.error('School RPC error:'

   Line 133: "Available schools for subscription creation:"
   Context: console.log('Available schools for subscription creation:'

   Line 157: "Plan RPC error:"
   Context: console.error('Plan RPC error:'

   Line 161: "Loaded subscription plans:"
   Context: console.log('Loaded subscription plans:'

   Line 162: "Plans structure check:"
   Context: console.log('Plans structure check:'

   Line 166: "Failed to fetch subscription data:"
   Context: console.error('Failed to fetch subscription data:'

   Line 198: "Failed to update subscription status:"
   Context: console.error('Failed to update subscription status:'

   Line 207: "Missing school or plan:"
   Context: console.log('Missing school or plan:'

   Line 215: "Selected school not found in schools array:"
   Context: console.error('Selected school not found in schools array:'

   Line 222: "Selected school validated:"
   Context: console.log('Selected school validated:'

   Line 226: "Available plans:"
   Context: console.log('Available plans:'

   Line 231: "Selected plan:"
   Context: console.log('Selected plan:'

   Line 232: "Looking for plan with tier:"
   Context: console.log('Looking for plan with tier:'

   Line 235: "Plan not found for tier:"
   Context: console.log('Plan not found for tier:'

   Line 272: "Creating subscription with data:"
   Context: console.log('Creating subscription with data:'

   Line 284: "RPC create response:"
   Context: console.log('RPC create response:'

   Line 287: "Subscription RPC error:"
   Context: console.error('Subscription RPC error:'

   Line 304: "Failed to update preschool subscription metadata:"
   Context: console.error('Failed to update preschool subscription metadata:'

   Line 318: "Failed to send notification:"
   Context: console.warn('Failed to send notification:'

   Line 334: "Failed to send payment notifications:"
   Context: console.warn('Failed to send payment notifications:'

   Line 337: "Paid Subscription Created"
   Context: Alert.alert(
          'Paid Subscription Created'

   Line 346: "Manual Activation"
   Context: Alert.alert(
                  'Manual Activation'

   Line 370: "Failed to create subscription:"
   Context: console.error('Failed to create subscription:'

   Line 395: "Manually Activate Subscription"
   Context: Alert.alert(
      'Manually Activate Subscription'

   Line 432: "Failed to manually activate subscription:"
   Context: console.error('Failed to manually activate subscription:'

   Line 442: "Confirm Delete"
   Context: Alert.alert(
      'Confirm Delete'

   Line 463: "Failed to delete subscription:"
   Context: console.error('Failed to delete subscription:'

   Line 527: "Create Subscription button clicked"
   Context: console.log('Create Subscription button clicked'

   Line 741: "Plan selected:"
   Context: console.log('Plan selected:'

   Line 799: "Create Subscription button pressed!"
   Context: console.log('Create Subscription button pressed!'

   Line 141: "Pro Plan"
   Context: "Pro Plan"

   Line 141: "Pro Plus"
   Context: "Pro Plus"

   Line 142: "Pro Plan"
   Context: 'Pro Plan'

   Line 142: "Pro Plus"
   Context: 'Pro Plus'

   Line 167: "Failed to load subscription data"
   Context: 'Failed to load subscription data'

   Line 199: "Failed to update subscription"
   Context: 'Failed to update subscription'

   Line 208: "Please select a school and plan"
   Context: 'Please select a school and plan'

   Line 236: "Selected plan not found"
   Context: 'Selected plan not found'

   Line 338: "Paid Subscription Created"
   Context: 'Paid Subscription Created'

   Line 343: "Manual Override"
   Context: 'Manual Override'

   Line 347: "Manual Activation"
   Context: 'Manual Activation'

   Line 371: "Failed to create subscription"
   Context: 'Failed to create subscription'

   Line 396: "Manually Activate Subscription"
   Context: 'Manually Activate Subscription'

   Line 397: "Unknown School"
   Context: 'Unknown School'

   Line 433: "Failed to activate subscription"
   Context: 'Failed to activate subscription'

   Line 443: "Confirm Delete"
   Context: 'Confirm Delete'

   Line 460: "Subscription deleted"
   Context: 'Subscription deleted'

   Line 464: "Failed to delete subscription"
   Context: 'Failed to delete subscription'

   Line 480: "Manage Subscriptions"
   Context: 'Manage Subscriptions'

   Line 507: "Go back"
   Context: "Go back"

   Line 527: "Create Subscription button clicked"
   Context: 'Create Subscription button clicked'

   Line 397: "Unknown School"
   Context: 'Unknown School'

   Line 397: "Unknown School"
   Context: 'Unknown School'

   Line 675: "Failed to seed free plan"
   Context: 'Failed to seed free plan'

   Line 697: "Create Subscription"
   Context: "Create Subscription"

   Line 700: "Close modal"
   Context: "Close modal"

   Line 731: "None selected"
   Context: 'None selected'

   Line 759: "NO TIER"
   Context: 'NO TIER'

   Line 807: "Create Subscription"
   Context: 'Create Subscription'

   Line 662: "No free plan available. Please create plans first."
   Context: throw new Error('No free plan available. Please create plans first.'

üìÑ app/screens/super-admin-system-monitoring.tsx:
   Line 90: "Access Denied"
   Context: {
    if (!isSuperAdmin(profile?.role)) {
      Alert.alert('Access Denied', 'Super admin privileges required');
      return;
    }

   Line 103: "Health metrics error:"
   Context: {
        console.error('Health metrics error:', healthError);
        // Fall back to basic data if health metrics fail
      }

   Line 112: "Performance metrics error:"
   Context: {
        console.error('Performance metrics error:', performanceError);
      }

   Line 120: "Migration status error:"
   Context: {
        console.error('Migration status error:', migrationError);
      }

   Line 128: "Error logs fetch error:"
   Context: {
        console.error('Error logs fetch error:', logsError);
      }

   Line 133: "unknown"
   Context: {
        database_status: healthData?.data?.database_status || 'unknown',
        database_connections: healthData?.data?.database_connections || 0,
        database_max_connections: healthData?.data?.database_max_connections || 100,
        migration_status: migrationData?.data?.migration_status || 'unknown',
        latest_migration: migrationData?.data?.latest_migration || 'Unknown',
        failed_migrations: migrationData?.data?.failed_migrations || [],
        rls_enabled: healthData?.data?.rls_enabled || true,
        system_load: Math.min(95, (healthData?.data?.database_connections / healthData?.data?.database_max_connections) * 100) || 15,
        memory_usage: performanceData?.data?.cache_hit_ratio ? (100 - performanceData.data.cache_hit_ratio) : 25,
        disk_usage: Math.min(95, (healthData?.data?.storage_used_gb || 1) / 10) || 20,
        uptime: healthData?.data?.uptime_seconds ? formatUptime(healthData.data.uptime_seconds) : 'Unknown',
        last_check: healthData?.data?.last_check || new Date().toISOString(),
      }

   Line 175: "Failed to fetch system health:"
   Context: {
      console.error('Failed to fetch system health:', error);
      Alert.alert('Error', 'Failed to load system monitoring data');
    }

   Line 252: "System Monitoring"
   Context: {{ title: 'System Monitoring', headerShown: false }

   Line 252: "System Monitoring"
   Context: {{ title: 'System Monitoring', headerShown: false }

   Line 92: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 104: "Health metrics error:"
   Context: console.error('Health metrics error:'

   Line 113: "Performance metrics error:"
   Context: console.error('Performance metrics error:'

   Line 121: "Migration status error:"
   Context: console.error('Migration status error:'

   Line 129: "Error logs fetch error:"
   Context: console.error('Error logs fetch error:'

   Line 176: "Failed to fetch system health:"
   Context: console.error('Failed to fetch system health:'

   Line 92: "Access Denied"
   Context: 'Access Denied'

   Line 92: "Super admin privileges required"
   Context: 'Super admin privileges required'

   Line 177: "Failed to load system monitoring data"
   Context: 'Failed to load system monitoring data'

   Line 252: "System Monitoring"
   Context: 'System Monitoring'

   Line 252: "System Monitoring"
   Context: 'System Monitoring'

üìÑ app/screens/super-admin-system-test.tsx:
   Line 51: "auth_rls"
   Context: {
    const initialTestSuites: TestSuite[] = [
      {
        id: 'auth_rls',
        name: 'Authentication & RLS Tests',
        description: 'Validate authentication and Row Level Security policies',
        status: 'pending',
        tests: [
          {
            id: 'is_superadmin_check',
            name: 'Super Admin Role Check',
            description: 'Verify is_superadmin() function works correctly',
            status: 'pending',
          }

   Line 65: "rls_policies_check"
   Context: {
            id: 'rls_policies_check',
            name: 'RLS Policies Validation',
            description: 'Check that RLS policies are properly configured',
            status: 'pending',
          }

   Line 71: "access_control_check"
   Context: {
            id: 'access_control_check',
            name: 'Access Control Validation',
            description: 'Verify proper access control for superadmin functions',
            status: 'pending',
          }

   Line 79: "database_functions"
   Context: {
        id: 'database_functions',
        name: 'Database RPC Functions',
        description: 'Test all superadmin RPC functions',
        status: 'pending',
        tests: [
          {
            id: 'dashboard_data_test',
            name: 'Dashboard Data Function',
            description: 'Test get_superadmin_dashboard_data() function',
            status: 'pending',
          }

   Line 91: "system_test_function"
   Context: {
            id: 'system_test_function',
            name: 'System Test Function',
            description: 'Test test_superadmin_system() function',
            status: 'pending',
          }

   Line 97: "user_management_functions"
   Context: {
            id: 'user_management_functions',
            name: 'User Management Functions',
            description: 'Test suspend, reactivate, and role update functions',
            status: 'pending',
          }

   Line 103: "user_deletion_function"
   Context: {
            id: 'user_deletion_function',
            name: 'User Deletion Function',
            description: 'Test superadmin_request_user_deletion() function',
            status: 'pending',
          }

   Line 111: "ui_components"
   Context: {
        id: 'ui_components',
        name: 'UI Components Tests',
        description: 'Validate UI components and navigation',
        status: 'pending',
        tests: [
          {
            id: 'dashboard_rendering',
            name: 'Dashboard Rendering',
            description: 'Check superadmin dashboard loads correctly',
            status: 'pending',
          }

   Line 123: "user_management_ui"
   Context: {
            id: 'user_management_ui',
            name: 'User Management UI',
            description: 'Verify user management screen functionality',
            status: 'pending',
          }

   Line 129: "ai_quotas_ui"
   Context: {
            id: 'ai_quotas_ui',
            name: 'AI Quotas UI',
            description: 'Check AI quota management screen',
            status: 'pending',
          }

   Line 135: "system_monitoring_ui"
   Context: {
            id: 'system_monitoring_ui',
            name: 'System Monitoring UI',
            description: 'Validate system monitoring dashboard',
            status: 'pending',
          }

   Line 143: "end_to_end"
   Context: {
        id: 'end_to_end',
        name: 'End-to-End Tests',
        description: 'Complete workflow tests',
        status: 'pending',
        tests: [
          {
            id: 'user_workflow',
            name: 'User Management Workflow',
            description: 'Test complete user management workflow',
            status: 'pending',
          }

   Line 155: "audit_logging"
   Context: {
            id: 'audit_logging',
            name: 'Audit Logging',
            description: 'Verify audit logs are created properly',
            status: 'pending',
          }

   Line 161: "error_handling"
   Context: {
            id: 'error_handling',
            name: 'Error Handling',
            description: 'Test error handling and edge cases',
            status: 'pending',
          }

   Line 190: "Super Admin Role Check"
   Context: {
              id: testId,
              name: 'Super Admin Role Check',
              description: 'Verify is_superadmin() function works correctly',
              status: 'passed',
              duration: Date.now() - startTime,
              details: { rpc_result: data, user_role: profile?.role }

   Line 198: "Super Admin Role Check"
   Context: {
            result = {
              id: testId,
              name: 'Super Admin Role Check',
              description: 'Verify is_superadmin() function works correctly',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 218: "Dashboard data returned unsuccessful result"
   Context: {
              throw new Error('Dashboard data returned unsuccessful result');
            }

   Line 222: "Dashboard Data Function"
   Context: {
              id: testId,
              name: 'Dashboard Data Function',
              description: 'Test get_superadmin_dashboard_data() function',
              status: 'passed',
              duration: Date.now() - startTime,
              details: { has_user_stats: !!data.data?.user_stats }

   Line 230: "Dashboard Data Function"
   Context: {
            result = {
              id: testId,
              name: 'Dashboard Data Function',
              description: 'Test get_superadmin_dashboard_data() function',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 250: "System test returned no data"
   Context: {
              throw new Error('System test returned no data');
            }

   Line 254: "System Test Function"
   Context: {
              id: testId,
              name: 'System Test Function',
              description: 'Test test_superadmin_system() function',
              status: 'passed',
              duration: Date.now() - startTime,
              details: { 
                superadmin_count: data.superadmin_count,
                system_status: data.system_status,
                current_user_role: data.current_user_role
              }

   Line 266: "System Test Function"
   Context: {
            result = {
              id: testId,
              name: 'System Test Function',
              description: 'Test test_superadmin_system() function',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 285: "Test call"
   Context: {
                target_user_id: testUserId,
                reason: 'Test call'
              }

   Line 285: "Test call"
   Context: {
                target_user_id: testUserId,
                reason: 'Test call'
              }

   Line 301: "User Management Functions"
   Context: {
              id: testId,
              name: 'User Management Functions',
              description: 'Test suspend, reactivate, and role update functions',
              status: 'passed',
              duration: Date.now() - startTime,
              details: { 
                suspend_callable: !suspendError,
                reactivate_callable: !reactivateError,
                suspend_handles_invalid_user: !suspendResult.success,
                reactivate_handles_invalid_user: !reactivateResult.success
              }

   Line 314: "User Management Functions"
   Context: {
            result = {
              id: testId,
              name: 'User Management Functions',
              description: 'Test suspend, reactivate, and role update functions',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 331: "Test call"
   Context: {
                target_user_id: testUserId,
                deletion_reason: 'Test call'
              }

   Line 338: "User Deletion Function"
   Context: {
              id: testId,
              name: 'User Deletion Function',
              description: 'Test superadmin_request_user_deletion() function',
              status: 'passed',
              duration: Date.now() - startTime,
              details: { 
                function_callable: !error,
                handles_invalid_user: !deletionResult.success
              }

   Line 349: "User Deletion Function"
   Context: {
            result = {
              id: testId,
              name: 'User Deletion Function',
              description: 'Test superadmin_request_user_deletion() function',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 372: "RLS Policies Validation"
   Context: {
              id: testId,
              name: 'RLS Policies Validation', 
              description: 'Check that RLS policies are properly configured',
              status: rlsWorking ? 'passed' : 'failed',
              duration: Date.now() - startTime,
              details: { 
                can_query_users: !error,
                rls_active: rlsWorking,
                error_message: error?.message || null
              }

   Line 384: "RLS Policies Validation"
   Context: {
            result = {
              id: testId,
              name: 'RLS Policies Validation',
              description: 'Check that RLS policies are properly configured',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 404: "Access Control Validation"
   Context: {
              id: testId,
              name: 'Access Control Validation',
              description: 'Verify proper access control for superladmin functions',
              status: hasAccess ? 'passed' : 'failed',
              duration: Date.now() - startTime,
              details: { 
                can_access_system_metrics: hasAccess,
                error_message: error?.message || data?.error || null
              }

   Line 415: "Access Control Validation"
   Context: {
            result = {
              id: testId,
              name: 'Access Control Validation',
              description: 'Verify proper access control for superladmin functions',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 435: "Dashboard Rendering"
   Context: {
              id: testId,
              name: 'Dashboard Rendering',
              description: 'Check superadmin dashboard loads correctly',
              status: dashboardWorks ? 'passed' : 'failed',
              duration: Date.now() - startTime,
              details: {
                data_loaded: dashboardWorks,
                has_user_stats: !!data?.data?.user_stats,
                error_message: error?.message || data?.error || null
              }

   Line 447: "Dashboard Rendering"
   Context: {
            result = {
              id: testId,
              name: 'Dashboard Rendering',
              description: 'Check superadmin dashboard loads correctly',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 467: "User Management UI"
   Context: {
              id: testId,
              name: 'User Management UI',
              description: 'Verify user management screen functionality',
              status: userDataLoads ? 'passed' : 'failed',
              duration: Date.now() - startTime,
              details: {
                users_loaded: userDataLoads,
                user_count: Array.isArray(data) ? data.length : 0,
                error_message: error?.message || null
              }

   Line 479: "User Management UI"
   Context: {
            result = {
              id: testId,
              name: 'User Management UI',
              description: 'Verify user management screen functionality',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 500: "AI Quotas UI"
   Context: {
              id: testId,
              name: 'AI Quotas UI',
              description: 'Check AI quota management screen',
              status: aiQuotasUIWorks ? 'passed' : 'failed',
              duration: Date.now() - startTime,
              details: {
                basic_data_access: aiQuotasUIWorks,
                note: 'AI quotas RPC functions would need to be implemented',
                error_message: error?.message || data?.error || null
              }

   Line 512: "AI Quotas UI"
   Context: {
            result = {
              id: testId,
              name: 'AI Quotas UI',
              description: 'Check AI quota management screen',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 536: "System Monitoring UI"
   Context: {
              id: testId,
              name: 'System Monitoring UI',
              description: 'Validate system monitoring dashboard',
              status: monitoringWorks ? 'passed' : 'failed',
              duration: Date.now() - startTime,
              details: {
                health_metrics: !!healthData?.success,
                performance_metrics: !!performanceData?.success,
                error_logs: !!logsData?.success
              }

   Line 548: "System Monitoring UI"
   Context: {
            result = {
              id: testId,
              name: 'System Monitoring UI',
              description: 'Validate system monitoring dashboard',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 582: "User Management Workflow"
   Context: {
              id: testId,
              name: 'User Management Workflow',
              description: 'Test complete user management workflow',
              status: workflowPassed ? 'passed' : 'failed',
              duration: Date.now() - startTime,
              details: workflowDetails
            }

   Line 590: "User Management Workflow"
   Context: {
            result = {
              id: testId,
              name: 'User Management Workflow',
              description: 'Test complete user management workflow',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 606: "info"
   Context: {
                error_level: 'info',
                error_message: 'System test audit log entry',
                error_source: 'system_test',
                error_details: { test_run: true, timestamp: new Date().toISOString() }

   Line 615: "Audit Logging"
   Context: {
              id: testId,
              name: 'Audit Logging',
              description: 'Verify audit logs are created properly',
              status: loggingWorks ? 'passed' : 'failed',
              duration: Date.now() - startTime,
              details: {
                can_create_logs: loggingWorks,
                error_message: error?.message || data?.error || null
              }

   Line 626: "Audit Logging"
   Context: {
            result = {
              id: testId,
              name: 'Audit Logging',
              description: 'Verify audit logs are created properly',
              status: 'failed',
              error: error instanceof Error ? error.message : 'Unknown error',
              duration: Date.now() - startTime,
            }

   Line 654: "invalid_level"
   Context: {
                error_level: 'invalid_level',
                error_message: 'Test error',
                error_source: 'test'
              }

   Line 662: "Error Handling"
   Context: {
              id: testId,
              name: 'Error Handling',
              description: 'Test error handling and edge cases',
              status: errorHandlingWorks ? 'passed' : 'failed',
              duration: Date.now() - startTime,
              details: errorDetails
            }

   Line 670: "Error Handling"
   Context: {
            // Actually, catching errors here is good - it means error handling works
            result = {
              id: testId,
              name: 'Error Handling',
              description: 'Test error handling and edge cases',
              status: 'passed',
              duration: Date.now() - startTime,
              details: { properly_throws_errors: true }

   Line 811: "System Tests"
   Context: {{ title: 'System Tests', headerShown: false }

   Line 811: "System Tests"
   Context: {{ title: 'System Tests', headerShown: false }

   Line 779: "Tests Complete"
   Context: Alert.alert('Tests Complete'

   Line 56: "Validate authentication and Row Level Security policies"
   Context: 'Validate authentication and Row Level Security policies'

   Line 61: "Super Admin Role Check"
   Context: 'Super Admin Role Check'

   Line 67: "RLS Policies Validation"
   Context: 'RLS Policies Validation'

   Line 68: "Check that RLS policies are properly configured"
   Context: 'Check that RLS policies are properly configured'

   Line 73: "Access Control Validation"
   Context: 'Access Control Validation'

   Line 74: "Verify proper access control for superadmin functions"
   Context: 'Verify proper access control for superadmin functions'

   Line 81: "Database RPC Functions"
   Context: 'Database RPC Functions'

   Line 82: "Test all superadmin RPC functions"
   Context: 'Test all superadmin RPC functions'

   Line 87: "Dashboard Data Function"
   Context: 'Dashboard Data Function'

   Line 93: "System Test Function"
   Context: 'System Test Function'

   Line 99: "User Management Functions"
   Context: 'User Management Functions'

   Line 105: "User Deletion Function"
   Context: 'User Deletion Function'

   Line 113: "UI Components Tests"
   Context: 'UI Components Tests'

   Line 114: "Validate UI components and navigation"
   Context: 'Validate UI components and navigation'

   Line 119: "Dashboard Rendering"
   Context: 'Dashboard Rendering'

   Line 120: "Check superadmin dashboard loads correctly"
   Context: 'Check superadmin dashboard loads correctly'

   Line 125: "User Management UI"
   Context: 'User Management UI'

   Line 126: "Verify user management screen functionality"
   Context: 'Verify user management screen functionality'

   Line 131: "AI Quotas UI"
   Context: 'AI Quotas UI'

   Line 132: "Check AI quota management screen"
   Context: 'Check AI quota management screen'

   Line 137: "System Monitoring UI"
   Context: 'System Monitoring UI'

   Line 138: "Validate system monitoring dashboard"
   Context: 'Validate system monitoring dashboard'

   Line 146: "Complete workflow tests"
   Context: 'Complete workflow tests'

   Line 151: "User Management Workflow"
   Context: 'User Management Workflow'

   Line 152: "Test complete user management workflow"
   Context: 'Test complete user management workflow'

   Line 157: "Audit Logging"
   Context: 'Audit Logging'

   Line 158: "Verify audit logs are created properly"
   Context: 'Verify audit logs are created properly'

   Line 163: "Error Handling"
   Context: 'Error Handling'

   Line 164: "Test error handling and edge cases"
   Context: 'Test error handling and edge cases'

   Line 61: "Super Admin Role Check"
   Context: 'Super Admin Role Check'

   Line 61: "Super Admin Role Check"
   Context: 'Super Admin Role Check'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 219: "Dashboard data returned unsuccessful result"
   Context: 'Dashboard data returned unsuccessful result'

   Line 87: "Dashboard Data Function"
   Context: 'Dashboard Data Function'

   Line 87: "Dashboard Data Function"
   Context: 'Dashboard Data Function'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 251: "System test returned no data"
   Context: 'System test returned no data'

   Line 93: "System Test Function"
   Context: 'System Test Function'

   Line 93: "System Test Function"
   Context: 'System Test Function'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 287: "Test call"
   Context: 'Test call'

   Line 287: "Test call"
   Context: 'Test call'

   Line 99: "User Management Functions"
   Context: 'User Management Functions'

   Line 99: "User Management Functions"
   Context: 'User Management Functions'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 287: "Test call"
   Context: 'Test call'

   Line 105: "User Deletion Function"
   Context: 'User Deletion Function'

   Line 105: "User Deletion Function"
   Context: 'User Deletion Function'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 67: "RLS Policies Validation"
   Context: 'RLS Policies Validation'

   Line 68: "Check that RLS policies are properly configured"
   Context: 'Check that RLS policies are properly configured'

   Line 67: "RLS Policies Validation"
   Context: 'RLS Policies Validation'

   Line 68: "Check that RLS policies are properly configured"
   Context: 'Check that RLS policies are properly configured'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 73: "Access Control Validation"
   Context: 'Access Control Validation'

   Line 407: "Verify proper access control for superladmin functions"
   Context: 'Verify proper access control for superladmin functions'

   Line 73: "Access Control Validation"
   Context: 'Access Control Validation'

   Line 407: "Verify proper access control for superladmin functions"
   Context: 'Verify proper access control for superladmin functions'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 119: "Dashboard Rendering"
   Context: 'Dashboard Rendering'

   Line 120: "Check superadmin dashboard loads correctly"
   Context: 'Check superadmin dashboard loads correctly'

   Line 119: "Dashboard Rendering"
   Context: 'Dashboard Rendering'

   Line 120: "Check superadmin dashboard loads correctly"
   Context: 'Check superadmin dashboard loads correctly'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 125: "User Management UI"
   Context: 'User Management UI'

   Line 126: "Verify user management screen functionality"
   Context: 'Verify user management screen functionality'

   Line 125: "User Management UI"
   Context: 'User Management UI'

   Line 126: "Verify user management screen functionality"
   Context: 'Verify user management screen functionality'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 131: "AI Quotas UI"
   Context: 'AI Quotas UI'

   Line 132: "Check AI quota management screen"
   Context: 'Check AI quota management screen'

   Line 508: "AI quotas RPC functions would need to be implemented"
   Context: 'AI quotas RPC functions would need to be implemented'

   Line 131: "AI Quotas UI"
   Context: 'AI Quotas UI'

   Line 132: "Check AI quota management screen"
   Context: 'Check AI quota management screen'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 137: "System Monitoring UI"
   Context: 'System Monitoring UI'

   Line 138: "Validate system monitoring dashboard"
   Context: 'Validate system monitoring dashboard'

   Line 137: "System Monitoring UI"
   Context: 'System Monitoring UI'

   Line 138: "Validate system monitoring dashboard"
   Context: 'Validate system monitoring dashboard'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 151: "User Management Workflow"
   Context: 'User Management Workflow'

   Line 152: "Test complete user management workflow"
   Context: 'Test complete user management workflow'

   Line 151: "User Management Workflow"
   Context: 'User Management Workflow'

   Line 152: "Test complete user management workflow"
   Context: 'Test complete user management workflow'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 608: "System test audit log entry"
   Context: 'System test audit log entry'

   Line 157: "Audit Logging"
   Context: 'Audit Logging'

   Line 158: "Verify audit logs are created properly"
   Context: 'Verify audit logs are created properly'

   Line 157: "Audit Logging"
   Context: 'Audit Logging'

   Line 158: "Verify audit logs are created properly"
   Context: 'Verify audit logs are created properly'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 656: "Test error"
   Context: 'Test error'

   Line 163: "Error Handling"
   Context: 'Error Handling'

   Line 164: "Test error handling and edge cases"
   Context: 'Test error handling and edge cases'

   Line 163: "Error Handling"
   Context: 'Error Handling'

   Line 164: "Test error handling and edge cases"
   Context: 'Test error handling and edge cases'

   Line 688: "Basic connectivity test"
   Context: 'Basic connectivity test'

   Line 700: "Test execution failed"
   Context: 'Test execution failed'

   Line 204: "Unknown error"
   Context: 'Unknown error'

   Line 779: "Tests Complete"
   Context: 'Tests Complete'

   Line 811: "System Tests"
   Context: 'System Tests'

   Line 811: "System Tests"
   Context: 'System Tests'

   Line 219: "Dashboard data returned unsuccessful result"
   Context: throw new Error('Dashboard data returned unsuccessful result'

   Line 251: "System test returned no data"
   Context: throw new Error('System test returned no data'

üìÑ app/screens/super-admin-users.tsx:
   Line 66: "Access Denied"
   Context: {
    if (!isSuperAdmin(profile?.role)) {
      Alert.alert('Access Denied', 'Super admin privileges required');
      return;
    }

   Line 79: "Users fetch error:"
   Context: {
        console.error('Users fetch error:', usersError);
        Alert.alert('Error', 'Failed to load users');
        return;
      }

   Line 107: "Failed to fetch users:"
   Context: {
      console.error('Failed to fetch users:', error);
      Alert.alert('Error', 'Failed to load users');
    }

   Line 160: "superadmin"
   Context: {
    if (!user || user.role === 'superadmin' || user.role === 'super_admin') {
      Alert.alert('Error', 'Cannot impersonate super admin users');
      return;
    }

   Line 200: "Failed to log impersonation:"
   Context: {
                console.error('Failed to log impersonation:', logError);
              }

   Line 213: "Return to Admin"
   Context: {
                    text: 'Return to Admin',
                    onPress: () => {
                      // Log end of impersonation
                      assertSupabase()
                        .from('audit_logs')
                        .insert({
                          admin_user_id: profile?.id,
                          action: 'user_impersonation_end',
                          target_user_id: user.id,
                          details: {
                            duration: 'immediate_return',
                          }

   Line 232: "Impersonation failed:"
   Context: {
              console.error('Impersonation failed:', error);
              Alert.alert('Error', 'Failed to impersonate user');
            }

   Line 244: "Suspend User"
   Context: {
    Alert.alert(
      'Suspend User',
      `Are you sure you want to ${user.is_active ? 'suspend' : 'reactivate'}

   Line 258: "Administrative suspension by super admin"
   Context: {
target_user_id: (user as any).auth_user_id,
                    reason: 'Administrative suspension by super admin'
                  }

   Line 267: "Failed to suspend user"
   Context: {
                  throw new Error(suspendResult?.error || 'Failed to suspend user');
                }

   Line 273: "Administrative reactivation by super admin"
   Context: {
target_user_id: (user as any).auth_user_id,
                    reason: 'Administrative reactivation by super admin'
                  }

   Line 282: "Failed to reactivate user"
   Context: {
                  throw new Error(reactivateResult?.error || 'Failed to reactivate user');
                }

   Line 302: "Failed to update user status:"
   Context: {
              console.error('Failed to update user status:', error);
              Alert.alert('Error', 'Failed to update user status');
            }

   Line 312: "Update User Role"
   Context: {
    Alert.alert(
      'Update User Role',
      `Change ${user.email}

   Line 318: "Update Role"
   Context: {
          text: 'Update Role',
          onPress: async () => {
            try {
              // Update user role using RPC function
              const { data: updateResult, error: updateError }

   Line 324: "Administrative role change by super admin"
   Context: {
target_user_id: (user as any).auth_user_id,
                  new_role: newRole,
                  reason: 'Administrative role change by super admin'
                }

   Line 334: "Failed to update user role"
   Context: {
                throw new Error(updateResult?.error || 'Failed to update user role');
              }

   Line 351: "Failed to update user role:"
   Context: {
              console.error('Failed to update user role:', error);
              Alert.alert('Error', 'Failed to update user role');
            }

   Line 361: "Request User Deletion"
   Context: {
    Alert.alert(
      'Request User Deletion',
      `Request deletion of ${user.email}

   Line 367: "Request Deletion"
   Context: {
          text: 'Request Deletion',
          style: 'destructive',
          onPress: async () => {
            try {
              // Request user deletion using RPC function
              const { data: deleteResult, error: deleteError }

   Line 374: "Administrative deletion request by super admin"
   Context: {
target_user_id: (user as any).auth_user_id,
                  deletion_reason: 'Administrative deletion request by super admin'
                }

   Line 383: "Failed to request user deletion"
   Context: {
                throw new Error(deleteResult?.error || 'Failed to request user deletion');
              }

   Line 399: "Failed to request user deletion:"
   Context: {
              console.error('Failed to request user deletion:', error);
              Alert.alert('Error', 'Failed to request user deletion');
            }

   Line 409: "Reset Password"
   Context: {
    Alert.alert(
      'Reset Password',
      `Send password reset email to ${user.email}

   Line 415: "Send Reset Email"
   Context: {
          text: 'Send Reset Email',
          onPress: async () => {
            try {
              const { error }

   Line 445: "Failed to log password reset:"
   Context: {
                console.error('Failed to log password reset:', logError);
              }

   Line 451: "Failed to send password reset:"
   Context: {
              console.error('Failed to send password reset:', error);
              Alert.alert('Error', 'Failed to send password reset email');
            }

   Line 494: "User Management"
   Context: {{ title: 'User Management', headerShown: false }

   Line 494: "User Management"
   Context: {{ title: 'User Management', headerShown: false }

   Line 550: "all"
   Context: {role === 'all' ? 'All Roles' : role.charAt(0).toUpperCase() + role.slice(1)}

   Line 564: "all"
   Context: {status === 'all' ? 'All Status' : status.charAt(0).toUpperCase() + status.slice(1)}

   Line 748: "Suspend User"
   Context: {selectedUser.is_active ? 'Suspend User' : 'Reactivate User'}

   Line 754: "Update User Role"
   Context: {() => {
                    Alert.alert(
                      'Update User Role',
                      'Select new role for this user:',
                      [
                        { text: 'Cancel', style: 'cancel' }

   Line 536: "Search users..."
   Context: placeholder="Search users..."

   Line 68: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 80: "Users fetch error:"
   Context: console.error('Users fetch error:'

   Line 108: "Failed to fetch users:"
   Context: console.error('Failed to fetch users:'

   Line 166: "Impersonate User"
   Context: Alert.alert(
      'Impersonate User'

   Line 201: "Failed to log impersonation:"
   Context: console.error('Failed to log impersonation:'

   Line 209: "Impersonation Started"
   Context: Alert.alert(
                'Impersonation Started'

   Line 233: "Impersonation failed:"
   Context: console.error('Impersonation failed:'

   Line 245: "Suspend User"
   Context: Alert.alert(
      'Suspend User'

   Line 303: "Failed to update user status:"
   Context: console.error('Failed to update user status:'

   Line 313: "Update User Role"
   Context: Alert.alert(
      'Update User Role'

   Line 352: "Failed to update user role:"
   Context: console.error('Failed to update user role:'

   Line 362: "Request User Deletion"
   Context: Alert.alert(
      'Request User Deletion'

   Line 400: "Failed to request user deletion:"
   Context: console.error('Failed to request user deletion:'

   Line 410: "Reset Password"
   Context: Alert.alert(
      'Reset Password'

   Line 446: "Failed to log password reset:"
   Context: console.error('Failed to log password reset:'

   Line 452: "Failed to send password reset:"
   Context: console.error('Failed to send password reset:'

   Line 755: "Update User Role"
   Context: Alert.alert(
                      'Update User Role'

   Line 68: "Access Denied"
   Context: 'Access Denied'

   Line 68: "Super admin privileges required"
   Context: 'Super admin privileges required'

   Line 81: "Failed to load users"
   Context: 'Failed to load users'

   Line 81: "Failed to load users"
   Context: 'Failed to load users'

   Line 162: "Cannot impersonate super admin users"
   Context: 'Cannot impersonate super admin users'

   Line 167: "Impersonate User"
   Context: 'Impersonate User'

   Line 210: "Impersonation Started"
   Context: 'Impersonation Started'

   Line 214: "Return to Admin"
   Context: 'Return to Admin'

   Line 234: "Failed to impersonate user"
   Context: 'Failed to impersonate user'

   Line 246: "Suspend User"
   Context: 'Suspend User'

   Line 260: "Administrative suspension by super admin"
   Context: 'Administrative suspension by super admin'

   Line 268: "Failed to suspend user"
   Context: 'Failed to suspend user'

   Line 275: "Administrative reactivation by super admin"
   Context: 'Administrative reactivation by super admin'

   Line 283: "Failed to reactivate user"
   Context: 'Failed to reactivate user'

   Line 304: "Failed to update user status"
   Context: 'Failed to update user status'

   Line 314: "Update User Role"
   Context: 'Update User Role'

   Line 319: "Update Role"
   Context: 'Update Role'

   Line 327: "Administrative role change by super admin"
   Context: 'Administrative role change by super admin'

   Line 335: "Failed to update user role"
   Context: 'Failed to update user role'

   Line 335: "Failed to update user role"
   Context: 'Failed to update user role'

   Line 363: "Request User Deletion"
   Context: 'Request User Deletion'

   Line 368: "Request Deletion"
   Context: 'Request Deletion'

   Line 376: "Administrative deletion request by super admin"
   Context: 'Administrative deletion request by super admin'

   Line 384: "Failed to request user deletion"
   Context: 'Failed to request user deletion'

   Line 394: "User deletion request submitted successfully"
   Context: 'User deletion request submitted successfully'

   Line 384: "Failed to request user deletion"
   Context: 'Failed to request user deletion'

   Line 411: "Reset Password"
   Context: 'Reset Password'

   Line 416: "Send Reset Email"
   Context: 'Send Reset Email'

   Line 449: "Password reset email sent successfully"
   Context: 'Password reset email sent successfully'

   Line 453: "Failed to send password reset email"
   Context: 'Failed to send password reset email'

   Line 494: "User Management"
   Context: 'User Management'

   Line 494: "User Management"
   Context: 'User Management'

   Line 550: "All Roles"
   Context: 'All Roles'

   Line 564: "All Status"
   Context: 'All Status'

   Line 246: "Suspend User"
   Context: 'Suspend User'

   Line 314: "Update User Role"
   Context: 'Update User Role'

üìÑ app/screens/super-admin-whatsapp.tsx:
   Line 83: "Access Denied"
   Context: {
    if (!isSuperAdmin(profile?.role)) {
      Alert.alert('Access Denied', 'Super admin privileges required');
      return;
    }

   Line 169: "Failed to fetch WhatsApp data:"
   Context: {
      console.error('Failed to fetch WhatsApp data:', error);
      Alert.alert('Error', 'Failed to load WhatsApp data');
    }

   Line 187: "WhatsApp Business Setup"
   Context: {
    Alert.alert(
      'WhatsApp Business Setup',
      'To integrate WhatsApp Business API, you need to:\n\n1. Create a WhatsApp Business Account\n2. Set up a Facebook App\n3. Configure webhooks\n4. Get verification tokens\n\nWould you like to open the Facebook Developer portal?',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 193: "Open Portal"
   Context: {
          text: 'Open Portal',
          onPress: () => {
            Linking.openURL('https://developers.facebook.com/');
            track('superadmin_whatsapp_business_setup_opened');
          }

   Line 224: "Send Test Message"
   Context: {
    Alert.alert(
      'Send Test Message',
      `Send a test message to ${connection.school_name}

   Line 247: "WhatsApp Hub"
   Context: {{ title: 'WhatsApp Hub', headerShown: false }

   Line 247: "WhatsApp Hub"
   Context: {{ title: 'WhatsApp Hub', headerShown: false }

   Line 495: "Your webhook verify token"
   Context: placeholder="Your webhook verify token"

   Line 507: "Your Facebook App ID"
   Context: placeholder="Your Facebook App ID"

   Line 518: "Your Facebook App Secret"
   Context: placeholder="Your Facebook App Secret"

   Line 85: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 170: "Failed to fetch WhatsApp data:"
   Context: console.error('Failed to fetch WhatsApp data:'

   Line 188: "WhatsApp Business Setup"
   Context: Alert.alert(
      'WhatsApp Business Setup'

   Line 225: "Send Test Message"
   Context: Alert.alert(
      'Send Test Message'

   Line 85: "Access Denied"
   Context: 'Access Denied'

   Line 85: "Super admin privileges required"
   Context: 'Super admin privileges required'

   Line 97: "Bright Minds Preschool"
   Context: 'Bright Minds Preschool'

   Line 110: "Little Learners Academy"
   Context: 'Little Learners Academy'

   Line 171: "Failed to load WhatsApp data"
   Context: 'Failed to load WhatsApp data'

   Line 189: "WhatsApp Business Setup"
   Context: 'WhatsApp Business Setup'

   Line 194: "Open Portal"
   Context: 'Open Portal'

   Line 226: "Send Test Message"
   Context: 'Send Test Message'

   Line 247: "WhatsApp Hub"
   Context: 'WhatsApp Hub'

   Line 247: "WhatsApp Hub"
   Context: 'WhatsApp Hub'

   Line 495: "Your webhook verify token"
   Context: "Your webhook verify token"

   Line 507: "Your Facebook App ID"
   Context: "Your Facebook App ID"

   Line 518: "Your Facebook App Secret"
   Context: "Your Facebook App Secret"

üìÑ app/screens/super-admin/school-onboarding-wizard.tsx:
   Line 55: "infants"
   Context: {
  preschool: [
    { id: 'infants', label: 'Infants (6m-12m)' }

   Line 58: "toddlers"
   Context: { id: 'toddlers', label: 'Toddlers (1-2 years)' }

   Line 59: "pre_k"
   Context: { id: 'pre_k', label: 'Pre-K (3-4 years)' }

   Line 60: "reception"
   Context: { id: 'reception', label: 'Reception (4-5 years)' }

   Line 63: "foundation"
   Context: { id: 'foundation', label: 'Foundation Phase (Grade R-3)' }

   Line 64: "intermediate"
   Context: { id: 'intermediate', label: 'Intermediate Phase (Grade 4-6)' }

   Line 65: "senior"
   Context: { id: 'senior', label: 'Senior Phase (Grade 7-9)' }

   Line 66: "fet"
   Context: { id: 'fet', label: 'FET Phase (Grade 10-12)' }

   Line 57: "infants"
   Context: { id: 'infants', label: 'Infants (6m-12m)' }

   Line 58: "toddlers"
   Context: { id: 'toddlers', label: 'Toddlers (1-2 years)' }

   Line 59: "pre_k"
   Context: { id: 'pre_k', label: 'Pre-K (3-4 years)' }

   Line 60: "reception"
   Context: { id: 'reception', label: 'Reception (4-5 years)' }

   Line 63: "foundation"
   Context: { id: 'foundation', label: 'Foundation Phase (Grade R-3)' }

   Line 64: "intermediate"
   Context: { id: 'intermediate', label: 'Intermediate Phase (Grade 4-6)' }

   Line 65: "senior"
   Context: { id: 'senior', label: 'Senior Phase (Grade 7-9)' }

   Line 66: "fet"
   Context: { id: 'fet', label: 'FET Phase (Grade 10-12)' }

   Line 117: "super_admin"
   Context: {
    if (profile && profile.role !== 'super_admin') {
      Alert.alert(
        'Access Denied',
        'This screen is only accessible to superadmins.',
        [{ text: 'OK', onPress: () => router.back() }

   Line 155: "Failed to load subscription plans:"
   Context: {
      console.error('Failed to load subscription plans:', error);
    }

   Line 169: "School name is required"
   Context: {
      if (!schoolData.name.trim()) {
        newErrors.schoolName = 'School name is required';
      }

   Line 173: "At least one grade level must be selected"
   Context: {
        newErrors.gradeLevels = 'At least one grade level must be selected';
      }

   Line 176: "Valid contact email is required"
   Context: {
        newErrors.contactEmail = 'Valid contact email is required';
      }

   Line 181: "Principal name is required"
   Context: {
      if (!principalData.name.trim()) {
        newErrors.principalName = 'Principal name is required';
      }

   Line 185: "Valid principal email is required"
   Context: {
        newErrors.principalEmail = 'Valid principal email is required';
      }

   Line 285: "The subscription is active."
   Context: {subscriptionData.planId ? 'The subscription is active.' : ''}

   Line 296: "Create Another"
   Context: {
            text: 'Create Another',
            onPress: () => {
              // Reset form
              setSchoolData({
                name: '',
                schoolType: 'preschool',
                gradeLevels: [],
                contactEmail: '',
                contactPhone: '',
                physicalAddress: '',
                notes: ''
              }

   Line 317: "School creation failed:"
   Context: {
      console.error('School creation failed:', error);
      
      Alert.alert(
        'School Creation Failed',
        error.message || 'Failed to create school. Please try again.',
        [{ text: 'OK' }

   Line 355: "School Info"
   Context: {step === 1 && 'School Info'}

   Line 402: "preschool"
   Context: {type === 'preschool' && 'Preschool'}

   Line 403: "k12_school"
   Context: {type === 'k12_school' && 'K-12 School'}

   Line 404: "hybrid"
   Context: {type === 'hybrid' && 'Hybrid'}

   Line 634: "preschool"
   Context: {schoolData.schoolType === 'preschool' && 'Preschool'}

   Line 635: "k12_school"
   Context: {schoolData.schoolType === 'k12_school' && 'K-12 School'}

   Line 636: "hybrid"
   Context: {schoolData.schoolType === 'hybrid' && 'Hybrid Institution'}

   Line 668: "Selected Plan"
   Context: {filteredPlans.find(p => p.id === subscriptionData.planId)?.name || 'Selected Plan'}

   Line 678: "Will be activated"
   Context: {subscriptionData.autoActivate ? 'Will be activated' : 'Pending activation'}

   Line 696: "Create School"
   Context: {{
        title: 'Create School',
        headerStyle: { backgroundColor: '#0b1220' }

   Line 733: "Create School"
   Context: {currentStep === totalSteps ? 'Create School' : 'Continue'}

   Line 466: "Full physical address"
   Context: placeholder="Full physical address"

   Line 480: "Internal notes about this school (not visible to school staff)"
   Context: placeholder="Internal notes about this school (not visible to school staff)"

   Line 501: "Dr. Jane Smith"
   Context: placeholder="Dr. Jane Smith"

   Line 119: "Access Denied"
   Context: Alert.alert(
        'Access Denied'

   Line 156: "Failed to load subscription plans:"
   Context: console.error('Failed to load subscription plans:'

   Line 283: "School Created Successfully!"
   Context: Alert.alert(
        'School Created Successfully!'

   Line 318: "School creation failed:"
   Context: console.error('School creation failed:'

   Line 320: "School Creation Failed"
   Context: Alert.alert(
        'School Creation Failed'

   Line 120: "Access Denied"
   Context: 'Access Denied'

   Line 171: "School name is required"
   Context: 'School name is required'

   Line 174: "At least one grade level must be selected"
   Context: 'At least one grade level must be selected'

   Line 177: "Valid contact email is required"
   Context: 'Valid contact email is required'

   Line 183: "Principal name is required"
   Context: 'Principal name is required'

   Line 186: "Valid principal email is required"
   Context: 'Valid principal email is required'

   Line 297: "Create Another"
   Context: 'Create Another'

   Line 321: "School Creation Failed"
   Context: 'School Creation Failed'

   Line 355: "School Info"
   Context: 'School Info'

   Line 466: "Full physical address"
   Context: "Full physical address"

   Line 636: "Hybrid Institution"
   Context: 'Hybrid Institution'

   Line 668: "Selected Plan"
   Context: 'Selected Plan'

   Line 678: "Will be activated"
   Context: 'Will be activated'

   Line 678: "Pending activation"
   Context: 'Pending activation'

   Line 697: "Create School"
   Context: 'Create School'

   Line 697: "Create School"
   Context: 'Create School'

üìÑ app/screens/teacher-invite-accept.tsx:
   Line 19: "Sign in required"
   Context: {
    if (!user?.id) {
      Alert.alert('Sign in required', 'Please sign in first, then accept the invite.');
      return;
    }

   Line 24: "Missing info"
   Context: {
      Alert.alert('Missing info', 'Enter the invite token and email.');
      return;
    }

   Line 43: "Accept Teacher Invite"
   Context: {{ title: 'Accept Teacher Invite' }

   Line 50: "Submitting‚Ä¶"
   Context: {submitting ? 'Submitting‚Ä¶' : 'Accept Invite'}

   Line 46: "Paste the invite token"
   Context: placeholder="Paste the invite token"

   Line 21: "Sign in required"
   Context: Alert.alert('Sign in required'

   Line 25: "Missing info"
   Context: Alert.alert('Missing info'

   Line 32: "Invite accepted"
   Context: Alert.alert('Invite accepted'

   Line 21: "Sign in required"
   Context: 'Sign in required'

   Line 25: "Missing info"
   Context: 'Missing info'

   Line 32: "Invite accepted"
   Context: 'Invite accepted'

   Line 35: "Failed to accept invite"
   Context: 'Failed to accept invite'

   Line 43: "Accept Teacher Invite"
   Context: 'Accept Teacher Invite'

   Line 46: "Paste the invite token"
   Context: "Paste the invite token"

   Line 50: "Accept Invite"
   Context: 'Accept Invite'

üìÑ app/screens/teacher-management.tsx:
   Line 198: "Error fetching teachers:"
   Context: {
        console.error('Error fetching teachers:', teachersError);
        Alert.alert('Error', 'Failed to load teachers. Please try again.');
        return;
      }

   Line 250: "[fetchTeachers] Using email as fallback for name:"
   Context: {
          console.warn('[fetchTeachers] Using email as fallback for name:', dbTeacher.email);
          fullName = dbTeacher.email.split('@')[0] || 'Unknown Teacher';
        }

   Line 388: "Emergency contact not available"
   Context: {
            name: 'Emergency contact not available',
            phone: 'Not available',
            relationship: 'Unknown'
          }

   Line 393: "Level 3"
   Context: {
            basic: 25000,
            allowances: 2000,
            deductions: 4000,
            net: 23000,
            payScale: 'Level 3'
          }

   Line 400: "2024-08-01"
   Context: {
            rating: 4.0,
            lastReviewDate: '2024-08-01',
            strengths: ['Dedicated teacher'],
            improvementAreas: ['Professional development'],
            goals: ['Continuous improvement']
          }

   Line 414: "General duties"
   Context: {
            teachingHours: 25,
            adminDuties: ['General duties'],
            extraCurricular: ['TBD']
          }

   Line 430: "Failed to fetch teachers:"
   Context: {
      console.error('Failed to fetch teachers:', _error);
      Alert.alert('Error', 'Failed to load teacher data. Please check your connection.');
    }

   Line 494: "Error loading available teachers:"
   Context: {
        console.error('Error loading available teachers:', error);
        setAvailableTeachers([]);
      }

   Line 508: "Failed to load available teachers:"
   Context: {
      console.error('Failed to load available teachers:', _e);
      setAvailableTeachers([]);
    }

   Line 528: "Seat Limit Reached"
   Context: {
    if (shouldDisableAssignment) {
      Alert.alert(
        'Seat Limit Reached',
        `Cannot assign more teacher seats. You have reached the limit for your current plan.${seatUsageDisplay ? `\n\nCurrent usage: ${seatUsageDisplay.displayText}

   Line 535: "Upgrade Plan"
   Context: { text: 'Upgrade Plan', onPress: () => {
            // TODO: Navigate to subscription upgrade screen
            Alert.alert('Upgrade Plan', 'Plan upgrade feature coming soon!');
          }

   Line 549: "Assign Seat"
   Context: {
          text: 'Assign Seat',
          onPress: async () => {
            try {
              await assignSeat({ teacherUserId }

   Line 556: "Seat assignment failed:"
   Context: {
              console.error('Seat assignment failed:', _error);
            }

   Line 565: "Revoke Teacher Seat"
   Context: {
    Alert.alert(
      'Revoke Teacher Seat',
      `Are you sure you want to revoke the teacher seat from ${teacherName}

   Line 571: "Revoke Seat"
   Context: {
          text: 'Revoke Seat',
          style: 'destructive',
          onPress: async () => {
            try {
              console.log('[TeacherManagement] Revoking seat from user:', teacherUserId);
              await revokeSeat({ teacherUserId }

   Line 582: "[TeacherManagement] Seat revocation failed:"
   Context: {
              console.error('[TeacherManagement] Seat revocation failed:', _error);
              Alert.alert('Revocation Failed', _error instanceof Error ? _error.message : 'Unknown error occurred');
            }

   Line 593: "üë®‚Äçüè´ Add New Teacher"
   Context: {
    Alert.alert(
      'üë®‚Äçüè´ Add New Teacher',
      'Choose how you\'d like to add a teacher to your school:',
      [
        {
          text: 'Post Job Opening',
          onPress: () => {
            Alert.alert(
              'üìù Job Posting Created',
              'Your job posting for a new teacher position has been created and will be published to:\n\n‚Ä¢ School website\n‚Ä¢ Education job boards\n‚Ä¢ Social media channels\n\nApplications will appear in the Hiring tab.',
              [{ text: 'Great!', style: 'default' }

   Line 608: "Invite by Email"
   Context: {
          text: 'Invite by Email',
          onPress: () => setShowInviteModal(true)
        }

   Line 612: "Add Directly"
   Context: {
          text: 'Add Directly',
          onPress: () => {
            Alert.alert(
              '‚ûï Direct Teacher Addition',
              'Teacher added successfully!\n\nNext steps:\n‚Ä¢ Send welcome email with login details\n‚Ä¢ Schedule orientation session\n‚Ä¢ Prepare classroom assignment\n‚Ä¢ Update staff directory',
              [{ text: 'Done', style: 'default' }

   Line 640: "No teacher selected"
   Context: {
    try {
      if (!selectedTeacher?.id) { Alert.alert('No teacher selected'); return; }

   Line 644: "No school linked"
   Context: { Alert.alert('No school linked', 'Cannot attach documents without a school context.'); return; }

   Line 663: "Upload failed"
   Context: {
        Alert.alert('Upload failed', uploaded.error || 'Unknown error');
        setIsUploadingDoc(false);
        return;
      }

   Line 678: "Attach Document"
   Context: {
    Alert.alert(
      'Attach Document',
      'Select which document to attach',
      [
        { text: 'CV', onPress: () => pickAndUploadTeacherDoc('cv') }

   Line 685: "ID Copy"
   Context: { text: 'ID Copy', onPress: () => pickAndUploadTeacherDoc('id_copy') }

   Line 707: "Failed to load teacher documents:"
   Context: {
        console.warn('Failed to load teacher documents:', _e);
        setTeacherDocsMap({ /* TODO: Implement */ }

   Line 741: "Generate Payroll"
   Context: {
    Alert.alert(
      'Generate Payroll',
      'Payroll for current month will be generated and sent to accounting.',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 752: "Schedule Performance Review"
   Context: {
    const teacher = teachers.find(t => t.id === teacherId);
    if (!teacher) return;

    Alert.alert(
      'Schedule Performance Review',
      `Schedule review for ${teacher.firstName}

   Line 883: "Has teacher seat"
   Context: {teacherHasSeat ? 'Has teacher seat' : 'No teacher seat'}

   Line 1139: "Unknown city"
   Context: {(item.home_city || 'Unknown city') + (item.home_postal_code ? ` ‚Ä¢ ${item.home_postal_code}

   Line 1143: "Missing email"
   Context: {async () => {
                        try {
                          const schoolId = getPreschoolId();
                          if (!schoolId) return;
                          if (!item.email) { Alert.alert('Missing email', 'This teacher profile has no email.'); return; }

   Line 1151: "Invite error:"
   Context: {
                          console.error('Invite error:', _e);
                          Alert.alert('Error', 'Failed to send invite.');
                        }

   Line 1359: "Message (Has Seat)"
   Context: {selectedTeacherHasSeat ? 'Message (Has Seat)' : 'Message (No Seat)'}

   Line 1396: "Uploading..."
   Context: {isUploadingDoc ? 'Uploading...' : 'Attach'}

   Line 1403: "qualifications"
   Context: { key: 'qualifications', label: 'Qualifications', complete: !!selectedTeacher.documents.qualifications }

   Line 1404: "id_copy"
   Context: { key: 'id_copy', label: 'ID Copy', complete: !!selectedTeacher.documents.id_copy }

   Line 1405: "contracts"
   Context: { key: 'contracts', label: 'Contracts', complete: !!selectedTeacher.documents.contracts }

   Line 1411: "No File"
   Context: {async () => {
                      const existing = teacherDocsMap[doc.key];
                      if (!existing) {
                        Alert.alert('No File', 'No file is currently attached for this document.');
                        return;
                      }

   Line 993: "Teacher Management"
   Context: title="Teacher Management"

   Line 1109: "Search by name, email, city or postal code..."
   Context: placeholder="Search by name, email, city or postal code..."

   Line 199: "Error fetching teachers:"
   Context: console.error('Error fetching teachers:'

   Line 431: "Failed to fetch teachers:"
   Context: console.error('Failed to fetch teachers:'

   Line 495: "Error loading available teachers:"
   Context: console.error('Error loading available teachers:'

   Line 509: "Failed to load available teachers:"
   Context: console.error('Failed to load available teachers:'

   Line 530: "Seat Limit Reached"
   Context: Alert.alert(
        'Seat Limit Reached'

   Line 537: "Upgrade Plan"
   Context: Alert.alert('Upgrade Plan'

   Line 544: "Assign Teacher Seat"
   Context: Alert.alert(
      'Assign Teacher Seat'

   Line 557: "Seat assignment failed:"
   Context: console.error('Seat assignment failed:'

   Line 566: "Revoke Teacher Seat"
   Context: Alert.alert(
      'Revoke Teacher Seat'

   Line 584: "Revocation Failed"
   Context: Alert.alert('Revocation Failed'

   Line 642: "No teacher selected"
   Context: Alert.alert('No teacher selected'

   Line 644: "No school linked"
   Context: Alert.alert('No school linked'

   Line 664: "Upload failed"
   Context: Alert.alert('Upload failed'

   Line 679: "Attach Document"
   Context: Alert.alert(
      'Attach Document'

   Line 708: "Failed to load teacher documents:"
   Context: console.warn('Failed to load teacher documents:'

   Line 742: "Generate Payroll"
   Context: Alert.alert(
      'Generate Payroll'

   Line 756: "Schedule Performance Review"
   Context: Alert.alert(
      'Schedule Performance Review'

   Line 978: "Invite created"
   Context: Alert.alert('Invite created'

   Line 1147: "Missing email"
   Context: Alert.alert('Missing email'

   Line 1150: "Invite sent"
   Context: Alert.alert('Invite sent'

   Line 1152: "Invite error:"
   Context: console.error('Invite error:'

   Line 1414: "No File"
   Context: Alert.alert('No File'

   Line 252: "Unknown Teacher"
   Context: 'Unknown Teacher'

   Line 300: "ID Copy"
   Context: 'ID Copy'

   Line 374: "No email"
   Context: 'No email'

   Line 375: "No phone"
   Context: 'No phone'

   Line 376: "Address not available"
   Context: 'Address not available'

   Line 377: "ID not available"
   Context: 'ID not available'

   Line 382: "General Education"
   Context: 'General Education'

   Line 383: "Teaching Qualification"
   Context: 'Teaching Qualification'

   Line 389: "Emergency contact not available"
   Context: 'Emergency contact not available'

   Line 390: "Not available"
   Context: 'Not available'

   Line 403: "Dedicated teacher"
   Context: 'Dedicated teacher'

   Line 404: "Professional development"
   Context: 'Professional development'

   Line 405: "Continuous improvement"
   Context: 'Continuous improvement'

   Line 416: "General duties"
   Context: 'General duties'

   Line 531: "Seat Limit Reached"
   Context: 'Seat Limit Reached'

   Line 535: "Upgrade Plan"
   Context: 'Upgrade Plan'

   Line 535: "Upgrade Plan"
   Context: 'Upgrade Plan'

   Line 545: "Assign Teacher Seat"
   Context: 'Assign Teacher Seat'

   Line 550: "Assign Seat"
   Context: 'Assign Seat'

   Line 567: "Revoke Teacher Seat"
   Context: 'Revoke Teacher Seat'

   Line 572: "Revoke Seat"
   Context: 'Revoke Seat'

   Line 584: "Revocation Failed"
   Context: 'Revocation Failed'

   Line 584: "Unknown error occurred"
   Context: 'Unknown error occurred'

   Line 599: "Post Job Opening"
   Context: 'Post Job Opening'

   Line 609: "Invite by Email"
   Context: 'Invite by Email'

   Line 613: "Add Directly"
   Context: 'Add Directly'

   Line 642: "No teacher selected"
   Context: 'No teacher selected'

   Line 644: "No school linked"
   Context: 'No school linked'

   Line 664: "Upload failed"
   Context: 'Upload failed'

   Line 664: "Unknown error"
   Context: 'Unknown error'

   Line 672: "Failed to attach document"
   Context: 'Failed to attach document'

   Line 680: "Attach Document"
   Context: 'Attach Document'

   Line 681: "Select which document to attach"
   Context: 'Select which document to attach'

   Line 300: "ID Copy"
   Context: 'ID Copy'

   Line 743: "Generate Payroll"
   Context: 'Generate Payroll'

   Line 757: "Schedule Performance Review"
   Context: 'Schedule Performance Review'

   Line 871: "No classes assigned"
   Context: 'No classes assigned'

   Line 883: "Has teacher seat"
   Context: 'Has teacher seat'

   Line 883: "No teacher seat"
   Context: 'No teacher seat'

   Line 972: "No school associated"
   Context: 'No school associated'

   Line 978: "Invite created"
   Context: 'Invite created'

   Line 980: "Failed to create invite"
   Context: 'Failed to create invite'

   Line 993: "Teacher Management"
   Context: "Teacher Management"

   Line 1139: "Unknown city"
   Context: 'Unknown city'

   Line 1147: "Missing email"
   Context: 'Missing email'

   Line 1150: "Invite sent"
   Context: 'Invite sent'

   Line 1192: "Failed to revoke invite"
   Context: 'Failed to revoke invite'

   Line 1356: "Teacher communications coming soon"
   Context: 'Teacher communications coming soon'

   Line 300: "ID Copy"
   Context: 'ID Copy'

   Line 1414: "No File"
   Context: 'No File'

üìÑ app/screens/teacher-messages.tsx:
   Line 58: "Select class"
   Context: {
    if (!classId) { Alert.alert('Select class', 'Please select a class.'); return }

   Line 60: "Enter message"
   Context: { Alert.alert('Enter message', 'Please write a message.'); return }

   Line 61: "No access"
   Context: { Alert.alert('No access', 'Your seat or plan does not allow messaging.'); return }

   Line 107: "Your teacher seat is not active. Please contact your administrator."
   Context: {!hasActiveSeat 
                  ? 'Your teacher seat is not active. Please contact your administrator.' 
                  : 'Your account does not have messaging permissions. Please contact your administrator.'}

   Line 99: "Message Parents"
   Context: title="Message Parents"

   Line 100: "Send announcements to parent groups"
   Context: subtitle="Send announcements to parent groups"

   Line 143: "Write your message to parents..."
   Context: placeholder="Write your message to parents..."

   Line 59: "Select class"
   Context: Alert.alert('Select class'

   Line 60: "Enter message"
   Context: Alert.alert('Enter message'

   Line 61: "No access"
   Context: Alert.alert('No access'

   Line 85: "Message sent"
   Context: Alert.alert('Message sent'

   Line 59: "Select class"
   Context: 'Select class'

   Line 60: "Enter message"
   Context: 'Enter message'

   Line 61: "No access"
   Context: 'No access'

   Line 85: "Message sent"
   Context: 'Message sent'

   Line 99: "Message Parents"
   Context: "Message Parents"

   Line 100: "Send announcements to parent groups"
   Context: "Send announcements to parent groups"

üìÑ app/screens/teacher-profile-completion.tsx:
   Line 59: "Missing info"
   Context: {
    if (!firstName.trim() || !lastName.trim()) {
      Alert.alert('Missing info', 'Please provide your first and last name');
      return;
    }

   Line 161: "Teacher profile save error:"
   Context: {
      console.error('Teacher profile save error:', e);
      Alert.alert('Failed to save', e?.message || 'Please try again');
    }

   Line 171: "Complete Teacher Profile"
   Context: {{ title: 'Complete Teacher Profile', headerStyle: { backgroundColor: theme.background }

   Line 195: "Male / Female / Other"
   Context: placeholder="Male / Female / Other"

   Line 246: "Tell us a bit about your teaching journey"
   Context: placeholder="Tell us a bit about your teaching journey"

   Line 61: "Missing info"
   Context: Alert.alert('Missing info'

   Line 162: "Teacher profile save error:"
   Context: console.error('Teacher profile save error:'

   Line 163: "Failed to save"
   Context: Alert.alert('Failed to save'

   Line 61: "Missing info"
   Context: 'Missing info'

   Line 61: "Please provide your first and last name"
   Context: 'Please provide your first and last name'

   Line 70: "No authenticated user"
   Context: 'No authenticated user'

   Line 163: "Failed to save"
   Context: 'Failed to save'

   Line 163: "Please try again"
   Context: 'Please try again'

   Line 171: "Complete Teacher Profile"
   Context: 'Complete Teacher Profile'

   Line 246: "Tell us a bit about your teaching journey"
   Context: "Tell us a bit about your teaching journey"

   Line 70: "No authenticated user"
   Context: throw new Error('No authenticated user'

üìÑ app/screens/teacher-registration.tsx:
   Line 43: "Registration error:"
   Context: {
      console.error('Registration error:', error);
      handleRegistrationError(error.message || 'Registration failed');
    }

   Line 49: "Registration error:"
   Context: {
    console.error('Registration error:', error);
    // Error handling is done by the form component
  }

   Line 78: "Teacher Registration"
   Context: {{
          title: 'Teacher Registration',
          headerShown: true,
          headerStyle: {
            backgroundColor: theme.surface,
          }

   Line 44: "Registration error:"
   Context: console.error('Registration error:'

   Line 44: "Registration error:"
   Context: console.error('Registration error:'

   Line 45: "Registration failed"
   Context: 'Registration failed'

   Line 79: "Teacher Registration"
   Context: 'Teacher Registration'

üìÑ app/screens/teacher-reports.tsx:
   Line 53: "Your teacher seat is not active. Please contact your administrator."
   Context: {!hasActiveSeat 
                  ? 'Your teacher seat is not active. Please contact your administrator.' 
                  : 'Your account does not have analytics permissions. Please contact your administrator.'}

   Line 43: "Teacher Reports"
   Context: title="Teacher Reports"

   Line 44: "Analytics and class overview"
   Context: subtitle="Analytics and class overview"

   Line 68: "Pending grading"
   Context: title="Pending grading"

   Line 19: "Teacher Reports Access Check:"
   Context: console.log('Teacher Reports Access Check:'

   Line 43: "Teacher Reports"
   Context: "Teacher Reports"

   Line 44: "Analytics and class overview"
   Context: "Analytics and class overview"

   Line 68: "Pending grading"
   Context: "Pending grading"

üìÑ app/screens/teachers-detail.tsx:
   Line 128: "Failed to load teachers:"
   Context: {
      console.error('Failed to load teachers:', error);
      Alert.alert('Error', 'Failed to load teachers directory');
    }

   Line 219: "Access Denied"
   Context: {
    if (!canManageTeacher()) {
      Alert.alert('Access Denied', 'Only principals can edit teacher information.');
      return;
    }

   Line 229: "Access Denied"
   Context: {
    if (!canManageTeacher()) {
      Alert.alert('Access Denied', 'Only principals can delete teachers.');
      return;
    }

   Line 252: "Access Denied"
   Context: {
    if (!canManageTeacher()) {
      Alert.alert('Access Denied', 'Only principals can change teacher status.');
      return;
    }

   Line 507: "Search teachers..."
   Context: placeholder="Search teachers..."

   Line 129: "Failed to load teachers:"
   Context: console.error('Failed to load teachers:'

   Line 221: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 221: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 235: "Delete Teacher"
   Context: Alert.alert(
      'Delete Teacher'

   Line 221: "Access Denied"
   Context: Alert.alert('Access Denied'

   Line 130: "Failed to load teachers directory"
   Context: 'Failed to load teachers directory'

   Line 221: "Access Denied"
   Context: 'Access Denied'

   Line 221: "Access Denied"
   Context: 'Access Denied'

   Line 236: "Delete Teacher"
   Context: 'Delete Teacher'

   Line 221: "Access Denied"
   Context: 'Access Denied'

   Line 391: "Natural Sciences"
   Context: 'Natural Sciences'

   Line 391: "Life Skills"
   Context: 'Life Skills'

   Line 391: "Physical Education"
   Context: 'Physical Education'

üìÑ app/screens/theme-demo.tsx:
   Line 38: "Theme & Language Demo"
   Context: {t("Theme & Language Demo")}

   Line 47: "Refreshing theme data..."
   Context: title="Refreshing theme data..."

   Line 144: "Surface Variant"
   Context: label="Surface Variant"

   Line 168: "Demo Modal"
   Context: title="Demo Modal"

   Line 144: "Surface Variant"
   Context: "Surface Variant"

   Line 168: "Demo Modal"
   Context: "Demo Modal"

üìÑ app/screens/verify-your-email.tsx:
   Line 14: "Email required"
   Context: {
    if (!email) {
      Alert.alert('Email required', 'We need your email address to resend the confirmation.');
      return;
    }

   Line 32: "Failed to resend"
   Context: {
      Alert.alert('Failed to resend', e?.message || 'Please try again later.');
    }

   Line 42: "Verify your email"
   Context: {{
          title: 'Verify your email',
          headerStyle: { backgroundColor: theme.surface }

   Line 66: "Resend again"
   Context: {sent ? 'Resend again' : 'Resend confirmation'}

   Line 16: "Email required"
   Context: Alert.alert('Email required'

   Line 31: "Email sent"
   Context: Alert.alert('Email sent'

   Line 33: "Failed to resend"
   Context: Alert.alert('Failed to resend'

   Line 16: "Email required"
   Context: 'Email required'

   Line 31: "Email sent"
   Context: 'Email sent'

   Line 33: "Failed to resend"
   Context: 'Failed to resend'

   Line 43: "Verify your email"
   Context: 'Verify your email'

   Line 66: "Resend again"
   Context: 'Resend again'

   Line 66: "Resend confirmation"
   Context: 'Resend confirmation'

üìÑ app/screens/whatsapp-setup.tsx:
   Line 62: "Invalid Phone Number"
   Context: {
    if (!validatePhoneNumber(formData.whatsapp_number)) {
      Alert.alert('Invalid Phone Number', 'Please enter a valid WhatsApp number including country code');
      return;
    }

   Line 97: "WhatsApp verification error:"
   Context: {
      console.error('WhatsApp verification error:', error);
      Alert.alert('Error', 'Failed to send verification code. Please try again.');
    }

   Line 105: "Invalid Code"
   Context: {
    if (!formData.verification_code || formData.verification_code.length !== 6) {
      Alert.alert('Invalid Code', 'Please enter the 6-digit verification code');
      return;
    }

   Line 163: "WhatsApp verification error:"
   Context: {
      console.error('WhatsApp verification error:', error);
      Alert.alert('Verification Failed', 'Invalid code. Please try again.');
    }

   Line 171: "Skip WhatsApp Setup?"
   Context: {
    Alert.alert(
      'Skip WhatsApp Setup?',
      'You can set up WhatsApp notifications later in your profile settings.',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 198: "WhatsApp Setup"
   Context: {{ title: 'WhatsApp Setup', headerShown: false }

   Line 64: "Invalid Phone Number"
   Context: Alert.alert('Invalid Phone Number'

   Line 91: "Verification Code Sent"
   Context: Alert.alert(
        'Verification Code Sent'

   Line 98: "WhatsApp verification error:"
   Context: console.error('WhatsApp verification error:'

   Line 107: "Invalid Code"
   Context: Alert.alert('Invalid Code'

   Line 143: "WhatsApp Setup Complete!"
   Context: Alert.alert(
        'WhatsApp Setup Complete!'

   Line 98: "WhatsApp verification error:"
   Context: console.error('WhatsApp verification error:'

   Line 165: "Verification Failed"
   Context: Alert.alert('Verification Failed'

   Line 172: "Skip WhatsApp Setup?"
   Context: Alert.alert(
      'Skip WhatsApp Setup?'

   Line 64: "Invalid Phone Number"
   Context: 'Invalid Phone Number'

   Line 64: "Please enter a valid WhatsApp number including country code"
   Context: 'Please enter a valid WhatsApp number including country code'

   Line 92: "Verification Code Sent"
   Context: 'Verification Code Sent'

   Line 107: "Invalid Code"
   Context: 'Invalid Code'

   Line 165: "Verification Failed"
   Context: 'Verification Failed'

   Line 198: "WhatsApp Setup"
   Context: 'WhatsApp Setup'

üìÑ app/screens/worksheet-demo.tsx:
   Line 33: "demo-assignment-1"
   Context: {
    id: 'demo-assignment-1',
    title: 'Math Practice: Addition and Subtraction',
    description: 'Practice basic addition and subtraction problems',
    instructions: 'Complete all problems. Show your work for each calculation.',
    course_id: 'demo-course-1',
    assignment_type: 'homework',
    max_points: 100,
    assigned_at: new Date().toISOString(),
    due_at: new Date(Date.now() + 3 * 24 * 60 * 60 * 1000).toISOString(),
    available_from: new Date().toISOString(),
    available_until: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString(),
    allow_late_submissions: true,
    late_penalty_percent: 10,
    max_attempts: 2,
    attachments: [],
    metadata: {}

   Line 56: "Test Direct Generation"
   Context: {
    Alert.alert(
      'Test Direct Generation',
      'Which type of worksheet would you like to test?',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 62: "Math Worksheet"
   Context: { text: 'Math Worksheet', onPress: testMathWorksheet }

   Line 63: "Reading Worksheet"
   Context: { text: 'Reading Worksheet', onPress: testReadingWorksheet }

   Line 64: "Activity Sheet"
   Context: { text: 'Activity Sheet', onPress: testActivitySheet }

   Line 79: "Addition Practice Worksheet"
   Context: {
        title: 'Addition Practice Worksheet',
        studentName: 'Demo Student',
        difficulty: 'easy',
        ageGroup: '5-6',
        colorMode: 'color',
        paperSize: 'A4',
        orientation: 'portrait',
        includeAnswerKey: true,
      }

   Line 91: "Math worksheet test failed:"
   Context: {
      console.error('Math worksheet test failed:', error);
    }

   Line 96: "comprehension"
   Context: {
    try {
      const readingData: ReadingWorksheetData = {
        type: 'comprehension',
        content: 'The little cat sat on the mat. It was a sunny day and the cat was very happy. The cat played with a ball of yarn and took a long nap in the warm sunshine.',
        questions: [
          {
            question: 'Where did the cat sit?',
            type: 'short-answer',
            correctAnswer: 'On the mat'
          }

   Line 107: "What kind of day was it?"
   Context: {
            question: 'What kind of day was it?',
            type: 'multiple-choice',
            options: ['Rainy', 'Sunny', 'Cloudy', 'Snowy'],
            correctAnswer: 'Sunny'
          }

   Line 113: "The cat was happy."
   Context: {
            question: 'The cat was happy.',
            type: 'true-false',
            correctAnswer: 'True'
          }

   Line 121: "Reading Comprehension: The Little Cat"
   Context: {
        title: 'Reading Comprehension: The Little Cat',
        studentName: 'Demo Student',
        difficulty: 'easy',
        ageGroup: '4-5',
        colorMode: 'color',
        paperSize: 'A4',
        orientation: 'portrait',
        includeAnswerKey: true,
      }

   Line 133: "Reading worksheet test failed:"
   Context: {
      console.error('Reading worksheet test failed:', error);
    }

   Line 138: "coloring"
   Context: {
    try {
      const activityData: ActivitySheetData = {
        type: 'coloring',
        theme: 'Farm Animals',
        instructions: 'Color the farm animals using your favorite colors. Try to stay inside the lines!',
        materials: ['Crayons or colored pencils', 'Eraser (optional)']
      }

   Line 147: "Farm Animals Coloring Activity"
   Context: {
        title: 'Farm Animals Coloring Activity',
        studentName: 'Demo Student',
        difficulty: 'easy',
        ageGroup: '3-4',
        colorMode: 'color',
        paperSize: 'A4',
        orientation: 'portrait',
        includeAnswerKey: false,
      }

   Line 159: "Activity sheet test failed:"
   Context: {
      console.error('Activity sheet test failed:', error);
    }

   Line 179: "teacher"
   Context: {['teacher', 'principal', 'principal_admin', 'parent'].includes(profile?.role || '') ? 'Yes ‚úÖ' : 'No ‚ùå'}

   Line 228: "Widget Test"
   Context: {(assignment) => {
                Alert.alert(
                  'Widget Test',
                  assignment 
                    ? `Creating worksheet from: ${assignment.title}

   Line 57: "Test Direct Generation"
   Context: Alert.alert(
      'Test Direct Generation'

   Line 92: "Math worksheet test failed:"
   Context: console.error('Math worksheet test failed:'

   Line 134: "Reading worksheet test failed:"
   Context: console.error('Reading worksheet test failed:'

   Line 160: "Activity sheet test failed:"
   Context: console.error('Activity sheet test failed:'

   Line 229: "Widget Test"
   Context: Alert.alert(
                  'Widget Test'

   Line 36: "Practice basic addition and subtraction problems"
   Context: 'Practice basic addition and subtraction problems'

   Line 58: "Test Direct Generation"
   Context: 'Test Direct Generation'

   Line 62: "Math Worksheet"
   Context: 'Math Worksheet'

   Line 63: "Reading Worksheet"
   Context: 'Reading Worksheet'

   Line 64: "Activity Sheet"
   Context: 'Activity Sheet'

   Line 80: "Addition Practice Worksheet"
   Context: 'Addition Practice Worksheet'

   Line 81: "Demo Student"
   Context: 'Demo Student'

   Line 105: "On the mat"
   Context: 'On the mat'

   Line 81: "Demo Student"
   Context: 'Demo Student'

   Line 142: "Farm Animals"
   Context: 'Farm Animals'

   Line 144: "Crayons or colored pencils"
   Context: 'Crayons or colored pencils'

   Line 148: "Farm Animals Coloring Activity"
   Context: 'Farm Animals Coloring Activity'

   Line 81: "Demo Student"
   Context: 'Demo Student'

   Line 230: "Widget Test"
   Context: 'Widget Test'

   Line 233: "Creating new worksheet"
   Context: 'Creating new worksheet'

üìÑ app/screens/worksheet-viewer.tsx:
   Line 88: "math"
   Context: {
        // Create a demo worksheet based on parameters
        const worksheetType = (params.type as string) || 'math';
        const ageGroup = (params.ageGroup as string) || '5-6 years';
        const difficulty = (params.difficulty as string) || 'Medium';
        
        if (worksheetType === 'math') {
          setWorksheet(createDemoMathWorksheet(ageGroup, difficulty));
        }

   Line 102: "Failed to load worksheet:"
   Context: {
      console.error('Failed to load worksheet:', error);
      Alert.alert('Error', 'Failed to load worksheet');
    }

   Line 145: "DashAI"
   Context: {
        generatedBy: 'DashAI',
        generatedAt: new Date().toISOString(),
        estimatedTime: `${Math.ceil(count / 3)}

   Line 154: "Letter Recognition"
   Context: {
    const activities = [
      {
        title: 'Letter Recognition',
        description: 'Circle all the letters that match',
        type: 'recognition',
        instructions: 'Look at each letter carefully and circle the ones that match the example.'
      }

   Line 162: "Word Building"
   Context: {
        title: 'Word Building',
        description: 'Use the letters to build simple words',
        type: 'construction',
        instructions: 'Put the letters in order to make the word shown in the picture.'
      }

   Line 168: "Reading Comprehension"
   Context: {
        title: 'Reading Comprehension',
        description: 'Read the short story and answer questions',
        type: 'comprehension',
        instructions: 'Read carefully and choose the best answer for each question.'
      }

   Line 185: "DashAI"
   Context: {
        generatedBy: 'DashAI',
        generatedAt: new Date().toISOString(),
        estimatedTime: '20-25 minutes',
        skills: ['Reading Comprehension', 'Vocabulary', 'Phonics']
      }

   Line 194: "Creative Drawing"
   Context: {
    const activities = [
      {
        title: 'Creative Drawing',
        description: 'Draw your favorite animal and color it',
        type: 'creative',
        instructions: 'Use your imagination to draw and color your favorite animal.'
      }

   Line 202: "Pattern Recognition"
   Context: {
        title: 'Pattern Recognition',
        description: 'Complete the pattern by adding the missing shapes',
        type: 'cognitive',
        instructions: 'Look at the pattern and draw what comes next.'
      }

   Line 208: "Sorting Activity"
   Context: {
        title: 'Sorting Activity',
        description: 'Sort the items into the correct groups',
        type: 'cognitive',
        instructions: 'Put each item in the group where it belongs.'
      }

   Line 225: "DashAI"
   Context: {
        generatedBy: 'DashAI',
        generatedAt: new Date().toISOString(),
        estimatedTime: '25-30 minutes',
        skills: ['Creativity', 'Problem Solving', 'Fine Motor Skills']
      }

   Line 255: "Complete all activities to the best of your ability."
   Context: {
        // For reading and activity worksheets, use a general worksheet PDF generator
        pdfResult = await pdfService.generateWorksheetPDF({
          title: worksheet.title,
          type: worksheet.type,
          ageGroup: worksheet.ageGroup,
          difficulty: worksheet.difficulty,
          activities: worksheet.activities || [],
          instructions: 'Complete all activities to the best of your ability.'
        }

   Line 267: "PDF Generated!"
   Context: {
        Alert.alert(
          'PDF Generated!',
          'Your worksheet PDF is ready to download.',
          [
            { text: 'View', onPress: () => sharePDF(pdfResult.filePath!) }

   Line 279: "PDF generation failed:"
   Context: {
      console.error('PDF generation failed:', error);
      Alert.alert('Error', 'Failed to generate PDF');
    }

   Line 292: "Share Not Available"
   Context: {
        Alert.alert('Share Not Available', 'Sharing is not available on this device');
      }

   Line 295: "Failed to share PDF:"
   Context: {
      console.error('Failed to share PDF:', error);
      Alert.alert('Error', 'Failed to share PDF');
    }

   Line 306: "math"
   Context: {worksheet.type === 'math' ? 'Problems' : 'Activities'}

   Line 312: "Failed to share worksheet:"
   Context: {
      console.error('Failed to share worksheet:', error);
    }

   Line 499: "Generating..."
   Context: {generating ? 'Generating...' : 'Download PDF'}

   Line 103: "Failed to load worksheet:"
   Context: console.error('Failed to load worksheet:'

   Line 268: "PDF Generated!"
   Context: Alert.alert(
          'PDF Generated!'

   Line 280: "PDF generation failed:"
   Context: console.error('PDF generation failed:'

   Line 293: "Share Not Available"
   Context: Alert.alert('Share Not Available'

   Line 296: "Failed to share PDF:"
   Context: console.error('Failed to share PDF:'

   Line 313: "Failed to share worksheet:"
   Context: console.error('Failed to share worksheet:'

   Line 72: "No worksheet ID provided"
   Context: 'No worksheet ID provided'

   Line 104: "Failed to load worksheet"
   Context: 'Failed to load worksheet'

   Line 146: "DashAI"
   Context: 'DashAI'

   Line 149: "Number Recognition"
   Context: 'Number Recognition'

   Line 157: "Letter Recognition"
   Context: 'Letter Recognition'

   Line 158: "Circle all the letters that match"
   Context: 'Circle all the letters that match'

   Line 163: "Word Building"
   Context: 'Word Building'

   Line 164: "Use the letters to build simple words"
   Context: 'Use the letters to build simple words'

   Line 169: "Reading Comprehension"
   Context: 'Reading Comprehension'

   Line 170: "Read the short story and answer questions"
   Context: 'Read the short story and answer questions'

   Line 184: "General Reading"
   Context: 'General Reading'

   Line 146: "DashAI"
   Context: 'DashAI'

   Line 169: "Reading Comprehension"
   Context: 'Reading Comprehension'

   Line 197: "Creative Drawing"
   Context: 'Creative Drawing'

   Line 198: "Draw your favorite animal and color it"
   Context: 'Draw your favorite animal and color it'

   Line 203: "Pattern Recognition"
   Context: 'Pattern Recognition'

   Line 204: "Complete the pattern by adding the missing shapes"
   Context: 'Complete the pattern by adding the missing shapes'

   Line 209: "Sorting Activity"
   Context: 'Sorting Activity'

   Line 210: "Sort the items into the correct groups"
   Context: 'Sort the items into the correct groups'

   Line 224: "General Learning"
   Context: 'General Learning'

   Line 146: "DashAI"
   Context: 'DashAI'

   Line 229: "Problem Solving"
   Context: 'Problem Solving'

   Line 229: "Fine Motor Skills"
   Context: 'Fine Motor Skills'

   Line 277: "Failed to generate PDF"
   Context: 'Failed to generate PDF'

   Line 277: "Failed to generate PDF"
   Context: 'Failed to generate PDF'

   Line 293: "Share Not Available"
   Context: 'Share Not Available'

   Line 293: "Sharing is not available on this device"
   Context: 'Sharing is not available on this device'

   Line 297: "Failed to share PDF"
   Context: 'Failed to share PDF'

   Line 499: "Download PDF"
   Context: 'Download PDF'

üìÑ app/test-working.tsx:
   Line 9: "Test Screen"
   Context: {{ 
        title: 'Test Screen',
        headerStyle: { backgroundColor: '#0b1220' }

   Line 10: "Test Screen"
   Context: 'Test Screen'

üìÑ app/test-worksheet.tsx:
   Line 28: "Test Math Worksheet"
   Context: {
        title: 'Test Math Worksheet',
        studentName: 'Test Student',
        difficulty: 'easy' as const,
        ageGroup: '5-6' as const,
        colorMode: 'color' as const,
        paperSize: 'A4' as const,
        orientation: 'portrait' as const,
        includeAnswerKey: true,
      }

   Line 41: "Test failed:"
   Context: {
      console.error('Test failed:', error);
      Alert.alert('Error', `Failed to generate worksheet: ${error.message || 'Unknown error'}

   Line 49: "comprehension"
   Context: {
    setIsGenerating(true);
    try {
      const readingData = {
        type: 'comprehension' as const,
        content: 'The little cat sat on the soft mat. It was a bright sunny day and the cat felt very happy. The cat played with a colorful ball of yarn and then took a nice long nap in the warm sunshine.',
        questions: [
          {
            question: 'Where did the cat sit?',
            type: 'short-answer' as const,
            correctAnswer: 'On the mat'
          }

   Line 61: "What kind of day was it?"
   Context: {
            question: 'What kind of day was it?',
            type: 'multiple-choice' as const,
            options: ['Rainy', 'Sunny', 'Cloudy', 'Snowy'],
            correctAnswer: 'Sunny'
          }

   Line 70: "Reading Comprehension Test"
   Context: {
        title: 'Reading Comprehension Test',
        studentName: 'Test Student',
        difficulty: 'easy' as const,
        ageGroup: '5-6' as const,
        colorMode: 'color' as const,
        paperSize: 'A4' as const,
        orientation: 'portrait' as const,
        includeAnswerKey: true,
      }

   Line 41: "Test failed:"
   Context: {
      console.error('Test failed:', error);
      Alert.alert('Error', `Failed to generate worksheet: ${error.message || 'Unknown error'}

   Line 91: "coloring"
   Context: {
    setIsGenerating(true);
    try {
      const activityData = {
        type: 'coloring' as const,
        theme: 'Farm Animals',
        instructions: 'Color the farm animals using your favorite colors. Try to stay inside the lines and have fun!',
        materials: ['Crayons or colored pencils', 'Eraser (optional)', 'Paper']
      }

   Line 101: "Farm Animals Coloring Activity"
   Context: {
        title: 'Farm Animals Coloring Activity',
        studentName: 'Test Student',
        difficulty: 'easy' as const,
        ageGroup: '4-5' as const,
        colorMode: 'color' as const,
        paperSize: 'A4' as const,
        orientation: 'portrait' as const,
        includeAnswerKey: false,
      }

   Line 41: "Test failed:"
   Context: {
      console.error('Test failed:', error);
      Alert.alert('Error', `Failed to generate worksheet: ${error.message || 'Unknown error'}

   Line 40: "Success!"
   Context: Alert.alert('Success!'

   Line 42: "Test failed:"
   Context: console.error('Test failed:'

   Line 40: "Success!"
   Context: Alert.alert('Success!'

   Line 42: "Test failed:"
   Context: console.error('Test failed:'

   Line 40: "Success!"
   Context: Alert.alert('Success!'

   Line 42: "Test failed:"
   Context: console.error('Test failed:'

   Line 29: "Test Math Worksheet"
   Context: 'Test Math Worksheet'

   Line 30: "Test Student"
   Context: 'Test Student'

   Line 43: "Unknown error"
   Context: 'Unknown error'

   Line 59: "On the mat"
   Context: 'On the mat'

   Line 71: "Reading Comprehension Test"
   Context: 'Reading Comprehension Test'

   Line 30: "Test Student"
   Context: 'Test Student'

   Line 43: "Unknown error"
   Context: 'Unknown error'

   Line 96: "Farm Animals"
   Context: 'Farm Animals'

   Line 98: "Crayons or colored pencils"
   Context: 'Crayons or colored pencils'

   Line 102: "Farm Animals Coloring Activity"
   Context: 'Farm Animals Coloring Activity'

   Line 30: "Test Student"
   Context: 'Test Student'

   Line 43: "Unknown error"
   Context: 'Unknown error'

   Line 194: "Assign Homework"
   Context: "Assign Homework"

üìÑ components/ErrorBoundary.tsx:
   Line 30: "ErrorBoundary caught an error:"
   Context: {
    console.error('ErrorBoundary caught an error:', error, errorInfo);
    this.setState({ errorInfo }

   Line 42: "Could not log error to analytics:"
   Context: {
      console.warn('Could not log error to analytics:', e);
    }

   Line 63: "An unexpected error occurred"
   Context: {this.state.error?.message || 'An unexpected error occurred'}

   Line 31: "ErrorBoundary caught an error:"
   Context: console.error('ErrorBoundary caught an error:'

   Line 43: "Could not log error to analytics:"
   Context: console.warn('Could not log error to analytics:'

   Line 63: "An unexpected error occurred"
   Context: 'An unexpected error occurred'

üìÑ components/GlobalUpdateBanner.tsx:
   Line 39: "Restart App"
   Context: {
    Alert.alert(
      t('Restart App'),
      t('The app will restart to apply the update. Any unsaved changes will be lost.'),
      [
        {
          text: t('Cancel'),
          style: 'cancel',
        }

   Line 48: "Restart Now"
   Context: {
          text: t('Restart Now'),
          style: 'default',
          onPress: applyUpdate,
        }

   Line 74: "App update downloaded"
   Context: {t('App update downloaded')}

   Line 76: "Update Ready"
   Context: {t('Update Ready')}

   Line 82: "Tap to restart and apply the latest version"
   Context: {t('Tap to restart and apply the latest version')}

   Line 91: "Dismiss update notification"
   Context: {t('Dismiss update notification')}

   Line 92: "Hides this notification until the next update"
   Context: {t('Hides this notification until the next update')}

   Line 103: "Restart app to apply update"
   Context: {t('Restart app to apply update')}

   Line 104: "Restarts the app to apply the downloaded update"
   Context: {t('Restarts the app to apply the downloaded update')}

   Line 133: "Update error occurred"
   Context: {t('Update error occurred')}

   Line 135: "Update Error"
   Context: {t('Update Error')}

   Line 142: "Failed to check for updates"
   Context: {updateError || t('Failed to check for updates')}

   Line 150: "Dismiss error notification"
   Context: {t('Dismiss error notification')}

   Line 151: "Closes this error message"
   Context: {t('Closes this error message')}

   Line 41: "Restart App"
   Context: 'Restart App'

   Line 49: "Restart Now"
   Context: 'Restart Now'

   Line 74: "App update downloaded"
   Context: 'App update downloaded'

   Line 76: "Update Ready"
   Context: 'Update Ready'

   Line 82: "Tap to restart and apply the latest version"
   Context: 'Tap to restart and apply the latest version'

   Line 91: "Dismiss update notification"
   Context: 'Dismiss update notification'

   Line 92: "Hides this notification until the next update"
   Context: 'Hides this notification until the next update'

   Line 103: "Restart app to apply update"
   Context: 'Restart app to apply update'

   Line 104: "Restarts the app to apply the downloaded update"
   Context: 'Restarts the app to apply the downloaded update'

   Line 133: "Update error occurred"
   Context: 'Update error occurred'

   Line 135: "Update Error"
   Context: 'Update Error'

   Line 142: "Failed to check for updates"
   Context: 'Failed to check for updates'

   Line 150: "Dismiss error notification"
   Context: 'Dismiss error notification'

   Line 151: "Closes this error message"
   Context: 'Closes this error message'

üìÑ components/RoleBasedHeader.tsx:
   Line 95: "Failed to load avatar from profiles:"
   Context: {
          console.debug('Failed to load avatar from profiles:', error);
        }

   Line 113: "Failed to load avatar from users:"
   Context: {
          console.debug('Failed to load avatar from users:', error);
        }

   Line 119: "Skipping local file:// URI on web platform:"
   Context: {
        console.debug('Skipping local file:// URI on web platform:', url);
        url = null;
      }

   Line 144: "Failed to convert avatar URI in header:"
   Context: {
          console.error('Failed to convert avatar URI in header:', error);
          setDisplayUri(null); // Fallback to initials
        }

   Line 168: "dashboard"
   Context: {
    if (title) return title;
    
    // Default titles based on route name
    const routeName = route.name;
    if (routeName.includes('dashboard')) {
      const role = permissions?.enhancedProfile?.role;
      switch (role) {
        case 'super_admin':
          return 'SuperAdmin Dashboard';
        case 'principal_admin':
          return 'Principal Hub';
        case 'teacher':
          return 'Teacher Dashboard';
        case 'parent':
          return 'Parent Dashboard';
        default:
          return 'Dashboard';
      }

   Line 216: "active"
   Context: {
      const statusText = profile.seat_status === 'active' ? 'Active' : 
                        profile.seat_status === 'pending' ? 'Pending Activation' :
                        'Inactive';
      return `Seat Status: ${statusText}

   Line 425: "dark"
   Context: {mode === 'dark' ? 'Dark' : mode === 'light' ? 'Light' : 'System'}

   Line 285: "Go back"
   Context: accessibilityLabel="Go back"

   Line 302: "Go to account settings"
   Context: accessibilityLabel="Go to account settings"

   Line 367: "Manage subscription plan"
   Context: accessibilityLabel="Manage subscription plan"

   Line 376: "Toggle dashboard layout"
   Context: accessibilityLabel="Toggle dashboard layout"

   Line 385: "Open settings menu"
   Context: accessibilityLabel="Open settings menu"

   Line 145: "Failed to convert avatar URI in header:"
   Context: console.error('Failed to convert avatar URI in header:'

   Line 124: "Not found"
   Context: 'Not found'

   Line 177: "SuperAdmin Dashboard"
   Context: 'SuperAdmin Dashboard'

   Line 179: "Principal Hub"
   Context: 'Principal Hub'

   Line 181: "Teacher Dashboard"
   Context: 'Teacher Dashboard'

   Line 183: "Parent Dashboard"
   Context: 'Parent Dashboard'

   Line 218: "Pending Activation"
   Context: 'Pending Activation'

   Line 285: "Go back"
   Context: "Go back"

   Line 302: "Go to account settings"
   Context: "Go to account settings"

   Line 367: "Manage subscription plan"
   Context: "Manage subscription plan"

   Line 376: "Toggle dashboard layout"
   Context: "Toggle dashboard layout"

   Line 385: "Open settings menu"
   Context: "Open settings menu"

üìÑ components/SuperAdminLoadingHandler.tsx:
   Line 74: "Session refresh failed during retry:"
   Context: {
        console.warn('Session refresh failed during retry:', sessionError);
      }

   Line 83: "Manual retry failed:"
   Context: {
      console.error('Manual retry failed:', error);
    }

   Line 104: "Force sign out failed:"
   Context: {
      console.error('Force sign out failed:', error);
      // Fallback: reload the page
      if (typeof window !== 'undefined') {
        window.location.reload();
      }

   Line 75: "Session refresh failed during retry:"
   Context: console.warn('Session refresh failed during retry:'

   Line 84: "Manual retry failed:"
   Context: console.error('Manual retry failed:'

   Line 105: "Force sign out failed:"
   Context: console.error('Force sign out failed:'

üìÑ components/admin/CacheManagement.tsx:
   Line 58: "Failed to load cache stats:"
   Context: {
      console.error('Failed to load cache stats:', error);
    }

   Line 69: "0 B"
   Context: {
    if (bytes === 0) return '0 B';
    const k = 1024;
    const sizes = ['B', 'KB', 'MB', 'GB'];
    const i = Math.floor(Math.log(bytes) / Math.log(k));
    return `${parseFloat((bytes / Math.pow(k, i)).toFixed(2))}

   Line 105: "common.error"
   Context: {
              Alert.alert(t('common.error'), t('cache.clear_failed'));
              console.error('Failed to clear user cache:', error);
            }

   Line 137: "common.error"
   Context: {
              Alert.alert(t('common.error'), t('cache.clear_school_failed'));
              console.error('Failed to clear school cache:', error);
            }

   Line 59: "Failed to load cache stats:"
   Context: console.error('Failed to load cache stats:'

   Line 107: "Failed to clear user cache:"
   Context: console.error('Failed to clear user cache:'

   Line 139: "Failed to clear school cache:"
   Context: console.error('Failed to clear school cache:'

üìÑ components/ads/NativeAdCard.tsx:
   Line 33: "reading-tips"
   Context: {
    id: 'reading-tips',
    title: 'Daily Reading Tips',
    description: 'Build your child\'s literacy with 15 minutes of reading daily',
    sponsor: 'EduDash Pro',
    cta: 'Learn More',
    icon: 'book',
    color: ['#4F46E5', '#7C3AED'],
    action: () => console.log('Navigate to reading tips'),
  }

   Line 43: "math-practice"
   Context: {
    id: 'math-practice',
    title: 'Fun Math Practice',
    description: 'Make numbers exciting with games and activities',
    sponsor: 'EduDash Pro',
    cta: 'Try Now',
    icon: 'calculator',
    color: ['#059669', '#10B981'],
    action: () => console.log('Navigate to math activities'),
  }

   Line 53: "communication"
   Context: {
    id: 'communication',
    title: 'Talk to Teachers',
    description: 'Stay connected with your child\'s learning progress',
    sponsor: 'EduDash Pro',
    cta: 'Message Now',
    icon: 'chatbubble',
    color: ['#F59E0B', '#D97706'],
    action: () => router.push('/messages'),
  }

   Line 63: "progress-tracking"
   Context: {
    id: 'progress-tracking',
    title: 'Track Progress',
    description: 'Monitor your child\'s academic development',
    sponsor: 'EduDash Pro',
    cta: 'View Progress',
    icon: 'trending-up',
    color: ['#DC2626', '#B91C1C'],
    action: () => router.push('/progress'),
  }

   Line 109: "Error checking native ad eligibility:"
   Context: {
        console.warn('Error checking native ad eligibility:', error);
        setShowAds(false);
      }

   Line 155: "Native ads module not available:"
   Context: {
    console.debug('Native ads module not available:', error);
    // Show fallback instead
    return showFallback && fallbackContent ? (
      <FallbackNativeCard
        content={fallbackContent}

   Line 202: "edudash.ad.native_failed"
   Context: {
    setNativeAdFailed(true);
    setNativeAdLoaded(false);
    
    track('edudash.ad.native_failed', {
      placement,
      error: error?.message || 'Unknown error',
      item_index: itemIndex,
      user_id: user?.id,
      platform: Platform.OS,
    }

   Line 226: "Sponsored content"
   Context: accessibilityLabel="Sponsored content"

   Line 285: "Educational tip"
   Context: accessibilityLabel="Educational tip"

   Line 286: "Tap to learn more"
   Context: accessibilityHint="Tap to learn more"

   Line 305: "Dismiss this card"
   Context: accessibilityHint="Dismiss this card"

   Line 41: "Navigate to reading tips"
   Context: console.log('Navigate to reading tips'

   Line 51: "Navigate to math activities"
   Context: console.log('Navigate to math activities'

   Line 110: "Error checking native ad eligibility:"
   Context: console.warn('Error checking native ad eligibility:'

   Line 35: "Daily Reading Tips"
   Context: 'Daily Reading Tips'

   Line 37: "EduDash Pro"
   Context: 'EduDash Pro'

   Line 38: "Learn More"
   Context: 'Learn More'

   Line 41: "Navigate to reading tips"
   Context: 'Navigate to reading tips'

   Line 45: "Fun Math Practice"
   Context: 'Fun Math Practice'

   Line 46: "Make numbers exciting with games and activities"
   Context: 'Make numbers exciting with games and activities'

   Line 37: "EduDash Pro"
   Context: 'EduDash Pro'

   Line 48: "Try Now"
   Context: 'Try Now'

   Line 51: "Navigate to math activities"
   Context: 'Navigate to math activities'

   Line 55: "Talk to Teachers"
   Context: 'Talk to Teachers'

   Line 37: "EduDash Pro"
   Context: 'EduDash Pro'

   Line 58: "Message Now"
   Context: 'Message Now'

   Line 65: "Track Progress"
   Context: 'Track Progress'

   Line 37: "EduDash Pro"
   Context: 'EduDash Pro'

   Line 208: "Unknown error"
   Context: 'Unknown error'

   Line 226: "Sponsored content"
   Context: "Sponsored content"

   Line 285: "Educational tip"
   Context: "Educational tip"

   Line 286: "Tap to learn more"
   Context: "Tap to learn more"

   Line 305: "Dismiss this card"
   Context: "Dismiss this card"

üìÑ components/ai/AllocationManagementScreen.tsx:
   Line 123: "ai_quota.loading_profile"
   Context: {t('ai_quota.loading_profile', { defaultValue: 'Loading your profile...' }

   Line 134: "ai_quota.access_restricted_title"
   Context: {t('ai_quota.access_restricted_title', { defaultValue: 'Access Restricted' }

   Line 135: "ai_quota.access_restricted_desc"
   Context: {t('ai_quota.access_restricted_desc', { defaultValue: "Only principals and administrators can manage AI allocations. Please contact your school administrator if you need access." }

   Line 138: "common.go_back"
   Context: {t('common.go_back', { defaultValue: 'Go Back' }

   Line 150: "ai_quota.loading_data"
   Context: {t('ai_quota.loading_data', { defaultValue: 'Loading allocation data...' }

   Line 156: "AI Allocation Errors:"
   Context: {
    console.log('AI Allocation Errors:', {
      schoolSubscription: errors.schoolSubscription,
      teacherAllocations: errors.teacherAllocations,
      permissions: errors.permissions
    }

   Line 167: "ai_quota.failed_load_title"
   Context: {t('ai_quota.failed_load_title', { defaultValue: 'Failed to Load AI Data' }

   Line 168: "ai_quota.failed_load_desc"
   Context: {t('ai_quota.failed_load_desc', { defaultValue: 'Unable to load allocation data.' }

   Line 171: "ai_quota.retry"
   Context: {t('ai_quota.retry', { defaultValue: 'Retry Loading' }

   Line 434: "Your School"
   Context: {profile?.organization_name || 'Your School'}

   Line 536: "No matches found"
   Context: {searchQuery ? "No matches found" : "No allocations yet"}

   Line 537: "Try adjusting your search terms"
   Context: {
                searchQuery
                  ? "Try adjusting your search terms"
                  : "Start by allocating AI quotas to your teachers"
              }

   Line 599: "Allocation error:"
   Context: {
            console.error('Allocation error:', error);
            Alert.alert(
              'Error',
              error instanceof Error ? error.message : 'Failed to allocate quotas',
              [{ text: 'OK' }

   Line 712: "Unknown Teacher"
   Context: {allocation.teacher_name || 'Unknown Teacher'}

   Line 715: "No email"
   Context: {allocation.teacher_email || 'No email'}

   Line 813: "lesson_generation"
   Context: { key: 'lesson_generation', label: 'Lesson Generation', max: Math.floor((schoolSubscription?.total_quotas?.lesson_generation || 50) / 2) }

   Line 814: "grading_assistance"
   Context: { key: 'grading_assistance', label: 'Grading Assistance', max: Math.floor((schoolSubscription?.total_quotas?.grading_assistance || 25) / 2) }

   Line 815: "homework_help"
   Context: { key: 'homework_help', label: 'Homework Help', max: Math.floor((schoolSubscription?.total_quotas?.homework_help || 75) / 2) }

   Line 953: "Edit Allocation"
   Context: {teacher ? 'Edit Allocation' : 'New Allocation'}

   Line 964: "Unknown Teacher"
   Context: {teacher.teacher_name || 'Unknown Teacher'}

   Line 967: "No email"
   Context: {teacher.teacher_email || 'No email'}

   Line 1025: "low"
   Context: {[{ key: 'low', label: 'Low' }

   Line 1025: "normal"
   Context: { key: 'normal', label: 'Normal' }

   Line 1025: "high"
   Context: { key: 'high', label: 'High' }

   Line 1088: "Update Allocation"
   Context: {teacher ? 'Update Allocation' : 'Create Allocation'}

   Line 518: "Search teachers..."
   Context: placeholder="Search teachers..."

   Line 523: "Search teachers"
   Context: accessibilityLabel="Search teachers"

   Line 955: "Close modal"
   Context: accessibilityLabel="Close modal"

   Line 1065: "Enter reason for this allocation..."
   Context: placeholder="Enter reason for this allocation..."

   Line 157: "AI Allocation Errors:"
   Context: console.log('AI Allocation Errors:'

   Line 600: "Allocation error:"
   Context: console.error('Allocation error:'

   Line 134: "Access Restricted"
   Context: 'Access Restricted'

   Line 138: "Go Back"
   Context: 'Go Back'

   Line 167: "Failed to Load AI Data"
   Context: 'Failed to Load AI Data'

   Line 171: "Retry Loading"
   Context: 'Retry Loading'

   Line 434: "Your School"
   Context: 'Your School'

   Line 523: "Search teachers"
   Context: "Search teachers"

   Line 536: "No matches found"
   Context: "No matches found"

   Line 536: "No allocations yet"
   Context: "No allocations yet"

   Line 539: "Try adjusting your search terms"
   Context: "Try adjusting your search terms"

   Line 540: "Start by allocating AI quotas to your teachers"
   Context: "Start by allocating AI quotas to your teachers"

   Line 603: "Failed to allocate quotas"
   Context: 'Failed to allocate quotas'

   Line 712: "Unknown Teacher"
   Context: 'Unknown Teacher'

   Line 715: "No email"
   Context: 'No email'

   Line 813: "Lesson Generation"
   Context: 'Lesson Generation'

   Line 814: "Grading Assistance"
   Context: 'Grading Assistance'

   Line 815: "Homework Help"
   Context: 'Homework Help'

   Line 953: "Edit Allocation"
   Context: 'Edit Allocation'

   Line 953: "New Allocation"
   Context: 'New Allocation'

   Line 955: "Close modal"
   Context: "Close modal"

   Line 712: "Unknown Teacher"
   Context: 'Unknown Teacher'

   Line 715: "No email"
   Context: 'No email'

   Line 1088: "Update Allocation"
   Context: 'Update Allocation'

   Line 1088: "Create Allocation"
   Context: 'Create Allocation'

üìÑ components/ai/ConversationSidebar.tsx:
   Line 98: "Search conversations"
   Context: {canSearch ? 'Search conversations' : 'Upgrade for search'}

   Line 123: "Conversation Search"
   Context: {'Conversation Search'}

   Line 98: "Search conversations"
   Context: 'Search conversations'

   Line 98: "Upgrade for search"
   Context: 'Upgrade for search'

   Line 123: "Conversation Search"
   Context: 'Conversation Search'

üìÑ components/ai/DashAssistant.tsx:
   Line 136: "Chat with Dash"
   Context: {
            const createdId = await dash.startNewConversation('Chat with Dash');
            const newConv = await dash.getConversation(createdId);
            if (newConv) {
              setConversation(newConv);
            }

   Line 168: "Failed to initialize Dash:"
   Context: {
        console.error('Failed to initialize Dash:', error);
        Alert.alert('Error', 'Failed to initialize AI Assistant. Please try again.');
      }

   Line 379: "Open Lesson Generator?"
   Context: {
          Alert.alert(
            'Open Lesson Generator?',
            'Dash suggests opening the AI Lesson Generator with prefilled details. Please confirm the fields in the next screen, then press Generate to start.',
            [
              { text: 'Cancel', style: 'cancel' }

   Line 385: "Failed to navigate:"
   Context: { console.warn('Failed to navigate:', e); }

   Line 391: "Failed to navigate to route from Dash action:"
   Context: {
            console.warn('Failed to navigate to route from Dash action:', e);
          }

   Line 430: "Failed to send message:"
   Context: {
      console.error('Failed to send message:', error);
      Alert.alert('Error', 'Failed to send message. Please try again.');
    }

   Line 490: "Failed to speak response:"
   Context: {
      console.error('Failed to speak response:', error);
      setIsSpeaking(false);
      setSpeakingMessageId(null);
    }

   Line 512: "Failed to stop speaking:"
   Context: {
      console.error('Failed to stop speaking:', error);
      // Still clear the state even if stopping failed
      setIsSpeaking(false);
      setSpeakingMessageId(null);
    }

   Line 545: "Attach Files"
   Context: {
        // For Android, show a simple alert
        Alert.alert(
          'Attach Files',
          'Choose the type of files to attach',
          [
            { text: 'Cancel', style: 'cancel' }

   Line 557: "Failed to show file picker:"
   Context: {
      console.error('Failed to show file picker:', error);
    }

   Line 569: "Failed to pick documents:"
   Context: {
      console.error('Failed to pick documents:', error);
      Alert.alert('Error', 'Failed to select documents. Please try again.');
    }

   Line 582: "Failed to pick images:"
   Context: {
      console.error('Failed to pick images:', error);
      Alert.alert('Error', 'Failed to select images. Please try again.');
    }

   Line 592: "Failed to remove attachment:"
   Context: {
      console.error('Failed to remove attachment:', error);
    }

   Line 622: "PDF Ready"
   Context: {
          Alert.alert('PDF Ready', 'Your PDF is ready. If download did not start, long-press the link to save.');
        }

   Line 628: "PDF Ready"
   Context: {
          Alert.alert('PDF Ready', `Saved as ${res.filename || 'export.pdf'}

   Line 632: "handleDownloadPdf error"
   Context: {
      console.error('handleDownloadPdf error', e);
      Alert.alert('PDF Export', 'Failed to generate PDF');
    }

   Line 1015: "error"
   Context: {
    if (vc.state === 'error') {
      try {
        Alert.alert(
          'Microphone Permission',
          'Microphone access is required for voice messages. Please enable it in your device settings and try again.'
        );
      }

   Line 1129: "Finalize streaming messages failed:"
   Context: {
        console.warn('Finalize streaming messages failed:', e);
      }

   Line 1236: "Subscription Tier"
   Context: {
                Alert.alert('Subscription Tier', 'Failed to verify tier');
              }

   Line 1330: "transcribing"
   Context: {!isStreaming && !showVoiceRecorderModal && (
                  isLoading || 
                  vc.state === 'transcribing' || 
                  vc.state === 'thinking'
                ) && (
                  <StreamingIndicator 
                    showThinking 
                    thinkingText={
                      vc.state === 'transcribing' ? 'Transcribing your voice...' : 
                      vc.state === 'thinking' ? 'Thinking...' :
                      isLoading ? 'Processing...' :
                      'Working...'
                    }

   Line 1404: "Microphone Permission"
   Context: {
              Alert.alert('Microphone Permission', 'Please enable microphone access to record audio.');
              return;
            }

   Line 1413: "[DashAssistant] Dash not ready - deferring modal"
   Context: {
              console.log('[DashAssistant] Dash not ready - deferring modal');
              setPendingVoiceModal(true);
              try { toast.show?.('Preparing voice recorder‚Ä¶'); }

   Line 1428: "Realtime stop error:"
   Context: {
              // Stop realtime stream; footer will show streaming assistant content if any
              realtime.stopStream().catch((e: any) => console.error('Realtime stop error:', e));
            }

   Line 1431: "Voice end error:"
   Context: {
              // Immediate UX: show sending placeholder using local timer estimate
              setShowVoiceSending(true);
              setPendingVoiceMs(voiceTimerMs);
              // Release voice recording (send)
              vc.release().catch((e) => console.error('Voice end error:', e));
            }

   Line 1438: "Voice end error:"
   Context: {
            console.error('Voice end error:', e);
          }

   Line 1448: "Voice lock error:"
   Context: {
            console.error('Voice lock error:', e);
          }

   Line 1460: "Realtime cancel error:"
   Context: {
              realtime.cancel().catch((e: any) => console.error('Realtime cancel error:', e));
              setStreamUserPartial('');
              setStreamAssistant('');
              streamSpokenRef.current = false;
              streamFinalizedRef.current = false;
            }

   Line 1466: "Voice cancel error:"
   Context: {
              vc.cancel().catch((e) => console.error('Voice cancel error:', e));
            }

   Line 1469: "Voice cancel error:"
   Context: {
            console.error('Voice cancel error:', e);
          }

   Line 1489: "[DashAssistant] Voice send error:"
   Context: {
              console.error('[DashAssistant] Voice send error:', e);
              Alert.alert('Error', 'Failed to send voice message. Please try again.');
            }

   Line 1199: "Verify subscription tier"
   Context: accessibilityLabel="Verify subscription tier"

   Line 1246: "Command Palette"
   Context: accessibilityLabel="Command Palette"

   Line 1254: "Stop speaking"
   Context: accessibilityLabel="Stop speaking"

   Line 169: "Failed to initialize Dash:"
   Context: console.error('Failed to initialize Dash:'

   Line 347: "Upload Failed"
   Context: Alert.alert(
              'Upload Failed'

   Line 380: "Open Lesson Generator?"
   Context: Alert.alert(
            'Open Lesson Generator?'

   Line 385: "Failed to navigate:"
   Context: console.warn('Failed to navigate:'

   Line 392: "Failed to navigate to route from Dash action:"
   Context: console.warn('Failed to navigate to route from Dash action:'

   Line 411: "Open Lesson Generator?"
   Context: Alert.alert(
              'Open Lesson Generator?'

   Line 431: "Failed to send message:"
   Context: console.error('Failed to send message:'

   Line 491: "Failed to speak response:"
   Context: console.error('Failed to speak response:'

   Line 513: "Failed to stop speaking:"
   Context: console.error('Failed to stop speaking:'

   Line 547: "Attach Files"
   Context: Alert.alert(
          'Attach Files'

   Line 558: "Failed to show file picker:"
   Context: console.error('Failed to show file picker:'

   Line 570: "Failed to pick documents:"
   Context: console.error('Failed to pick documents:'

   Line 583: "Failed to pick images:"
   Context: console.error('Failed to pick images:'

   Line 593: "Failed to remove attachment:"
   Context: console.error('Failed to remove attachment:'

   Line 623: "PDF Ready"
   Context: Alert.alert('PDF Ready'

   Line 623: "PDF Ready"
   Context: Alert.alert('PDF Ready'

   Line 1018: "Microphone Permission"
   Context: Alert.alert(
          'Microphone Permission'

   Line 1130: "Finalize streaming messages failed:"
   Context: console.warn('Finalize streaming messages failed:'

   Line 1235: "Subscription Tier"
   Context: Alert.alert('Subscription Tier'

   Line 1235: "Subscription Tier"
   Context: Alert.alert('Subscription Tier'

   Line 1405: "Microphone Permission"
   Context: Alert.alert('Microphone Permission'

   Line 1430: "Realtime stop error:"
   Context: console.error('Realtime stop error:'

   Line 1436: "Voice end error:"
   Context: console.error('Voice end error:'

   Line 1436: "Voice end error:"
   Context: console.error('Voice end error:'

   Line 1449: "Voice lock error:"
   Context: console.error('Voice lock error:'

   Line 1461: "Realtime cancel error:"
   Context: console.error('Realtime cancel error:'

   Line 1467: "Voice cancel error:"
   Context: console.error('Voice cancel error:'

   Line 1467: "Voice cancel error:"
   Context: console.error('Voice cancel error:'

   Line 137: "Chat with Dash"
   Context: 'Chat with Dash'

   Line 348: "Upload Failed"
   Context: 'Upload Failed'

   Line 357: "Attached files"
   Context: 'Attached files'

   Line 415: "Not now"
   Context: 'Not now'

   Line 535: "Select files to attach"
   Context: 'Select files to attach'

   Line 548: "Attach Files"
   Context: 'Attach Files'

   Line 549: "Choose the type of files to attach"
   Context: 'Choose the type of files to attach'

   Line 611: "Failed to generate PDF"
   Context: 'Failed to generate PDF'

   Line 623: "PDF Ready"
   Context: 'PDF Ready'

   Line 623: "PDF Ready"
   Context: 'PDF Ready'

   Line 611: "Failed to generate PDF"
   Context: 'Failed to generate PDF'

   Line 656: "Unable to open attachment"
   Context: 'Unable to open attachment'

   Line 1019: "Microphone Permission"
   Context: 'Microphone Permission'

   Line 1199: "Verify subscription tier"
   Context: "Verify subscription tier"

   Line 1235: "Subscription Tier"
   Context: 'Subscription Tier'

   Line 1235: "Subscription Tier"
   Context: 'Subscription Tier'

   Line 1237: "Failed to verify tier"
   Context: 'Failed to verify tier'

   Line 1246: "Command Palette"
   Context: "Command Palette"

   Line 1254: "Stop speaking"
   Context: "Stop speaking"

   Line 1019: "Microphone Permission"
   Context: 'Microphone Permission'

üìÑ components/ai/DashCommandPalette.tsx:
   Line 27: "undefined"
   Context: {
  // Close on ESC (web)
  React.useEffect(() => {
    if (!visible || typeof window === 'undefined') return;
    const handler = (e: KeyboardEvent) => {
      if (e.key === 'Escape') {
        e.preventDefault();
        onClose();
      }

   Line 44: "ai_lesson_generator"
   Context: {
    const items: CommandItem[] = [
      // AI
      { id: 'ai_lesson_generator', title: 'AI Lesson Generator', subtitle: 'Create AI-powered lesson plans', icon: 'sparkles', route: '/screens/ai-lesson-generator', section: 'AI' }

   Line 48: "ai_homework_helper"
   Context: { id: 'ai_homework_helper', title: 'AI Homework Helper', subtitle: 'Assist students with homework', icon: 'help-circle-outline', route: '/screens/ai-homework-helper', section: 'AI' }

   Line 49: "ai_grader"
   Context: { id: 'ai_grader', title: 'AI Grading Assistant', subtitle: 'Grade submissions with feedback', icon: 'checkmark-done-outline', route: '/screens/ai-homework-grader-live', section: 'AI' }

   Line 50: "ai_progress"
   Context: { id: 'ai_progress', title: 'AI Progress Analysis', subtitle: 'Analyze student progress', icon: 'analytics-outline', route: '/screens/ai-progress-analysis', section: 'AI' }

   Line 53: "lessons_hub"
   Context: { id: 'lessons_hub', title: 'Lessons Hub', subtitle: 'Browse and manage lessons', icon: 'book-outline', route: '/screens/lessons-hub', section: 'Lessons' }

   Line 54: "lessons_search"
   Context: { id: 'lessons_search', title: 'Search Lessons', subtitle: 'Find lessons by topic', icon: 'search-outline', route: '/screens/lessons-search', section: 'Lessons' }

   Line 55: "lessons_categories"
   Context: { id: 'lessons_categories', title: 'Lesson Categories', subtitle: 'Explore by subject', icon: 'grid-outline', route: '/screens/lessons-categories', section: 'Lessons' }

   Line 56: "create_lesson"
   Context: { id: 'create_lesson', title: 'Create Lesson (Manual)', subtitle: 'Use templates instead of AI', icon: 'create-outline', route: '/screens/create-lesson', section: 'Lessons' }

   Line 59: "admin_dashboard"
   Context: { id: 'admin_dashboard', title: 'Admin Dashboard', subtitle: 'School administration', icon: 'options-outline', route: '/admin-dashboard', section: 'Dashboards' }

   Line 60: "teacher_dashboard"
   Context: { id: 'teacher_dashboard', title: 'Teacher Dashboard', subtitle: 'Your daily workspace', icon: 'speedometer-outline', route: '/screens/teacher-dashboard', section: 'Dashboards' }

   Line 61: "principal_dashboard"
   Context: { id: 'principal_dashboard', title: 'Principal Dashboard', subtitle: 'School overview and actions', icon: 'school-outline', route: '/screens/principal-dashboard', section: 'Dashboards' }

   Line 62: "parent_dashboard"
   Context: { id: 'parent_dashboard', title: 'Parent Dashboard', subtitle: 'Track your child', icon: 'home-outline', route: '/screens/parent-dashboard', section: 'Dashboards' }

   Line 63: "financial_dashboard"
   Context: { id: 'financial_dashboard', title: 'Financial Dashboard', subtitle: 'Fees and finance', icon: 'cash-outline', route: '/screens/financial-dashboard', section: 'Dashboards' }

   Line 64: "principal_approval"
   Context: { id: 'principal_approval', title: 'Principal Approvals', subtitle: 'Review/approve requests', icon: 'checkmark-circle-outline', route: '/screens/principal-approval-dashboard', section: 'Dashboards' }

   Line 65: "principal_announcement"
   Context: { id: 'principal_announcement', title: 'Create School Announcement', subtitle: 'Principal announcement composer', icon: 'megaphone', route: '/screens/principal-announcement', params: { compose: '1' }

   Line 68: "students"
   Context: { id: 'students', title: 'Students', subtitle: 'Browse students', icon: 'people-outline', route: '/screens/students-detail', section: 'People' }

   Line 69: "teachers"
   Context: { id: 'teachers', title: 'Teachers', subtitle: 'Browse teachers', icon: 'person-outline', route: '/screens/teachers-detail', section: 'People' }

   Line 72: "admin_ai_allocation"
   Context: { id: 'admin_ai_allocation', title: 'AI Quota Allocation', subtitle: 'Allocate AI usage to teachers', icon: 'pie-chart-outline', route: '/screens/admin-ai-allocation', section: 'Admin' }

   Line 73: "super_admin_ai"
   Context: { id: 'super_admin_ai', title: 'AI Quotas (Super Admin)', subtitle: 'Review org usage and limits', icon: 'server-outline', route: '/screens/super-admin-ai-quotas', section: 'Admin' }

   Line 76: "dash_assistant"
   Context: { id: 'dash_assistant', title: 'Open Dash Assistant', subtitle: 'Chat with Dash', icon: 'chatbubble-ellipses', route: '/screens/dash-assistant', section: 'Dash' }

   Line 77: "dash_settings"
   Context: { id: 'dash_settings', title: 'Dash AI Settings', subtitle: 'Model, voice, and behavior', icon: 'settings-outline', route: '/screens/dash-ai-settings', section: 'Dash' }

   Line 78: "dash_settings_enhanced"
   Context: { id: 'dash_settings_enhanced', title: 'Dash Settings (Enhanced)', subtitle: 'Advanced AI controls', icon: 'construct-outline', route: '/screens/dash-ai-settings-enhanced', section: 'Dash' }

   Line 79: "dash_history"
   Context: { id: 'dash_history', title: 'Dash Conversations', subtitle: 'View recent chats', icon: 'time-outline', route: '/screens/dash-conversations-history', section: 'Dash' }

   Line 82: "email_verification"
   Context: { id: 'email_verification', title: 'Email Verification', subtitle: 'Verify your email', icon: 'mail-outline', route: '/screens/email-verification', section: 'Auth' }

   Line 85: "capabilities"
   Context: { id: 'capabilities', title: 'What can Dash do?', subtitle: 'See capabilities and examples', icon: 'information-circle-outline', route: '/screens/dash-assistant', params: { initialMessage: 'What can you do? Show me examples for my role.' }

   Line 96: "super_admin_dashboard"
   Context: {
      items.push({ id: 'super_admin_dashboard', title: 'Super Admin Dashboard', subtitle: 'Global controls', icon: 'construct-outline', route: '/screens/super-admin-dashboard', section: 'Dashboards' }

   Line 138: "Search destinations, features, or type a command..."
   Context: placeholder="Search destinations, features, or type a command..."

   Line 47: "AI Lesson Generator"
   Context: 'AI Lesson Generator'

   Line 48: "AI Homework Helper"
   Context: 'AI Homework Helper'

   Line 48: "Assist students with homework"
   Context: 'Assist students with homework'

   Line 49: "AI Grading Assistant"
   Context: 'AI Grading Assistant'

   Line 49: "Grade submissions with feedback"
   Context: 'Grade submissions with feedback'

   Line 50: "AI Progress Analysis"
   Context: 'AI Progress Analysis'

   Line 50: "Analyze student progress"
   Context: 'Analyze student progress'

   Line 53: "Lessons Hub"
   Context: 'Lessons Hub'

   Line 53: "Browse and manage lessons"
   Context: 'Browse and manage lessons'

   Line 54: "Search Lessons"
   Context: 'Search Lessons'

   Line 54: "Find lessons by topic"
   Context: 'Find lessons by topic'

   Line 55: "Lesson Categories"
   Context: 'Lesson Categories'

   Line 55: "Explore by subject"
   Context: 'Explore by subject'

   Line 56: "Use templates instead of AI"
   Context: 'Use templates instead of AI'

   Line 59: "Admin Dashboard"
   Context: 'Admin Dashboard'

   Line 59: "School administration"
   Context: 'School administration'

   Line 60: "Teacher Dashboard"
   Context: 'Teacher Dashboard'

   Line 60: "Your daily workspace"
   Context: 'Your daily workspace'

   Line 61: "Principal Dashboard"
   Context: 'Principal Dashboard'

   Line 61: "School overview and actions"
   Context: 'School overview and actions'

   Line 62: "Parent Dashboard"
   Context: 'Parent Dashboard'

   Line 62: "Track your child"
   Context: 'Track your child'

   Line 63: "Financial Dashboard"
   Context: 'Financial Dashboard'

   Line 63: "Fees and finance"
   Context: 'Fees and finance'

   Line 64: "Principal Approvals"
   Context: 'Principal Approvals'

   Line 65: "Create School Announcement"
   Context: 'Create School Announcement'

   Line 65: "Principal announcement composer"
   Context: 'Principal announcement composer'

   Line 68: "Browse students"
   Context: 'Browse students'

   Line 69: "Browse teachers"
   Context: 'Browse teachers'

   Line 72: "AI Quota Allocation"
   Context: 'AI Quota Allocation'

   Line 72: "Allocate AI usage to teachers"
   Context: 'Allocate AI usage to teachers'

   Line 73: "Review org usage and limits"
   Context: 'Review org usage and limits'

   Line 76: "Open Dash Assistant"
   Context: 'Open Dash Assistant'

   Line 76: "Chat with Dash"
   Context: 'Chat with Dash'

   Line 77: "Dash AI Settings"
   Context: 'Dash AI Settings'

   Line 78: "Advanced AI controls"
   Context: 'Advanced AI controls'

   Line 79: "Dash Conversations"
   Context: 'Dash Conversations'

   Line 82: "Email Verification"
   Context: 'Email Verification'

   Line 82: "Verify your email"
   Context: 'Verify your email'

   Line 85: "See capabilities and examples"
   Context: 'See capabilities and examples'

   Line 97: "Super Admin Dashboard"
   Context: 'Super Admin Dashboard'

   Line 97: "Global controls"
   Context: 'Global controls'

üìÑ components/ai/DashConversationsHistory.tsx:
   Line 48: "Failed to initialize Dash:"
   Context: {
        console.error('Failed to initialize Dash:', error);
        setLoading(false);
      }

   Line 70: "Failed to load conversations:"
   Context: {
      console.error('Failed to load conversations:', error);
    }

   Line 96: "Resume Conversation"
   Context: {
    const options = [
      'Resume Conversation',
      'Export Conversation',
      'Delete Conversation',
      'Cancel'
    ];

    if (Platform.OS === 'ios') {
      ActionSheetIOS.showActionSheetWithOptions(
        {
          options,
          destructiveButtonIndex: 2,
          cancelButtonIndex: 3,
        }

   Line 125: "Conversation Options"
   Context: {
      // Android alert
      Alert.alert(
        'Conversation Options',
        `What would you like to do with "${conversation.title}

   Line 153: "Delete Conversation"
   Context: {
    Alert.alert(
      'Delete Conversation',
      `Are you sure you want to delete "${conversation.title}

   Line 171: "Failed to delete conversation:"
   Context: {
              console.error('Failed to delete conversation:', error);
              Alert.alert('Error', 'Failed to delete conversation');
            }

   Line 191: "Failed to export conversation:"
   Context: {
      console.error('Failed to export conversation:', error);
      Alert.alert('Error', 'Failed to export conversation');
    }

   Line 203: "Failed to start new conversation:"
   Context: {
      console.error('Failed to start new conversation:', error);
      Alert.alert('Error', 'Failed to start new conversation');
    }

   Line 223: "No messages"
   Context: {
    const msgs = Array.isArray((conversation as any)?.messages) ? (conversation as any).messages : [];
    if (msgs.length === 0) return 'No messages';
    const lastMessage = msgs[msgs.length - 1];
    if (!lastMessage || !lastMessage.content) return 'No messages';
    const preview = String(lastMessage.content).substring(0, 60);
    return preview.length < String(lastMessage.content).length ? `${preview}

   Line 317: "Delete All Conversations"
   Context: {() => {
              Alert.alert(
                'Delete All Conversations',
                'This will permanently delete all conversations. Continue?',
                [
                  { text: 'Cancel', style: 'cancel' }

   Line 323: "Delete All"
   Context: { text: 'Delete All', style: 'destructive', onPress: async () => {
                    try {
                      if (!dashInstance) return;
                      const all = await dashInstance.getAllConversations();
                      for (const c of all) { await dashInstance.deleteConversation(c.id); }

   Line 366: "Delete Old Conversations"
   Context: {
                Alert.alert(
                  'Delete Old Conversations',
                  'Choose a cutoff:',
                  [
                    { text: '7 days', onPress: () => runDelete(7) }

   Line 49: "Failed to initialize Dash:"
   Context: console.error('Failed to initialize Dash:'

   Line 71: "Failed to load conversations:"
   Context: console.error('Failed to load conversations:'

   Line 127: "Conversation Options"
   Context: Alert.alert(
        'Conversation Options'

   Line 154: "Delete Conversation"
   Context: Alert.alert(
      'Delete Conversation'

   Line 172: "Failed to delete conversation:"
   Context: console.error('Failed to delete conversation:'

   Line 192: "Failed to export conversation:"
   Context: console.error('Failed to export conversation:'

   Line 204: "Failed to start new conversation:"
   Context: console.error('Failed to start new conversation:'

   Line 318: "Delete All Conversations"
   Context: Alert.alert(
                'Delete All Conversations'

   Line 367: "Delete Old Conversations"
   Context: Alert.alert(
                  'Delete Old Conversations'

   Line 98: "Resume Conversation"
   Context: 'Resume Conversation'

   Line 100: "Delete Conversation"
   Context: 'Delete Conversation'

   Line 128: "Conversation Options"
   Context: 'Conversation Options'

   Line 100: "Delete Conversation"
   Context: 'Delete Conversation'

   Line 173: "Failed to delete conversation"
   Context: 'Failed to delete conversation'

   Line 193: "Failed to export conversation"
   Context: 'Failed to export conversation'

   Line 205: "Failed to start new conversation"
   Context: 'Failed to start new conversation'

   Line 225: "No messages"
   Context: 'No messages'

   Line 225: "No messages"
   Context: 'No messages'

   Line 319: "Delete All Conversations"
   Context: 'Delete All Conversations'

   Line 323: "Delete All"
   Context: 'Delete All'

   Line 330: "Failed to delete all conversations"
   Context: 'Failed to delete all conversations'

   Line 352: "Failed to delete old conversations"
   Context: 'Failed to delete old conversations'

   Line 368: "Delete Old Conversations"
   Context: 'Delete Old Conversations'

üìÑ components/ai/DashFloatingButton.tsx:
   Line 82: "Failed to load FAB position:"
   Context: {
      console.error('Failed to load FAB position:', e);
    }

   Line 90: "Failed to save FAB position:"
   Context: {
      console.error('Failed to save FAB position:', e);
    }

   Line 281: "Failed to open Dash Assistant:"
   Context: {
      console.error('Failed to open Dash Assistant:', error);
    }

   Line 83: "Failed to load FAB position:"
   Context: console.error('Failed to load FAB position:'

   Line 91: "Failed to save FAB position:"
   Context: console.error('Failed to save FAB position:'

   Line 282: "Failed to open Dash Assistant:"
   Context: console.error('Failed to open Dash Assistant:'

üìÑ components/ai/DashFloatingButtonEnhanced.tsx:
   Line 130: "teacher"
   Context: {
    const role = profile?.role;
    let actions: QuickAction[] = [];

    switch (role) {
      case 'teacher':
        actions = [
          {
            id: 'create_lesson',
            title: 'Create Lesson',
            subtitle: 'Plan a new lesson',
            icon: 'book-outline',
            color: '#10B981',
            action: () => {
              setShowQuickActionsModal(false);
              // Route to existing AI lesson generator (or Lessons Hub)
              router.push('/screens/ai-lesson-generator');
            }

   Line 151: "grade_assignments"
   Context: {
            id: 'grade_assignments',
            title: 'Grade Work',
            subtitle: 'AI-assisted grading',
            icon: 'checkmark-done-outline',
            color: '#F59E0B',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/ai-homework-grader-live');
            }

   Line 164: "parent_communication"
   Context: {
            id: 'parent_communication',
            title: 'Contact Parents',
            subtitle: 'Send updates',
            icon: 'mail-outline',
            color: '#8B5CF6',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/parent-messages');
            }

   Line 177: "student_progress"
   Context: {
            id: 'student_progress',
            title: 'Track Progress',
            subtitle: 'View student data',
            icon: 'analytics-outline',
            color: '#3B82F6',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/ai-progress-analysis');
            }

   Line 195: "school_overview"
   Context: {
            id: 'school_overview',
            title: 'School Overview',
            subtitle: 'Daily dashboard',
            icon: 'school-outline',
            color: '#059669',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/principal-dashboard');
            }

   Line 208: "staff_management"
   Context: {
            id: 'staff_management',
            title: 'Staff Management',
            subtitle: 'Manage teachers',
            icon: 'people-outline',
            color: '#DC2626',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/staff-management');
            }

   Line 221: "financial_reports"
   Context: {
            id: 'financial_reports',
            title: 'Financial Reports',
            subtitle: 'View finances',
            icon: 'bar-chart-outline',
            color: '#7C3AED',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/financial-dashboard');
            }

   Line 234: "enrollment"
   Context: {
            id: 'enrollment',
            title: 'Student Enrollment',
            subtitle: 'Enroll new students',
            icon: 'person-add-outline',
            color: '#F59E0B',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/student-enrollment');
            }

   Line 252: "homework_help"
   Context: {
            id: 'homework_help',
            title: 'Homework Help',
            subtitle: 'Get AI assistance',
            icon: 'help-circle-outline',
            color: '#10B981',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/ai-homework-helper');
            }

   Line 265: "child_progress"
   Context: {
            id: 'child_progress',
            title: 'Child Progress',
            subtitle: 'View reports',
            icon: 'trending-up-outline',
            color: '#3B82F6',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/child-progress');
            }

   Line 278: "school_communication"
   Context: {
            id: 'school_communication',
            title: 'School Messages',
            subtitle: 'View announcements',
            icon: 'chatbubbles-outline',
            color: '#8B5CF6',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/parent-communication');
            }

   Line 291: "calendar"
   Context: {
            id: 'calendar',
            title: 'School Calendar',
            subtitle: 'View events',
            icon: 'calendar-outline',
            color: '#F59E0B',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/screens/school-calendar');
            }

   Line 309: "dashboard"
   Context: {
            id: 'dashboard',
            title: 'Dashboard',
            subtitle: 'Go to main screen',
            icon: 'grid-outline',
            color: '#6B7280',
            action: () => {
              setShowQuickActionsModal(false);
              router.push('/');
            }

   Line 329: "teacher"
   Context: {
    try {
      const suggestions: ProactiveSuggestion[] = [];
      const currentHour = new Date().getHours();
      const role = profile?.role;

      // Time-based suggestions
      if (role === 'teacher' && currentHour >= 8 && currentHour <= 16) {
        if (activeTasks.length === 0) {
          suggestions.push({
            id: 'morning_prep',
            title: 'Plan Your Day',
            description: 'Would you like me to help organize today\'s lessons and tasks?',
            type: 'task',
            urgency: 'medium',
            action: () => {
              setShowSuggestions(false);
              router.push('/screens/dash-assistant?initialMessage=Help me plan my teaching day');
            }

   Line 353: "daily_briefing"
   Context: {
        suggestions.push({
          id: 'daily_briefing',
          title: 'Daily Briefing Available',
          description: 'Get your school\'s daily overview and key metrics',
          type: 'insight',
          urgency: 'high',
          action: () => {
            setShowSuggestions(false);
            router.push('/screens/dash-assistant?initialMessage=Show me today\'s school briefing');
          }

   Line 368: "homework_check"
   Context: {
        suggestions.push({
          id: 'homework_check',
          title: 'Homework Time',
          description: 'Would you like help checking your child\'s homework?',
          type: 'task',
          urgency: 'medium',
          action: () => {
            setShowSuggestions(false);
            router.push('/screens/ai-homework-helper');
          }

   Line 384: "task_overflow"
   Context: {
        suggestions.push({
          id: 'task_overflow',
          title: 'Busy Schedule Detected',
          description: `You have ${activeTasks.length}

   Line 400: "pending_reminders"
   Context: {
        suggestions.push({
          id: 'pending_reminders',
          title: 'Active Reminders',
          description: 'You have pending reminders that need attention',
          type: 'reminder',
          urgency: 'high',
          action: () => {
            setShowSuggestions(false);
            // Show reminders modal or navigate to task manager
          }

   Line 463: "Failed to handle button press:"
   Context: {
      console.error('Failed to handle button press:', error);
    }

   Line 478: "Failed to handle long press:"
   Context: {
      console.error('Failed to handle long press:', error);
    }

   Line 704: "task"
   Context: {suggestion.type === 'task' ? 'Start Task' :
                       suggestion.type === 'reminder' ? 'View Reminder' :
                       suggestion.type === 'insight' ? 'View Insight' : 'Automate'}

   Line 464: "Failed to handle button press:"
   Context: console.error('Failed to handle button press:'

   Line 479: "Failed to handle long press:"
   Context: console.error('Failed to handle long press:'

   Line 139: "Create Lesson"
   Context: 'Create Lesson'

   Line 140: "Plan a new lesson"
   Context: 'Plan a new lesson'

   Line 153: "Grade Work"
   Context: 'Grade Work'

   Line 166: "Contact Parents"
   Context: 'Contact Parents'

   Line 167: "Send updates"
   Context: 'Send updates'

   Line 179: "Track Progress"
   Context: 'Track Progress'

   Line 197: "School Overview"
   Context: 'School Overview'

   Line 198: "Daily dashboard"
   Context: 'Daily dashboard'

   Line 210: "Staff Management"
   Context: 'Staff Management'

   Line 211: "Manage teachers"
   Context: 'Manage teachers'

   Line 223: "Financial Reports"
   Context: 'Financial Reports'

   Line 236: "Student Enrollment"
   Context: 'Student Enrollment'

   Line 237: "Enroll new students"
   Context: 'Enroll new students'

   Line 254: "Homework Help"
   Context: 'Homework Help'

   Line 255: "Get AI assistance"
   Context: 'Get AI assistance'

   Line 267: "Child Progress"
   Context: 'Child Progress'

   Line 280: "School Messages"
   Context: 'School Messages'

   Line 293: "School Calendar"
   Context: 'School Calendar'

   Line 312: "Go to main screen"
   Context: 'Go to main screen'

   Line 340: "Plan Your Day"
   Context: 'Plan Your Day'

   Line 356: "Daily Briefing Available"
   Context: 'Daily Briefing Available'

   Line 371: "Homework Time"
   Context: 'Homework Time'

   Line 387: "Busy Schedule Detected"
   Context: 'Busy Schedule Detected'

   Line 403: "Active Reminders"
   Context: 'Active Reminders'

   Line 404: "You have pending reminders that need attention"
   Context: 'You have pending reminders that need attention'

   Line 704: "Start Task"
   Context: 'Start Task'

üìÑ components/ai/DashWakeWordListener.tsx:
   Line 11: "Hello Dash"
   Context: "Hello Dash"

   Line 11: "Hello Dash"
   Context: "Hello Dash"

üìÑ components/ai/EnhancedInputArea.tsx:
   Line 43: "Message Dash..."
   Context: { placeholder = 'Message Dash...', sending = false, onSend, onAttachmentsChange, onVoiceStart, onVoiceEnd, onVoiceLock, onVoiceCancel, voiceState, isVoiceLocked, voiceTimerMs }

   Line 46: "Voice start error:"
   Context: { console.error('Voice start error:', e); }

   Line 50: "Voice end error:"
   Context: { console.error('Voice end error:', e); }

   Line 54: "Voice lock error:"
   Context: { console.error('Voice lock error:', e); }

   Line 46: "Voice start error:"
   Context: console.error('Voice start error:'

   Line 50: "Voice end error:"
   Context: console.error('Voice end error:'

   Line 54: "Voice lock error:"
   Context: console.error('Voice lock error:'

üìÑ components/ai/StreamingIndicator.tsx:
   Line 17: "Thinking..."
   Context: {
  showThinking = false,
  thinkingText = 'Thinking...',
}

üìÑ components/ai/UltraVoiceRecorder.tsx:
   Line 85: "Voice pipeline pre-warm failed"
   Context: {
        logger.warn('Voice pipeline pre-warm failed', error);
      }

   Line 210: "Transcription failed"
   Context: {
      logger.error('Transcription failed', error);
      setState(prev => ({ ...prev, isProcessing: false }

   Line 321: "Processing..."
   Context: {state.isProcessing ? 'Processing...' : 'Transcription:'}

   Line 153: "Failed to start recording"
   Context: 'Failed to start recording'

   Line 189: "Failed to stop recording"
   Context: 'Failed to stop recording'

   Line 201: "This is a sample transcription from Dash AI"
   Context: "This is a sample transcription from Dash AI"

   Line 211: "Transcription failed"
   Context: 'Transcription failed'

   Line 415: "UltraVoiceRecorder"
   Context: 'UltraVoiceRecorder'

   Line 153: "Failed to start recording"
   Context: new Error('Failed to start recording'

   Line 189: "Failed to stop recording"
   Context: new Error('Failed to stop recording'

üìÑ components/ai/UpgradePromptModal.tsx:
   Line 102: "multimodal.vision"
   Context: {
  // Convert 'multimodal.vision' to 'Image Analysis'
  const nameMap: Record<string, string> = {
    'chat.streaming': 'Real-time Streaming',
    'chat.thinking': 'AI Reasoning Display',
    'chat.priority': 'Priority Processing',
    'memory.standard': '30-Day Conversation History',
    'memory.advanced': 'Unlimited History & Learning',
    'memory.patterns': 'Pattern Detection',
    'multimodal.vision': 'Image Analysis',
    'multimodal.ocr': 'Text Extraction',
    'multimodal.documents': 'Document Processing',
    'multimodal.handwriting': 'Handwriting Recognition',
    'homework.assign': 'Homework Assignment',
    'homework.grade.basic': 'Auto-Grading (Objective)',
    'homework.grade.advanced': 'Auto-Grading (Essays)',
    'homework.grade.bulk': 'Batch Grading',
    'homework.rubric': 'Rubric Generation',
    'homework.feedback': 'Personalized Feedback',
    'lessons.curriculum': 'Curriculum-Aligned Lessons',
    'lessons.adaptive': 'Adaptive Learning',
    'lessons.personalized': 'Personalized Lessons',
    'insights.proactive': 'Daily Briefings',
    'insights.predictive': 'Predictive Analytics',
    'insights.custom': 'Custom Reports',
    'export.pdf.advanced': 'Advanced PDF Templates',
    'processing.priority': 'Priority Queue Access',
  }

   Line 103: "Image Analysis"
   Context: 'Image Analysis'

   Line 106: "AI Reasoning Display"
   Context: 'AI Reasoning Display'

   Line 107: "Priority Processing"
   Context: 'Priority Processing'

   Line 110: "Pattern Detection"
   Context: 'Pattern Detection'

   Line 103: "Image Analysis"
   Context: 'Image Analysis'

   Line 113: "Document Processing"
   Context: 'Document Processing'

   Line 114: "Handwriting Recognition"
   Context: 'Handwriting Recognition'

   Line 115: "Homework Assignment"
   Context: 'Homework Assignment'

   Line 118: "Batch Grading"
   Context: 'Batch Grading'

   Line 119: "Rubric Generation"
   Context: 'Rubric Generation'

   Line 120: "Personalized Feedback"
   Context: 'Personalized Feedback'

   Line 122: "Adaptive Learning"
   Context: 'Adaptive Learning'

   Line 123: "Personalized Lessons"
   Context: 'Personalized Lessons'

   Line 124: "Daily Briefings"
   Context: 'Daily Briefings'

   Line 125: "Predictive Analytics"
   Context: 'Predictive Analytics'

   Line 126: "Custom Reports"
   Context: 'Custom Reports'

   Line 127: "Advanced PDF Templates"
   Context: 'Advanced PDF Templates'

   Line 128: "Priority Queue Access"
   Context: 'Priority Queue Access'

üìÑ components/ai/VoiceDock.tsx:
   Line 81: "Listening (locked)‚Ä¶"
   Context: {vc.isLocked ? 'Listening (locked)‚Ä¶' : 'Listening‚Ä¶'}

   Line 59: "Stop listening"
   Context: accessibilityLabel="Stop listening"

   Line 63: "Stop speaking"
   Context: accessibilityLabel="Stop speaking"

   Line 72: "Hold to talk. Release to send. Long‚Äëpress to lock."
   Context: accessibilityLabel="Hold to talk. Release to send. Long‚Äëpress to lock."

   Line 59: "Stop listening"
   Context: "Stop listening"

   Line 63: "Stop speaking"
   Context: "Stop speaking"

üìÑ components/ai/VoiceRecorderSheet.tsx:
   Line 26: "Preparing..."
   Context: { defaultValue: 'Preparing...' }

   Line 86: "Stopping recording..."
   Context: { defaultValue: 'Stopping recording...' }

   Line 93: "validating"
   Context: {
        setProgressPercent(percent);
        switch (stage) {
          case 'validating':
            setProgressPhase(t('voice.recording.validating_audio', { defaultValue: 'Validating audio...' }

   Line 100: "Uploading to cloud..."
   Context: { defaultValue: 'Uploading to cloud...' }

   Line 103: "Transcribing speech..."
   Context: { defaultValue: 'Transcribing speech...' }

   Line 106: "Done!"
   Context: { defaultValue: 'Done!' }

   Line 121: "[VoiceRecorderSheet] Failed to stop/transcribe"
   Context: {
      console.error('[VoiceRecorderSheet] Failed to stop/transcribe', e);
      const errorMsg = e instanceof Error ? e.message : t('voice.recording.failed_process', { defaultValue: 'Failed to process voice recording' }

   Line 138: "[VoiceRecorderSheet] Send failed"
   Context: {
      console.error('[VoiceRecorderSheet] Send failed', e);
      const errorMsg = e instanceof Error ? e.message : t('voice.recording.failed_send', { defaultValue: 'Failed to send message' }

   Line 148: "recording"
   Context: {
    setPhase('recording');
    setAudioUri(null);
    setTranscript('');
    setTimer(0);
    setSending(false);
    setError(null);
    setProgressPhase(t('voice.recording.starting', { defaultValue: 'Preparing...' }

   Line 182: "[VoiceRecorderSheet] Failed to retry recording"
   Context: {
      console.error('[VoiceRecorderSheet] Failed to retry recording', e);
      setError(e instanceof Error ? e.message : t('voice.errors.failed_start', { defaultValue: 'Failed to start recording' }

   Line 199: "recording"
   Context: {phase === 'recording' ? t('voice.recording.listening', { defaultValue: 'Listening‚Ä¶' }

   Line 199: "Transcribing‚Ä¶"
   Context: { defaultValue: 'Transcribing‚Ä¶' }

   Line 213: "voice.recording.stop_recording_label"
   Context: {t('voice.recording.stop_recording_label', { defaultValue: 'Stop recording' }

   Line 235: "voice.recording.no_speech_detected"
   Context: {transcript || t('voice.recording.no_speech_detected', { defaultValue: 'No speech detected.' }

   Line 239: "voice.recording.discard"
   Context: {t('voice.recording.discard', { defaultValue: 'Discard' }

   Line 243: "voice.recording.sending"
   Context: {sending ? t('voice.recording.sending', { defaultValue: 'Sending‚Ä¶' }

   Line 253: "voice.recording.something_wrong"
   Context: {error || t('voice.recording.something_wrong', { defaultValue: 'Something went wrong' }

   Line 258: "cancel"
   Context: {t('cancel', { defaultValue: 'Cancel' }

   Line 262: "voice.recording.try_again"
   Context: {t('voice.recording.try_again', { defaultValue: 'Try Again' }

   Line 123: "Failed to process voice recording"
   Context: 'Failed to process voice recording'

   Line 140: "Failed to send message"
   Context: 'Failed to send message'

   Line 184: "Failed to start recording"
   Context: 'Failed to start recording'

   Line 213: "Stop recording"
   Context: 'Stop recording'

   Line 253: "Something went wrong"
   Context: 'Something went wrong'

   Line 262: "Try Again"
   Context: 'Try Again'

üìÑ components/ai/VoiceRecordingModal.tsx:
   Line 191: "voice.errors.cancel_error"
   Context: {
      console.error(t('voice.errors.cancel_error', { defaultValue: 'Cancel error' }

   Line 196: "T close the modal immediately - let it stay open during transcription
      // The modal will close automatically when vc.state changes from "
   Context: {
    try {
      // DON'T close the modal immediately - let it stay open during transcription
      // The modal will close automatically when vc.state changes from 'listening'
      await vc.release();
      resetAnimations();
      // onClose(); // Removed - modal closes via visible prop when state changes
    }

   Line 203: "voice.errors.send_error"
   Context: {
      console.error(t('voice.errors.send_error', { defaultValue: 'Send error' }

   Line 284: "voice.recording.slide_up_lock"
   Context: {t('voice.recording.slide_up_lock', { defaultValue: 'Slide up to lock' }

   Line 296: "transcribing"
   Context: {vc.state === 'transcribing' ? t('voice.recording.transcribing', { defaultValue: 'Transcribing...' }

   Line 296: "Thinking..."
   Context: { defaultValue: 'Thinking...' }

   Line 300: "voice.recording.starting"
   Context: {t('voice.recording.starting', { defaultValue: 'Starting...' }

   Line 349: "voice.recording.hold_to_record"
   Context: {t('voice.recording.hold_to_record', { defaultValue: 'Hold to record ‚Ä¢ Slide up to lock' }

   Line 359: "voice.recording.recording_locked"
   Context: {t('voice.recording.recording_locked', { defaultValue: 'Recording Locked' }

   Line 192: "Cancel error"
   Context: 'Cancel error'

   Line 204: "Send error"
   Context: 'Send error'

   Line 284: "Slide up to lock"
   Context: 'Slide up to lock'

   Line 359: "Recording Locked"
   Context: 'Recording Locked'

üìÑ components/auth/AuthProgressIndicator.tsx:
   Line 26: "role_selection"
   Context: {
  role_selection: {
    key: 'role_selection',
    title: 'Select Role',
    description: 'Choose your role in the educational system',
    required: true
  }

   Line 33: "personal_info"
   Context: {
    key: 'personal_info',
    title: 'Personal Information',
    description: 'Enter your basic details',
    required: true
  }

   Line 39: "organization_setup"
   Context: {
    key: 'organization_setup',
    title: 'Organization Setup',
    description: 'Configure your institution details',
    required: true
  }

   Line 45: "security_setup"
   Context: {
    key: 'security_setup',
    title: 'Security Setup',
    description: 'Create a strong password',
    required: true
  }

   Line 51: "email_verification"
   Context: {
    key: 'email_verification',
    title: 'Email Verification',
    description: 'Verify your email address',
    required: true
  }

   Line 57: "profile_completion"
   Context: {
    key: 'profile_completion',
    title: 'Complete Profile',
    description: 'Finish setting up your profile',
    required: false
  }

   Line 63: "onboarding"
   Context: {
    key: 'onboarding',
    title: 'Welcome Tour',
    description: 'Learn how to use the platform',
    required: false
  }

   Line 29: "Select Role"
   Context: 'Select Role'

   Line 30: "Choose your role in the educational system"
   Context: 'Choose your role in the educational system'

   Line 35: "Personal Information"
   Context: 'Personal Information'

   Line 36: "Enter your basic details"
   Context: 'Enter your basic details'

   Line 41: "Organization Setup"
   Context: 'Organization Setup'

   Line 42: "Configure your institution details"
   Context: 'Configure your institution details'

   Line 47: "Security Setup"
   Context: 'Security Setup'

   Line 48: "Create a strong password"
   Context: 'Create a strong password'

   Line 53: "Email Verification"
   Context: 'Email Verification'

   Line 54: "Verify your email address"
   Context: 'Verify your email address'

   Line 59: "Complete Profile"
   Context: 'Complete Profile'

   Line 60: "Finish setting up your profile"
   Context: 'Finish setting up your profile'

   Line 65: "Welcome Tour"
   Context: 'Welcome Tour'

   Line 66: "Learn how to use the platform"
   Context: 'Learn how to use the platform'

üìÑ components/auth/BiometricSetup.tsx:
   Line 56: "Error checking biometric capabilities:"
   Context: {
      console.error('Error checking biometric capabilities:', error);
      setBiometricSupported(false);
      setBiometricEnrolled(false);
    }

   Line 63: "common.error"
   Context: {
    if (!user?.id || !user?.email) {
      Alert.alert(
        t('common.error'),
        'User information not available. Please try again.',
        [{ text: t('common.ok') }

   Line 81: "Could not fetch profile for biometric setup:"
   Context: {
        console.warn('Could not fetch profile for biometric setup:', profileError);
      }

   Line 95: "Error enabling biometric:"
   Context: {
      console.error('Error enabling biometric:', error);
      Alert.alert(
        t('common.error'),
        'Failed to enable biometric authentication. Please try again.',
        [{ text: t('common.ok') }

   Line 107: "Face ID"
   Context: {
    if (availableTypes.includes('Face ID')) return 'scan';
    if (availableTypes.includes('Fingerprint')) return 'finger-print';
    return 'shield-checkmark';
  }

   Line 113: "Face ID"
   Context: {
    if (availableTypes.includes('Face ID')) return t('settings.biometric.faceId');
    if (availableTypes.includes('Fingerprint')) return t('settings.biometric.fingerprint');
    return t('settings.biometric.title');
  }

   Line 123: "Sign in quickly and securely using Face ID. Your biometric data stays on your device and is never shared."
   Context: {
      return 'Sign in quickly and securely using Face ID. Your biometric data stays on your device and is never shared.';
    }

   Line 255: "Biometric authentication is not available on this device."
   Context: {!biometricSupported 
                  ? 'Biometric authentication is not available on this device.'
                  : 'Please set up fingerprint or face recognition in your device settings first, then try again.'
                }

   Line 57: "Error checking biometric capabilities:"
   Context: console.error('Error checking biometric capabilities:'

   Line 82: "Could not fetch profile for biometric setup:"
   Context: console.warn('Could not fetch profile for biometric setup:'

   Line 96: "Error enabling biometric:"
   Context: console.error('Error enabling biometric:'

   Line 108: "Face ID"
   Context: 'Face ID'

   Line 108: "Face ID"
   Context: 'Face ID'

   Line 108: "Face ID"
   Context: 'Face ID'

üìÑ components/auth/EnhancedRegistrationForm.tsx:
   Line 161: "firstName"
   Context: {
    const fieldErrors: string[] = [];
    
    switch (fieldName) {
      case 'firstName': {
        const firstNameValidation = AuthValidation.validateName(value, 'First name');
        if (!firstNameValidation.isValid) {
          fieldErrors.push(...firstNameValidation.errors);
        }

   Line 173: "Last name"
   Context: {
        const lastNameValidation = AuthValidation.validateName(value, 'Last name');
        if (!lastNameValidation.isValid) {
          fieldErrors.push(...lastNameValidation.errors);
        }

   Line 214: "You must accept the terms and conditions"
   Context: {
          fieldErrors.push('You must accept the terms and conditions');
        }

   Line 266: "Job title is required"
   Context: {
          stepErrors.jobTitle = ['Job title is required'];
          isValid = false;
        }

   Line 280: "Invalid password"
   Context: {
        // Password validation
        if (!passwordValidation?.isValid) {
          stepErrors.password = passwordValidation?.errors || ['Invalid password'];
          isValid = false;
        }

   Line 295: "You must accept the terms and conditions"
   Context: {
          stepErrors.acceptTerms = ['You must accept the terms and conditions'];
          isValid = false;
        }

   Line 314: "Validation Error"
   Context: {
    if (!validateCurrentStep()) {
      Alert.alert(
        'Validation Error',
        'Please correct the errors before continuing.',
        [{ text: 'OK' }

   Line 428: "Registration submission error:"
   Context: {
      console.error('Registration submission error:', error);
      onError?.(error instanceof Error ? error.message : 'Registration failed');
    }

   Line 476: "firstName"
   Context: {renderTextField('firstName', 'First Name', 'John', true)}

   Line 479: "lastName"
   Context: {renderTextField('lastName', 'Last Name', 'Doe', true)}

   Line 483: "email"
   Context: {renderTextField('email', 'Email Address', 'john.doe@example.com', true, 'email-address')}

   Line 484: "phone"
   Context: {renderTextField('phone', 'Phone Number', '(555) 123-4567', false, 'phone-pad')}

   Line 508: "invitationCode"
   Context: {renderTextField('invitationCode', 'Invitation Code', 'ABC12345', false, 'default')}

   Line 512: "principal"
   Context: {role === 'principal' && (
          <>
            {renderTextField('jobTitle', 'Job Title', 'Principal', true)}

   Line 515: "yearsExperience"
   Context: {renderTextField('yearsExperience', 'Years of Experience', '10', false, 'numeric')}

   Line 519: "teacher"
   Context: {role === 'teacher' && !invitationToken && (
          <>
            {renderMultiSelect('subjects', 'Subjects', SUBJECTS)}

   Line 522: "gradeLevel"
   Context: {renderMultiSelect('gradeLevel', 'Grade Levels', GRADE_LEVELS)}

   Line 523: "bio"
   Context: {renderTextArea('bio', 'Professional Bio', 'Tell us about your teaching experience...')}

   Line 527: "student"
   Context: {role === 'student' && (
          <>
            {renderSelect('grade', 'Grade Level', GRADE_LEVELS)}

   Line 530: "parentEmail"
   Context: {renderTextField('parentEmail', 'Parent/Guardian Email', 'parent@example.com', false, 'email-address')}

   Line 531: "schoolCode"
   Context: {renderTextField('schoolCode', 'School Code (if provided)', 'SCH123', false)}

   Line 574: "password"
   Context: {renderPasswordField('password', 'Password', true)}

   Line 588: "confirmPassword"
   Context: {renderPasswordField('confirmPassword', 'Confirm Password', true)}

   Line 1034: "Complete Registration"
   Context: {isLastStep ? 'Complete Registration' : 'Continue'}

   Line 316: "Validation Error"
   Context: Alert.alert(
        'Validation Error'

   Line 429: "Registration submission error:"
   Context: console.error('Registration submission error:'

   Line 100: "Computer Science"
   Context: 'Computer Science'

   Line 101: "Physical Education"
   Context: 'Physical Education'

   Line 101: "Foreign Language"
   Context: 'Foreign Language'

   Line 101: "Social Studies"
   Context: 'Social Studies'

   Line 166: "First name"
   Context: 'First name'

   Line 174: "Last name"
   Context: 'Last name'

   Line 215: "You must accept the terms and conditions"
   Context: 'You must accept the terms and conditions'

   Line 267: "Job title is required"
   Context: 'Job title is required'

   Line 283: "Invalid password"
   Context: 'Invalid password'

   Line 215: "You must accept the terms and conditions"
   Context: 'You must accept the terms and conditions'

   Line 317: "Validation Error"
   Context: 'Validation Error'

   Line 430: "Registration failed"
   Context: 'Registration failed'

   Line 476: "First Name"
   Context: 'First Name'

   Line 479: "Last Name"
   Context: 'Last Name'

   Line 483: "Email Address"
   Context: 'Email Address'

   Line 484: "Phone Number"
   Context: 'Phone Number'

   Line 508: "Invitation Code"
   Context: 'Invitation Code'

   Line 514: "Job Title"
   Context: 'Job Title'

   Line 515: "Years of Experience"
   Context: 'Years of Experience'

   Line 522: "Grade Levels"
   Context: 'Grade Levels'

   Line 523: "Professional Bio"
   Context: 'Professional Bio'

   Line 529: "Grade Level"
   Context: 'Grade Level'

   Line 588: "Confirm Password"
   Context: 'Confirm Password'

   Line 1034: "Complete Registration"
   Context: 'Complete Registration'

üìÑ components/auth/EnhancedSignIn.tsx:
   Line 62: "google"
   Context: {
    provider: 'google',
    title: 'Continue with Google',
    icon: 'üîç',
    backgroundColor: '#FFFFFF',
    textColor: '#1F2937'
  }

   Line 69: "apple"
   Context: {
    provider: 'apple',
    title: 'Continue with Apple',
    icon: 'üçé',
    backgroundColor: '#000000',
    textColor: '#FFFFFF'
  }

   Line 76: "microsoft"
   Context: {
    provider: 'microsoft',
    title: 'Continue with Microsoft',
    icon: 'üè¢',
    backgroundColor: '#0078D4',
    textColor: '#FFFFFF'
  }

   Line 171: "Error checking biometric status:"
   Context: {
      console.error("Error checking biometric status:", error);
    }

   Line 185: "Email is required"
   Context: {
      errors.email = ['Email is required'];
    }

   Line 187: "Please enter a valid email address"
   Context: {
      errors.email = ['Please enter a valid email address'];
    }

   Line 191: "Password is required"
   Context: {
      errors.password = ['Password is required'];
    }

   Line 193: "Password must be at least 6 characters"
   Context: {
      errors.password = ['Password must be at least 6 characters'];
    }

   Line 197: "Verification code is required"
   Context: {
      errors.mfaCode = ['Verification code is required'];
    }

   Line 199: "Verification code must be 6 digits"
   Context: {
      errors.mfaCode = ['Verification code must be 6 digits'];
    }

   Line 217: "Enter your email and password."
   Context: {
      setError("Enter your email and password.");
      return;
    }

   Line 231: "Failed to sign in."
   Context: {
        throw new Error(authError || "Failed to sign in.");
      }

   Line 238: "../../lib/rbac"
   Context: {
        const effectiveProfile = profile ?? (await (await import('../../lib/rbac')).fetchEnhancedUserProfile(session.user_id));
        await EnhancedBiometricAuth.storeBiometricSession(
          session.user_id,
          session.email!,
          effectiveProfile as any
        );
        console.log('Stored biometric session data for future use');
      }

   Line 246: "Error storing biometric session data:"
   Context: {
        console.error('Error storing biometric session data:', sessionError);
      }

   Line 258: "Account Locked"
   Context: {
      const newAttempts = loginAttempts + 1;
      setLoginAttempts(newAttempts);
      
      // Lock account after 5 failed attempts
      if (newAttempts >= 5) {
        setIsLocked(true);
        setLockoutTime(new Date(Date.now() + 15 * 60 * 1000)); // 15 minutes
        Alert.alert(
          'Account Locked',
          'Too many failed attempts. Your account has been locked for 15 minutes.'
        );
      }

   Line 281: "Biometric Authentication"
   Context: {
    if (!biometricAvailable || !biometricEnabled) {
      Alert.alert(
        "Biometric Authentication",
        "Biometric authentication is not available or enabled"
      );
      return;
    }

   Line 290: "Biometric authentication failed"
   Context: {
      setIsLoading(true);
      setError(null);
      
      const result = await EnhancedBiometricAuth.authenticateWithBiometric();
      
      if (!result.success) {
        setError(result.error || "Biometric authentication failed");
        return;
      }

   Line 301: "Biometric authentication successful"
   Context: {
        console.log('Biometric authentication successful');
        router.replace("/profiles-gate");
      }

   Line 304: "Session expired. Please sign in with your password."
   Context: {
        setError("Session expired. Please sign in with your password.");
        await EnhancedBiometricAuth.clearBiometricSession();
        await BiometricAuthService.disableBiometric();
      }

   Line 309: "Biometric authentication error:"
   Context: {
      console.error("Biometric authentication error:", error);
      setError("Biometric login failed. Please try password login.");
    }

   Line 324: "Enter your email first."
   Context: {
      setError("Enter your email first.");
      return;
    }

   Line 350: "Enter the email and the 6-digit code."
   Context: {
      setError("Enter the email and the 6-digit code.");
      return;
    }

   Line 373: "Social Login"
   Context: {
    Alert.alert(
      'Social Login',
      `${provider}

   Line 388: "Password Recovery"
   Context: {
      Alert.alert(
        'Password Recovery',
        'Password recovery functionality is not implemented in this demo'
      );
    }

   Line 421: "totp"
   Context: {mfaMethod === 'totp' 
              ? 'Enter the 6-digit code from your authenticator app'
              : 'Enter the 6-digit code sent to your phone'
            }

   Line 463: "Code Sent"
   Context: {() => Alert.alert('Code Sent', 'A new verification code has been sent.')}

   Line 562: "fingerprint"
   Context: {biometricType === 'fingerprint' ? 'Use Fingerprint' :
                     biometricType === 'face' ? 'Use Face ID' :
                     'Use Biometric Login'}

   Line 775: "password"
   Context: {mode === "password" ? 
                  (requiresMFA ? 'Verify & Sign In' : 'Sign In') :
                  (sent ? 'Verify & Sign In' : 'Send Code')
                }

   Line 697: "Enter your password"
   Context: placeholder="Enter your password"

   Line 172: "Error checking biometric status:"
   Context: console.error("Error checking biometric status:"

   Line 235: "Password login successful for:"
   Context: console.log('Password login successful for:'

   Line 245: "Stored biometric session data for future use"
   Context: console.log('Stored biometric session data for future use'

   Line 247: "Error storing biometric session data:"
   Context: console.error('Error storing biometric session data:'

   Line 266: "Account Locked"
   Context: Alert.alert(
          'Account Locked'

   Line 283: "Biometric Authentication"
   Context: Alert.alert(
        "Biometric Authentication"

   Line 302: "Biometric authentication successful"
   Context: console.log('Biometric authentication successful'

   Line 310: "Biometric authentication error:"
   Context: console.error("Biometric authentication error:"

   Line 374: "Social Login"
   Context: Alert.alert(
      'Social Login'

   Line 389: "Password Recovery"
   Context: Alert.alert(
        'Password Recovery'

   Line 463: "Code Sent"
   Context: Alert.alert('Code Sent'

   Line 64: "Continue with Google"
   Context: 'Continue with Google'

   Line 71: "Continue with Apple"
   Context: 'Continue with Apple'

   Line 78: "Continue with Microsoft"
   Context: 'Continue with Microsoft'

   Line 155: "Face ID"
   Context: 'Face ID'

   Line 157: "Iris Scan"
   Context: 'Iris Scan'

   Line 186: "Email is required"
   Context: 'Email is required'

   Line 188: "Please enter a valid email address"
   Context: 'Please enter a valid email address'

   Line 192: "Password is required"
   Context: 'Password is required'

   Line 198: "Verification code is required"
   Context: 'Verification code is required'

   Line 245: "Stored biometric session data for future use"
   Context: 'Stored biometric session data for future use'

   Line 267: "Account Locked"
   Context: 'Account Locked'

   Line 284: "Biometric Authentication"
   Context: "Biometric Authentication"

   Line 285: "Biometric authentication is not available or enabled"
   Context: "Biometric authentication is not available or enabled"

   Line 297: "Biometric authentication failed"
   Context: "Biometric authentication failed"

   Line 302: "Biometric authentication successful"
   Context: 'Biometric authentication successful'

   Line 375: "Social Login"
   Context: 'Social Login'

   Line 390: "Password Recovery"
   Context: 'Password Recovery'

   Line 391: "Password recovery functionality is not implemented in this demo"
   Context: 'Password recovery functionality is not implemented in this demo'

   Line 463: "Code Sent"
   Context: 'Code Sent'

   Line 562: "Use Fingerprint"
   Context: 'Use Fingerprint'

   Line 563: "Use Face ID"
   Context: 'Use Face ID'

   Line 564: "Use Biometric Login"
   Context: 'Use Biometric Login'

   Line 697: "Enter your password"
   Context: "Enter your password"

   Line 776: "Sign In"
   Context: 'Sign In'

   Line 777: "Send Code"
   Context: 'Send Code'

üìÑ components/auth/InvitationManager.tsx:
   Line 317: "failed"
   Context: {
        results.push({ 
          ...invitation, 
          status: 'failed',
          error: error instanceof Error ? error.message : 'Unknown error'
        }

   Line 323: "failed"
   Context: {
          const updated = [...prev];
          updated[i] = { 
            ...updated[i], 
            status: 'failed',
            error: error instanceof Error ? error.message : 'Unknown error'
          }

   Line 544: "teacher"
   Context: {invitationType === 'teacher' 
            ? 'Required columns: email, name, subjects, grades\nSubjects and grades should be separated by semicolons (;)'
            : 'Required columns: email, name, student_name, student_id (optional)'
          }

   Line 661: "teacher"
   Context: {invitationType === 'teacher' ? 'Teacher' : 'Parent'}

   Line 569: "Paste your CSV data here..."
   Context: placeholder="Paste your CSV data here..."

   Line 64: "Computer Science"
   Context: 'Computer Science'

   Line 65: "Physical Education"
   Context: 'Physical Education'

   Line 65: "Foreign Language"
   Context: 'Foreign Language'

   Line 65: "Social Studies"
   Context: 'Social Studies'

   Line 321: "Unknown error"
   Context: 'Unknown error'

   Line 321: "Unknown error"
   Context: 'Unknown error'

üìÑ components/auth/OrganizationSetup.tsx:
   Line 29: "elementary_school"
   Context: {
    value: 'elementary_school',
    label: 'Elementary School',
    description: 'Grades K-5 or equivalent'
  }

   Line 34: "middle_school"
   Context: {
    value: 'middle_school',
    label: 'Middle School',
    description: 'Grades 6-8 or equivalent'
  }

   Line 39: "high_school"
   Context: {
    value: 'high_school',
    label: 'High School',
    description: 'Grades 9-12 or equivalent'
  }

   Line 44: "k12_school"
   Context: {
    value: 'k12_school',
    label: 'K-12 School',
    description: 'All grades from Kindergarten to Grade 12'
  }

   Line 49: "university"
   Context: {
    value: 'university',
    label: 'University/College',
    description: 'Higher education institution'
  }

   Line 54: "training_center"
   Context: {
    value: 'training_center',
    label: 'Training Center',
    description: 'Professional or vocational training'
  }

   Line 59: "other"
   Context: {
    value: 'other',
    label: 'Other',
    description: 'Other type of educational institution'
  }

   Line 104: "name"
   Context: {
    switch (fieldName) {
      case 'name':
        return AuthValidation.validateName(value, 'Organization name');
      case 'phone':
        return value ? AuthValidation.validatePhone(value) : { isValid: true, errors: [] }

   Line 111: "Street address is required"
   Context: { isValid: false, errors: ['Street address is required'] }

   Line 113: "City is required"
   Context: { isValid: false, errors: ['City is required'] }

   Line 115: "State is required"
   Context: { isValid: false, errors: ['State is required'] }

   Line 120: "Please enter a valid ZIP code"
   Context: { isValid: false, errors: ['Please enter a valid ZIP code'] }

   Line 135: "Please enter a valid student capacity"
   Context: { isValid: false, errors: ['Please enter a valid student capacity'] }

   Line 143: "Please enter a valid established year"
   Context: { isValid: false, errors: ['Please enter a valid established year'] }

   Line 215: "Validation Error"
   Context: {
      Alert.alert(
        'Validation Error',
        'Please correct the errors in the form before continuing.',
        [{ text: 'OK' }

   Line 451: "name"
   Context: {renderField('name', 'Organization Name', 'Enter your school/institution name', { required: true, maxLength: 100 }

   Line 468: "address.street"
   Context: {renderField('address.street', 'Street Address', 'Enter street address', { required: true, maxLength: 200 }

   Line 472: "address.city"
   Context: {renderField('address.city', 'City', 'Enter city', { required: true, maxLength: 50 }

   Line 475: "address.zipCode"
   Context: {renderField('address.zipCode', 'ZIP Code', '12345', { required: true, keyboardType: 'numeric', maxLength: 10 }

   Line 494: "phone"
   Context: {renderField('phone', 'Phone Number', '(555) 123-4567', { required: true, keyboardType: 'phone-pad', maxLength: 20 }

   Line 495: "website"
   Context: {renderField('website', 'Website', 'https://www.yourschool.edu', { maxLength: 200 }

   Line 496: "description"
   Context: {renderField('description', 'Description', 'Brief description of your institution', { multiline: true, maxLength: 500 }

   Line 500: "studentCapacity"
   Context: {renderField('studentCapacity', 'Student Capacity', '500', { keyboardType: 'numeric', maxLength: 6 }

   Line 503: "establishedYear"
   Context: {renderField('establishedYear', 'Established Year', '2020', { keyboardType: 'numeric', maxLength: 4 }

   Line 548: "Setting up..."
   Context: {loading ? 'Setting up...' : 'Complete Setup'}

   Line 216: "Validation Error"
   Context: Alert.alert(
        'Validation Error'

   Line 31: "Elementary School"
   Context: 'Elementary School'

   Line 36: "Middle School"
   Context: 'Middle School'

   Line 41: "High School"
   Context: 'High School'

   Line 52: "Higher education institution"
   Context: 'Higher education institution'

   Line 56: "Training Center"
   Context: 'Training Center'

   Line 57: "Professional or vocational training"
   Context: 'Professional or vocational training'

   Line 62: "Other type of educational institution"
   Context: 'Other type of educational institution'

   Line 70: "New Hampshire"
   Context: 'New Hampshire'

   Line 70: "New Jersey"
   Context: 'New Jersey'

   Line 70: "New Mexico"
   Context: 'New Mexico'

   Line 71: "New York"
   Context: 'New York'

   Line 71: "North Carolina"
   Context: 'North Carolina'

   Line 71: "North Dakota"
   Context: 'North Dakota'

   Line 72: "Rhode Island"
   Context: 'Rhode Island'

   Line 72: "South Carolina"
   Context: 'South Carolina'

   Line 72: "South Dakota"
   Context: 'South Dakota'

   Line 73: "West Virginia"
   Context: 'West Virginia'

   Line 92: "United States"
   Context: 'United States'

   Line 107: "Organization name"
   Context: 'Organization name'

   Line 111: "Street address is required"
   Context: 'Street address is required'

   Line 113: "City is required"
   Context: 'City is required'

   Line 115: "State is required"
   Context: 'State is required'

   Line 120: "Please enter a valid ZIP code"
   Context: 'Please enter a valid ZIP code'

   Line 135: "Please enter a valid student capacity"
   Context: 'Please enter a valid student capacity'

   Line 143: "Please enter a valid established year"
   Context: 'Please enter a valid established year'

   Line 217: "Validation Error"
   Context: 'Validation Error'

   Line 451: "Organization Name"
   Context: 'Organization Name'

   Line 468: "Street Address"
   Context: 'Street Address'

   Line 468: "Enter street address"
   Context: 'Enter street address'

   Line 472: "Enter city"
   Context: 'Enter city'

   Line 475: "ZIP Code"
   Context: 'ZIP Code'

   Line 494: "Phone Number"
   Context: 'Phone Number'

   Line 496: "Brief description of your institution"
   Context: 'Brief description of your institution'

   Line 500: "Student Capacity"
   Context: 'Student Capacity'

   Line 503: "Established Year"
   Context: 'Established Year'

   Line 548: "Complete Setup"
   Context: 'Complete Setup'

üìÑ components/auth/PasswordRecovery.tsx:
   Line 55: "pet"
   Context: { id: 'pet', question: "What is the name of your first pet?" }

   Line 56: "school"
   Context: { id: 'school', question: "What elementary school did you attend?" }

   Line 57: "city"
   Context: { id: 'city', question: "In what city were you born?" }

   Line 58: "mother"
   Context: { id: 'mother', question: "What is your mother's maiden name?" }

   Line 59: "car"
   Context: { id: 'car', question: "What was the make of your first car?" }

   Line 120: "Email address is required"
   Context: {
      newErrors.email = 'Email address is required';
    }

   Line 122: "Please enter a valid email address"
   Context: {
      newErrors.email = 'Please enter a valid email address';
    }

   Line 133: "Please provide an answer"
   Context: {
      if (!formData.securityAnswers[q.id] || formData.securityAnswers[q.id].trim().length < 2) {
        newErrors[q.id] = 'Please provide an answer';
      }

   Line 146: "Verification code is required"
   Context: {
      newErrors.verificationCode = 'Verification code is required';
    }

   Line 148: "Please enter a 6-digit code"
   Context: {
      newErrors.verificationCode = 'Please enter a 6-digit code';
    }

   Line 159: "New password is required"
   Context: {
      newErrors.newPassword = 'New password is required';
    }

   Line 161: "Password must be at least 8 characters"
   Context: {
      newErrors.newPassword = 'Password must be at least 8 characters';
    }

   Line 165: "Please confirm your new password"
   Context: {
      newErrors.confirmPassword = 'Please confirm your new password';
    }

   Line 167: "Passwords do not match"
   Context: {
      newErrors.confirmPassword = 'Passwords do not match';
    }

   Line 231: "No account found with this email address"
   Context: {
    if (!validateEmailStep()) return;
    
    setIsLoading(true);
    try {
      const exists = await checkEmailExists(formData.email);
      if (!exists) {
        setErrors({ email: 'No account found with this email address' }

   Line 244: "Failed to verify email address"
   Context: {
      onError?.('Failed to verify email address');
    }

   Line 261: "Failed to send verification code"
   Context: {
            throw new Error('Failed to send verification code');
          }

   Line 280: "Failed to initialize recovery method"
   Context: {
      onError?.('Failed to initialize recovery method');
    }

   Line 296: "Too Many Attempts"
   Context: {
        const newAttempts = attempts + 1;
        setAttempts(newAttempts);
        
        if (newAttempts >= maxAttempts) {
          Alert.alert(
            'Too Many Attempts',
            'You have exceeded the maximum number of attempts. Please try again later or use a different recovery method.',
            [{ text: 'OK', onPress: () => setCurrentStep('method-selection') }

   Line 310: "Failed to verify code"
   Context: {
      onError?.('Failed to verify code');
    }

   Line 326: "Too Many Attempts"
   Context: {
        const newAttempts = attempts + 1;
        setAttempts(newAttempts);
        
        if (newAttempts >= maxAttempts) {
          Alert.alert(
            'Too Many Attempts',
            'You have provided incorrect answers too many times. Please try a different recovery method.',
            [{ text: 'OK', onPress: () => setCurrentStep('method-selection') }

   Line 340: "Failed to verify security answers"
   Context: {
      onError?.('Failed to verify security answers');
    }

   Line 358: "Failed to reset password"
   Context: {
        throw new Error('Failed to reset password');
      }

   Line 361: "Failed to reset password"
   Context: {
      onError?.('Failed to reset password');
    }

   Line 368: "Code Sent"
   Context: {
    if (!canResendCode) return;
    
    setIsLoading(true);
    try {
      const codeSent = await sendVerificationCode(formData.email);
      if (codeSent) {
        Alert.alert('Code Sent', 'A new verification code has been sent to your email.');
      }

   Line 377: "Failed to resend verification code"
   Context: {
      onError?.('Failed to resend verification code');
    }

   Line 385: "email-input"
   Context: {
    const steps = [
      { id: 'email-input', title: 'Email' }

   Line 388: "method-selection"
   Context: { id: 'method-selection', title: 'Method' }

   Line 389: "email-verification"
   Context: { id: 'email-verification', title: 'Verify' }

   Line 390: "new-password"
   Context: { id: 'new-password', title: 'Reset' }

   Line 391: "complete"
   Context: { id: 'complete', title: 'Done' }

   Line 478: "email"
   Context: {
    const methods = [
      {
        id: 'email' as RecoveryMethod,
        title: 'Email Verification',
        description: 'Send a verification code to your email',
        icon: 'üìß',
        recommended: true
      }

   Line 487: "security-questions"
   Context: {
        id: 'security-questions' as RecoveryMethod,
        title: 'Security Questions',
        description: 'Answer your security questions',
        icon: '‚ùì',
        recommended: false
      }

   Line 494: "admin-reset"
   Context: {
        id: 'admin-reset' as RecoveryMethod,
        title: 'Request Admin Reset',
        description: 'Have an administrator reset your password',
        icon: 'üë®‚Äçüíº',
        recommended: false
      }

   Line 617: "Resend Code"
   Context: {canResendCode ? 'Resend Code' : 'Wait 60 seconds'}

   Line 968: "center"
   Context: {
    textAlign: 'center',
    fontSize: 20,
    letterSpacing: 4,
    fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace',
  }

   Line 683: "Enter your answer"
   Context: placeholder="Enter your answer"

   Line 741: "Enter new password"
   Context: placeholder="Enter new password"

   Line 777: "Confirm new password"
   Context: placeholder="Confirm new password"

   Line 273: "Admin Reset Requested"
   Context: Alert.alert(
            'Admin Reset Requested'

   Line 301: "Too Many Attempts"
   Context: Alert.alert(
            'Too Many Attempts'

   Line 301: "Too Many Attempts"
   Context: Alert.alert(
            'Too Many Attempts'

   Line 375: "Code Sent"
   Context: Alert.alert('Code Sent'

   Line 58: "What is your mother"
   Context: "What is your mother'

   Line 121: "Email address is required"
   Context: 'Email address is required'

   Line 123: "Please enter a valid email address"
   Context: 'Please enter a valid email address'

   Line 135: "Please provide an answer"
   Context: 'Please provide an answer'

   Line 147: "Verification code is required"
   Context: 'Verification code is required'

   Line 160: "New password is required"
   Context: 'New password is required'

   Line 166: "Please confirm your new password"
   Context: 'Please confirm your new password'

   Line 168: "Passwords do not match"
   Context: 'Passwords do not match'

   Line 238: "No account found with this email address"
   Context: 'No account found with this email address'

   Line 245: "Failed to verify email address"
   Context: 'Failed to verify email address'

   Line 262: "Failed to send verification code"
   Context: 'Failed to send verification code'

   Line 274: "Admin Reset Requested"
   Context: 'Admin Reset Requested'

   Line 281: "Failed to initialize recovery method"
   Context: 'Failed to initialize recovery method'

   Line 302: "Too Many Attempts"
   Context: 'Too Many Attempts'

   Line 311: "Failed to verify code"
   Context: 'Failed to verify code'

   Line 302: "Too Many Attempts"
   Context: 'Too Many Attempts'

   Line 341: "Failed to verify security answers"
   Context: 'Failed to verify security answers'

   Line 359: "Failed to reset password"
   Context: 'Failed to reset password'

   Line 359: "Failed to reset password"
   Context: 'Failed to reset password'

   Line 375: "Code Sent"
   Context: 'Code Sent'

   Line 378: "Failed to resend verification code"
   Context: 'Failed to resend verification code'

   Line 482: "Email Verification"
   Context: 'Email Verification'

   Line 483: "Send a verification code to your email"
   Context: 'Send a verification code to your email'

   Line 489: "Security Questions"
   Context: 'Security Questions'

   Line 490: "Answer your security questions"
   Context: 'Answer your security questions'

   Line 496: "Request Admin Reset"
   Context: 'Request Admin Reset'

   Line 497: "Have an administrator reset your password"
   Context: 'Have an administrator reset your password'

   Line 617: "Resend Code"
   Context: 'Resend Code'

   Line 683: "Enter your answer"
   Context: "Enter your answer"

   Line 741: "Enter new password"
   Context: "Enter new password"

   Line 777: "Confirm new password"
   Context: "Confirm new password"

   Line 262: "Failed to send verification code"
   Context: throw new Error('Failed to send verification code'

   Line 359: "Failed to reset password"
   Context: throw new Error('Failed to reset password'

üìÑ components/auth/PasswordStrengthIndicator.tsx:
   Line 68: "excellent"
   Context: {
    switch (strength) {
      case 'excellent':
        return {
          color: theme.success,
          backgroundColor: theme.success + '20',
          text: 'Excellent',
          width: '100%'
        }

   Line 159: "At least 8 characters"
   Context: text="At least 8 characters"

   Line 164: "Uppercase letter (A-Z)"
   Context: text="Uppercase letter (A-Z)"

   Line 169: "Lowercase letter (a-z)"
   Context: text="Lowercase letter (a-z)"

   Line 174: "Number (0-9)"
   Context: text="Number (0-9)"

   Line 179: "Special character (!@#$%...)"
   Context: text="Special character (!@#$%...)"

   Line 184: "Not a common password"
   Context: text="Not a common password"

   Line 189: "No personal information"
   Context: text="No personal information"

   Line 184: "Not a common password"
   Context: "Not a common password"

   Line 189: "No personal information"
   Context: "No personal information"

üìÑ components/auth/RoleSelectionScreen.tsx:
   Line 22: "principal"
   Context: {
    role: 'principal',
    title: 'Principal / Administrator',
    description: 'Manage your educational institution with complete administrative control',
    icon: 'üèõÔ∏è',
    color: '#8B5CF6', // Purple
    requirements: [
      'Must be an educational institution administrator',
      'Authorized to create organizational accounts',
      'Responsible for institutional compliance'
    ],
    capabilities: [
      'Create and manage the organization',
      'Invite and manage teachers',
      'View institutional analytics',
      'Configure organizational settings',
      'Export institutional data',
      'Manage billing and subscriptions'
    ],
    invitationRequired: false,
    level: 1
  }

   Line 44: "teacher"
   Context: {
    role: 'teacher',
    title: 'Teacher / Instructor',
    description: 'Educate students and manage classroom activities',
    icon: 'üë©‚Äçüè´',
    color: '#10B981', // Green
    requirements: [
      'Must be invited by a Principal',
      'Professional teaching credentials (recommended)',
      'Assigned to specific subjects/grades'
    ],
    capabilities: [
      'Create and manage classes',
      'Create assignments and assessments',
      'Grade student work',
      'Track student progress',
      'Invite parents',
      'Communicate with parents and students'
    ],
    invitationRequired: true,
    level: 2
  }

   Line 66: "parent"
   Context: {
    role: 'parent',
    title: 'Parent / Guardian',
    description: 'Monitor your child\'s educational progress and stay connected',
    icon: 'üë®‚Äçüë©‚Äçüëß‚Äçüë¶',
    color: '#F59E0B', // Amber
    requirements: [
      'Must be invited by your child\'s teacher',
      'Connected to one or more students',
      'Verified identity and relationship'
    ],
    capabilities: [
      'View child\'s assignments and grades',
      'Track academic progress',
      'Communicate with teachers',
      'Receive notifications and updates',
      'Access school announcements',
      'Schedule parent-teacher conferences'
    ],
    invitationRequired: true,
    level: 3
  }

   Line 88: "student"
   Context: {
    role: 'student',
    title: 'Student',
    description: 'Access your coursework, assignments, and track your academic journey',
    icon: 'üéì',
    color: '#3B82F6', // Blue
    requirements: [
      'Must be enrolled in participating school (recommended)',
      'Age appropriate (typically 8+ years)',
      'Parent/guardian approval may be required'
    ],
    capabilities: [
      'View and submit assignments',
      'Access course materials',
      'Track grades and progress',
      'Participate in online classes',
      'Communicate with teachers',
      'Access educational resources'
    ],
    invitationRequired: false,
    level: 4
  }

   Line 156: "Creates organization"
   Context: description="Creates organization"

   Line 164: "Invited by Principal"
   Context: description="Invited by Principal"

   Line 172: "Invited by Teachers"
   Context: description="Invited by Teachers"

   Line 180: "Self-register or invited"
   Context: description="Self-register or invited"

   Line 25: "Manage your educational institution with complete administrative control"
   Context: 'Manage your educational institution with complete administrative control'

   Line 29: "Must be an educational institution administrator"
   Context: 'Must be an educational institution administrator'

   Line 30: "Authorized to create organizational accounts"
   Context: 'Authorized to create organizational accounts'

   Line 31: "Responsible for institutional compliance"
   Context: 'Responsible for institutional compliance'

   Line 34: "Create and manage the organization"
   Context: 'Create and manage the organization'

   Line 35: "Invite and manage teachers"
   Context: 'Invite and manage teachers'

   Line 37: "Configure organizational settings"
   Context: 'Configure organizational settings'

   Line 39: "Manage billing and subscriptions"
   Context: 'Manage billing and subscriptions'

   Line 47: "Educate students and manage classroom activities"
   Context: 'Educate students and manage classroom activities'

   Line 51: "Must be invited by a Principal"
   Context: 'Must be invited by a Principal'

   Line 56: "Create and manage classes"
   Context: 'Create and manage classes'

   Line 57: "Create assignments and assessments"
   Context: 'Create assignments and assessments'

   Line 58: "Grade student work"
   Context: 'Grade student work'

   Line 59: "Track student progress"
   Context: 'Track student progress'

   Line 60: "Invite parents"
   Context: 'Invite parents'

   Line 61: "Communicate with parents and students"
   Context: 'Communicate with parents and students'

   Line 74: "Connected to one or more students"
   Context: 'Connected to one or more students'

   Line 75: "Verified identity and relationship"
   Context: 'Verified identity and relationship'

   Line 79: "Track academic progress"
   Context: 'Track academic progress'

   Line 80: "Communicate with teachers"
   Context: 'Communicate with teachers'

   Line 81: "Receive notifications and updates"
   Context: 'Receive notifications and updates'

   Line 82: "Access school announcements"
   Context: 'Access school announcements'

   Line 101: "Access course materials"
   Context: 'Access course materials'

   Line 102: "Track grades and progress"
   Context: 'Track grades and progress'

   Line 103: "Participate in online classes"
   Context: 'Participate in online classes'

   Line 80: "Communicate with teachers"
   Context: 'Communicate with teachers'

   Line 105: "Access educational resources"
   Context: 'Access educational resources'

   Line 156: "Creates organization"
   Context: "Creates organization"

   Line 164: "Invited by Principal"
   Context: "Invited by Principal"

   Line 172: "Invited by Teachers"
   Context: "Invited by Teachers"

üìÑ components/auth/TwoFactorAuth.tsx:
   Line 94: "JBSWY3DPEHPK3PXP"
   Context: {
    // In a real app, this would be generated by your backend
    const mockSecret = 'JBSWY3DPEHPK3PXP'; // Base32 encoded secret
    const appName = 'EduDash Pro';
    const issuer = 'EduDash';
    const email = user?.email || 'user@example.com';
    
    // Generate otpauth URL for QR code
    const otpauthUrl = `otpauth://totp/${issuer}

   Line 123: "Please enter a valid phone number"
   Context: {
    if (!phoneNumber || phoneNumber.length < 10) {
      onError?.('Please enter a valid phone number');
      return;
    }

   Line 130: "SMS Sent"
   Context: {
      // Simulate SMS sending
      await new Promise(resolve => setTimeout(resolve, 1000));
      Alert.alert('SMS Sent', 'A verification code has been sent to your phone.');
      setStep(2);
    }

   Line 135: "Failed to send SMS. Please try again."
   Context: {
      onError?.('Failed to send SMS. Please try again.');
    }

   Line 160: "Please enter a valid 6-digit code"
   Context: {
    if (!verificationState.code || verificationState.code.length !== 6) {
      onError?.('Please enter a valid 6-digit code');
      return;
    }

   Line 220: "Verification failed. Please try again."
   Context: {
      onError?.('Verification failed. Please try again.');
      setVerificationState(prev => ({ ...prev, isVerifying: false }

   Line 241: "Failed to share backup codes:"
   Context: {
        console.error('Failed to share backup codes:', error);
      }

   Line 281: "Manual Entry"
   Context: {() => {
            Alert.alert(
              'Manual Entry',
              `Secret Key: ${mfaSetup.totpSecret}

   Line 287: "Copy Key"
   Context: { 
                  text: 'Copy Key', 
                  onPress: () => {
                    Clipboard.setString(mfaSetup.totpSecret || '');
                    Alert.alert('Copied', 'Secret key copied to clipboard');
                  }

   Line 307: "totp"
   Context: {
    const methods = [
      { 
        type: 'totp' as MfaMethod, 
        title: 'Authenticator App', 
        subtitle: 'Google Authenticator, Authy, etc.',
        icon: 'üì±',
        recommended: true
      }

   Line 316: "sms"
   Context: { 
        type: 'sms' as MfaMethod, 
        title: 'SMS Text Message', 
        subtitle: 'Receive codes via text',
        icon: 'üí¨',
        recommended: false
      }

   Line 453: "totp"
   Context: {verificationState.method === 'totp' && 'Enter the 6-digit code from your authenticator app'}

   Line 454: "sms"
   Context: {verificationState.method === 'sms' && 'Enter the code sent to your phone'}

   Line 455: "backup"
   Context: {verificationState.method === 'backup' && 'Enter one of your 8-character backup codes'}

   Line 476: "backup"
   Context: {verificationState.method === 'backup' ? 'ABC12345' : '123456'}

   Line 540: "setup"
   Context: {mode === 'setup' ? 'Verify & Enable 2FA' : 'Verify'}

   Line 600: "setup"
   Context: {mode === 'setup' ? 'Setup 2FA' : mode === 'verification' ? 'Two-Factor Authentication' : 'Account Recovery'}

   Line 603: "setup"
   Context: {mode === 'setup' && 'Secure your account with two-factor authentication'}

   Line 604: "verification"
   Context: {mode === 'verification' && 'Enter your verification code to continue'}

   Line 605: "recovery"
   Context: {mode === 'recovery' && 'Use your backup code to regain access'}

   Line 849: "100%"
   Context: {
    width: '100%',
    paddingVertical: 20,
    paddingHorizontal: 16,
    borderRadius: 12,
    borderWidth: 2,
    fontSize: 20,
    fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace',
  }

   Line 927: "ios"
   Context: {
    fontSize: 16,
    fontFamily: Platform.OS === 'ios' ? 'Courier' : 'monospace',
    fontWeight: '600',
  }

   Line 133: "SMS Sent"
   Context: Alert.alert('SMS Sent'

   Line 242: "Failed to share backup codes:"
   Context: console.error('Failed to share backup codes:'

   Line 282: "Manual Entry"
   Context: Alert.alert(
              'Manual Entry'

   Line 97: "EduDash Pro"
   Context: 'EduDash Pro'

   Line 98: "EduDash"
   Context: 'EduDash'

   Line 125: "Please enter a valid phone number"
   Context: 'Please enter a valid phone number'

   Line 133: "SMS Sent"
   Context: 'SMS Sent'

   Line 231: "Backup codes copied to clipboard"
   Context: 'Backup codes copied to clipboard'

   Line 283: "Manual Entry"
   Context: 'Manual Entry'

   Line 288: "Copy Key"
   Context: 'Copy Key'

   Line 291: "Secret key copied to clipboard"
   Context: 'Secret key copied to clipboard'

   Line 311: "Authenticator App"
   Context: 'Authenticator App'

   Line 319: "Receive codes via text"
   Context: 'Receive codes via text'

   Line 454: "Enter the code sent to your phone"
   Context: 'Enter the code sent to your phone'

   Line 600: "Account Recovery"
   Context: 'Account Recovery'

   Line 604: "Enter your verification code to continue"
   Context: 'Enter your verification code to continue'

   Line 605: "Use your backup code to regain access"
   Context: 'Use your backup code to regain access'

üìÑ components/auth/UserProfile.tsx:
   Line 150: "First name is required"
   Context: {
      newErrors.firstName = 'First name is required';
    }

   Line 154: "Last name is required"
   Context: {
      newErrors.lastName = 'Last name is required';
    }

   Line 158: "Email is required"
   Context: {
      newErrors.email = 'Email is required';
    }

   Line 160: "Please enter a valid email address"
   Context: {
      newErrors.email = 'Please enter a valid email address';
    }

   Line 171: "Current password is required"
   Context: {
      newErrors.currentPassword = 'Current password is required';
    }

   Line 175: "New password is required"
   Context: {
      newErrors.newPassword = 'New password is required';
    }

   Line 177: "Password must be at least 8 characters"
   Context: {
      newErrors.newPassword = 'Password must be at least 8 characters';
    }

   Line 181: "Passwords do not match"
   Context: {
      newErrors.confirmPassword = 'Passwords do not match';
    }

   Line 207: "Failed to update profile"
   Context: {
      onError?.('Failed to update profile');
    }

   Line 230: "Failed to change password"
   Context: {
      onError?.('Failed to change password');
    }

   Line 265: "profile"
   Context: {
    const tabs = [
      { id: 'profile', title: 'Profile', icon: 'üë§' }

   Line 268: "security"
   Context: { id: 'security', title: 'Security', icon: 'üîí' }

   Line 269: "privacy"
   Context: { id: 'privacy', title: 'Privacy', icon: 'üëÅÔ∏è' }

   Line 270: "activity"
   Context: { id: 'activity', title: 'Activity', icon: 'üìä' }

   Line 578: "Session Timeout"
   Context: {() => {
              Alert.alert(
                'Session Timeout',
                'Choose session timeout duration',
                [
                  { text: '15 minutes', onPress: () => setSecuritySettings(prev => ({ ...prev, sessionTimeout: 15 }

   Line 644: "public"
   Context: {visibility === 'public' && 'Anyone can see your profile'}

   Line 645: "organization"
   Context: {visibility === 'organization' && 'Only members of your organization can see your profile'}

   Line 646: "private"
   Context: {visibility === 'private' && 'Only you can see your profile'}

   Line 747: "login_success"
   Context: {
      switch (type) {
        case 'login_success': return 'Successful Login';
        case 'login_failure': return 'Failed Login Attempt';
        case 'password_change': return 'Password Changed';
        case 'email_verification': return 'Email Verified';
        default: return 'Account Activity';
      }

   Line 843: "Saving..."
   Context: {isLoading ? 'Saving...' : 'Save'}

   Line 355: "Enter first name"
   Context: placeholder="Enter first name"

   Line 381: "Enter last name"
   Context: placeholder="Enter last name"

   Line 407: "Enter email address"
   Context: placeholder="Enter email address"

   Line 435: "Enter phone number"
   Context: placeholder="Enter phone number"

   Line 458: "Tell us about yourself..."
   Context: placeholder="Tell us about yourself..."

   Line 864: "Enter current password"
   Context: placeholder="Enter current password"

   Line 890: "Enter new password"
   Context: placeholder="Enter new password"

   Line 927: "Confirm new password"
   Context: placeholder="Confirm new password"

   Line 579: "Session Timeout"
   Context: Alert.alert(
                'Session Timeout'

   Line 67: "Chrome on Windows"
   Context: 'Chrome on Windows'

   Line 78: "User initiated"
   Context: 'User initiated'

   Line 89: "Invalid password"
   Context: 'Invalid password'

   Line 151: "First name is required"
   Context: 'First name is required'

   Line 155: "Last name is required"
   Context: 'Last name is required'

   Line 159: "Email is required"
   Context: 'Email is required'

   Line 161: "Please enter a valid email address"
   Context: 'Please enter a valid email address'

   Line 172: "Current password is required"
   Context: 'Current password is required'

   Line 176: "New password is required"
   Context: 'New password is required'

   Line 182: "Passwords do not match"
   Context: 'Passwords do not match'

   Line 206: "Profile updated successfully"
   Context: 'Profile updated successfully'

   Line 208: "Failed to update profile"
   Context: 'Failed to update profile'

   Line 229: "Password changed successfully"
   Context: 'Password changed successfully'

   Line 231: "Failed to change password"
   Context: 'Failed to change password'

   Line 355: "Enter first name"
   Context: "Enter first name"

   Line 381: "Enter last name"
   Context: "Enter last name"

   Line 407: "Enter email address"
   Context: "Enter email address"

   Line 435: "Enter phone number"
   Context: "Enter phone number"

   Line 580: "Session Timeout"
   Context: 'Session Timeout'

   Line 581: "Choose session timeout duration"
   Context: 'Choose session timeout duration'

   Line 644: "Anyone can see your profile"
   Context: 'Anyone can see your profile'

   Line 645: "Only members of your organization can see your profile"
   Context: 'Only members of your organization can see your profile'

   Line 646: "Only you can see your profile"
   Context: 'Only you can see your profile'

   Line 749: "Successful Login"
   Context: 'Successful Login'

   Line 750: "Failed Login Attempt"
   Context: 'Failed Login Attempt'

   Line 751: "Password Changed"
   Context: 'Password Changed'

   Line 752: "Email Verified"
   Context: 'Email Verified'

   Line 753: "Account Activity"
   Context: 'Account Activity'

   Line 864: "Enter current password"
   Context: "Enter current password"

   Line 890: "Enter new password"
   Context: "Enter new password"

   Line 927: "Confirm new password"
   Context: "Confirm new password"

üìÑ components/dashboard/EnhancedChildrenGrid.tsx:
   Line 246: "No activity"
   Context: 'No activity'

üìÑ components/dashboard/EnhancedPrincipalDashboard.tsx:
   Line 177: "s configured WhatsApp number from centralized settings
    const configuredNumber = schoolSettings?.whatsapp_number;
    if (configuredNumber) {
      const message = encodeURIComponent(
        `Hello! This is ${user?.user_metadata?.first_name || "
   Context: {
    // Prefer the school's configured WhatsApp number from centralized settings
    const configuredNumber = schoolSettings?.whatsapp_number;
    if (configuredNumber) {
      const message = encodeURIComponent(
        `Hello! This is ${user?.user_metadata?.first_name || 'Principal'}

   Line 188: "Failed to open WhatsApp link:"
   Context: {
        console.error('Failed to open WhatsApp link:', err);
      }

   Line 199: "Failed to open fallback WhatsApp link:"
   Context: {
        console.error('Failed to open fallback WhatsApp link:', err);
      }

   Line 356: "Loading your dashboard..."
   Context: {
    return <LoadingScreen message="Loading your dashboard..." />;
  }

   Line 397: "My School"
   Context: {data.schoolName ||
               (schoolSettings?.schoolName && schoolSettings.schoolName !== 'My School' ? schoolSettings.schoolName : undefined) ||
               tenantSlug ||
               (profile as any)?.organization_membership?.organization_name ||
               t('dashboard.your_school')}

   Line 449: "dashboard.managing_school"
   Context: {t('dashboard.managing_school', { schoolName: data.schoolName || (schoolSettings?.schoolName && schoolSettings.schoolName !== 'My School' ? schoolSettings.schoolName : t('dashboard.your_school')) }

   Line 558: "students"
   Context: {
                  case 'students':
                    router.push('/screens/student-management');
                    return;
                  case 'staff':
                    router.push('/screens/teacher-management');
                    return;
                  case 'revenue':
                    router.push('/screens/financial-dashboard');
                    return;
                  case 'applications':
                    router.push('/screens/student-enrollment');
                    return;
                  case 'classes':
                    router.push('/screens/class-teacher-management');
                    return;
                  case 'petty_cash_balance':
                  case 'monthly_expenses':
                  case 'pending_approvals':
                    router.push('/screens/petty-cash');
                    return;
                  default:
                    // Fallback based on title (legacy behavior)
                    if (metric.title?.includes('Students') || metric.title?.includes('Total Students')) {
                      router.push('/screens/student-management');
                    }

   Line 357: "Loading your dashboard..."
   Context: message="Loading your dashboard..."

   Line 189: "Failed to open WhatsApp link:"
   Context: console.error('Failed to open WhatsApp link:'

   Line 200: "Failed to open fallback WhatsApp link:"
   Context: console.error('Failed to open fallback WhatsApp link:'

   Line 398: "My School"
   Context: 'My School'

   Line 398: "My School"
   Context: 'My School'

   Line 581: "Total Students"
   Context: 'Total Students'

   Line 583: "Teaching Staff"
   Context: 'Teaching Staff'

   Line 585: "Monthly Revenue"
   Context: 'Monthly Revenue'

   Line 589: "Petty Cash"
   Context: 'Petty Cash'

üìÑ components/dashboard/EnhancedQuickActions.tsx:
   Line 82: "quick_actions.upgrade_to_unlock"
   Context: {isPremiumBlocked ? t('quick_actions.upgrade_to_unlock', { defaultValue: 'Upgrade to unlock' }

   Line 111: "quick_actions.quick_actions"
   Context: {t('quick_actions.quick_actions', { defaultValue: 'Quick Actions' }

   Line 115: "quick_actions.ai_homework_helper"
   Context: {t('quick_actions.ai_homework_helper', { defaultValue: 'AI Homework Helper' }

   Line 116: "quick_actions.limit_reached"
   Context: {
            isHomeworkDisabled
              ? t('quick_actions.limit_reached', 'Limit reached')
              : t('quick_actions.requests_left', `${typeof remaining === 'number' ? remaining : 0}

   Line 128: "quick_actions.whatsapp_connect"
   Context: {t('quick_actions.whatsapp_connect', { defaultValue: 'WhatsApp Connect' }

   Line 129: "quick_actions.connect_with_teachers"
   Context: {t('quick_actions.connect_with_teachers', { defaultValue: 'Connect with teachers' }

   Line 133: "quick_actions.whatsapp_premium_description"
   Context: {t('quick_actions.whatsapp_premium_description', { defaultValue: 'Get instant communication with your teachers and receive real-time updates on assignments and progress' }

   Line 138: "quick_actions.learning_resources"
   Context: {t('quick_actions.learning_resources', { defaultValue: 'Learning Resources' }

   Line 139: "quick_actions.access_study_materials"
   Context: {t('quick_actions.access_study_materials', { defaultValue: 'Access study materials' }

   Line 143: "quick_actions.learning_resources_premium_description"
   Context: {t('quick_actions.learning_resources_premium_description', { defaultValue: 'Access premium study materials, interactive content, and curated educational resources' }

   Line 148: "quick_actions.progress_analytics"
   Context: {t('quick_actions.progress_analytics', { defaultValue: 'Progress Analytics' }

   Line 149: "quick_actions.track_your_performance"
   Context: {t('quick_actions.track_your_performance', { defaultValue: 'Track your performance' }

   Line 153: "quick_actions.progress_analytics_premium_description"
   Context: {t('quick_actions.progress_analytics_premium_description', { defaultValue: 'Get detailed insights into your learning progress with advanced analytics and performance tracking' }

   Line 82: "Upgrade to unlock"
   Context: 'Upgrade to unlock'

   Line 111: "Quick Actions"
   Context: 'Quick Actions'

   Line 115: "AI Homework Helper"
   Context: 'AI Homework Helper'

   Line 118: "Limit reached"
   Context: 'Limit reached'

   Line 128: "WhatsApp Connect"
   Context: 'WhatsApp Connect'

   Line 129: "Connect with teachers"
   Context: 'Connect with teachers'

   Line 138: "Learning Resources"
   Context: 'Learning Resources'

   Line 139: "Access study materials"
   Context: 'Access study materials'

   Line 148: "Progress Analytics"
   Context: 'Progress Analytics'

   Line 149: "Track your performance"
   Context: 'Track your performance'

   Line 153: "Get detailed insights into your learning progress with advanced analytics and performance tracking"
   Context: 'Get detailed insights into your learning progress with advanced analytics and performance tracking'

üìÑ components/dashboard/EnhancedStats.tsx:
   Line 49: "unlimited"
   Context: {limit === 'unlimited' ? 'Unlimited' : `${value}

   Line 72: "dashboard.usageLimits"
   Context: {t('dashboard.usageLimits', { defaultValue: 'Usage Limits' }

   Line 75: "quick_actions.ai_homework_helper"
   Context: {t('quick_actions.ai_homework_helper', { defaultValue: 'AI Homework Helper' }

   Line 82: "quick_actions.ai_lessons"
   Context: {t('quick_actions.ai_lessons', { defaultValue: 'AI Lessons' }

   Line 72: "Usage Limits"
   Context: 'Usage Limits'

   Line 75: "AI Homework Helper"
   Context: 'AI Homework Helper'

   Line 82: "AI Lessons"
   Context: 'AI Lessons'

üìÑ components/dashboard/NewEnhancedParentDashboard.tsx:
   Line 102: "parent.selectChild"
   Context: {t('parent.selectChild', { defaultValue: 'Select Child' }

   Line 141: "common.manage"
   Context: {t('common.manage', { defaultValue: 'Manage' }

   Line 193: "Good afternoon"
   Context: { defaultValue: 'Good afternoon' }

   Line 194: "Good evening"
   Context: { defaultValue: 'Good evening' }

   Line 206: "Dashboard refresh failed:"
   Context: {
      logger.error('Dashboard refresh failed:', _error);
    }

   Line 304: "Needs attention"
   Context: { defaultValue: 'Needs attention' }

   Line 315: "view_homework"
   Context: {
      case 'view_homework':
        router.push('/screens/homework');
        break;
      case 'check_attendance':
        router.push('/screens/attendance');
        break;
      case 'view_grades':
        router.push('/screens/grades');
        break;
      case 'messages':
        router.push('/screens/messages');
        break;
      case 'events':
        router.push('/screens/events');
        break;
      case 'ai_homework_help':
        router.push('/screens/ai-homework-help');
        break;
      default:
        Alert.alert(t('common.coming_soon', { defaultValue: 'Coming Soon' }

   Line 335: "This feature is coming soon!"
   Context: { defaultValue: 'This feature is coming soon!' }

   Line 340: "parent.unread_messages"
   Context: {
    if (!dashboardData) {
      return [
        {
          title: t('parent.unread_messages', { defaultValue: 'Unread Messages' }

   Line 350: "parent.homework_pending"
   Context: {
          title: t('parent.homework_pending', { defaultValue: 'Homework Pending' }

   Line 357: "parent.attendance_rate"
   Context: {
          title: t('parent.attendance_rate', { defaultValue: 'Attendance Rate' }

   Line 364: "parent.total_children"
   Context: {
          title: t('parent.total_children', { defaultValue: 'Total Children' }

   Line 378: "parent.unread_messages"
   Context: {
        title: t('parent.unread_messages', { defaultValue: 'Unread Messages' }

   Line 385: "parent.homework_pending"
   Context: {
        title: t('parent.homework_pending', { defaultValue: 'Homework Pending' }

   Line 392: "parent.attendance_rate"
   Context: {
        title: t('parent.attendance_rate', { defaultValue: 'Attendance Rate' }

   Line 399: "parent.total_children"
   Context: {
        title: t('parent.total_children', { defaultValue: 'Total Children' }

   Line 410: "parent.view_homework"
   Context: {
      title: t('parent.view_homework', { defaultValue: 'View Homework' }

   Line 416: "parent.check_attendance"
   Context: {
      title: t('parent.check_attendance', { defaultValue: 'Check Attendance' }

   Line 422: "parent.view_grades"
   Context: {
      title: t('parent.view_grades', { defaultValue: 'View Grades' }

   Line 428: "parent.messages"
   Context: {
      title: t('parent.messages', { defaultValue: 'Messages' }

   Line 434: "parent.events"
   Context: {
      title: t('parent.events', { defaultValue: 'Events' }

   Line 440: "parent.ai_homework_help"
   Context: {
      title: t('parent.ai_homework_help', { defaultValue: 'AI Homework Help' }

   Line 452: "common.loading"
   Context: {t('common.loading', { defaultValue: 'Loading...' }

   Line 475: "parent.dashboard_subtitle"
   Context: {t('parent.dashboard_subtitle', { defaultValue: 'Track your child\'s progress' }

   Line 487: "dashboard.overview"
   Context: {t('dashboard.overview', { defaultValue: 'Overview' }

   Line 507: "dashboard.quick_actions"
   Context: {t('dashboard.quick_actions', { defaultValue: 'Quick Actions' }

   Line 517: "dashboard.upgrade_required"
   Context: {action.disabled ? t('dashboard.upgrade_required', { defaultValue: 'Upgrade required' }

   Line 531: "enhanced"
   Context: {preferences.layout === 'enhanced' ? 'Classic' : 'Enhanced'}

   Line 102: "Select Child"
   Context: 'Select Child'

   Line 192: "Good morning"
   Context: 'Good morning'

   Line 193: "Good afternoon"
   Context: 'Good afternoon'

   Line 194: "Good evening"
   Context: 'Good evening'

   Line 304: "Needs attention"
   Context: 'Needs attention'

   Line 335: "Coming Soon"
   Context: 'Coming Soon'

   Line 344: "Unread Messages"
   Context: 'Unread Messages'

   Line 351: "Homework Pending"
   Context: 'Homework Pending'

   Line 358: "Attendance Rate"
   Context: 'Attendance Rate'

   Line 365: "Total Children"
   Context: 'Total Children'

   Line 344: "Unread Messages"
   Context: 'Unread Messages'

   Line 351: "Homework Pending"
   Context: 'Homework Pending'

   Line 358: "Attendance Rate"
   Context: 'Attendance Rate'

   Line 365: "Total Children"
   Context: 'Total Children'

   Line 417: "Check Attendance"
   Context: 'Check Attendance'

   Line 441: "AI Homework Help"
   Context: 'AI Homework Help'

   Line 507: "Quick Actions"
   Context: 'Quick Actions'

   Line 517: "Upgrade required"
   Context: 'Upgrade required'

üìÑ components/dashboard/NewEnhancedParentDashboard_BACKUP_490480.tsx:
   Line 102: "parent.selectChild"
   Context: {t('parent.selectChild', { defaultValue: 'Select Child' }

   Line 141: "common.manage"
   Context: {t('common.manage', { defaultValue: 'Manage' }

   Line 193: "Good afternoon"
   Context: { defaultValue: 'Good afternoon' }

   Line 194: "Good evening"
   Context: { defaultValue: 'Good evening' }

   Line 206: "Dashboard refresh failed:"
   Context: {
      logger.error('Dashboard refresh failed:', _error);
    }

   Line 304: "Needs attention"
   Context: { defaultValue: 'Needs attention' }

   Line 315: "view_homework"
   Context: {
      case 'view_homework':
        router.push('/screens/homework');
        break;
      case 'check_attendance':
        router.push('/screens/attendance');
        break;
      case 'view_grades':
        router.push('/screens/grades');
        break;
      case 'messages':
        router.push('/screens/messages');
        break;
      case 'events':
        router.push('/screens/events');
        break;
      case 'ai_homework_help':
        router.push('/screens/ai-homework-help');
        break;
      default:
        Alert.alert(t('common.coming_soon', { defaultValue: 'Coming Soon' }

   Line 335: "This feature is coming soon!"
   Context: { defaultValue: 'This feature is coming soon!' }

   Line 340: "parent.unread_messages"
   Context: {
    if (!dashboardData) {
      return [
        {
          title: t('parent.unread_messages', { defaultValue: 'Unread Messages' }

   Line 350: "parent.homework_pending"
   Context: {
          title: t('parent.homework_pending', { defaultValue: 'Homework Pending' }

   Line 357: "parent.attendance_rate"
   Context: {
          title: t('parent.attendance_rate', { defaultValue: 'Attendance Rate' }

   Line 364: "parent.total_children"
   Context: {
          title: t('parent.total_children', { defaultValue: 'Total Children' }

   Line 378: "parent.unread_messages"
   Context: {
        title: t('parent.unread_messages', { defaultValue: 'Unread Messages' }

   Line 385: "parent.homework_pending"
   Context: {
        title: t('parent.homework_pending', { defaultValue: 'Homework Pending' }

   Line 392: "parent.attendance_rate"
   Context: {
        title: t('parent.attendance_rate', { defaultValue: 'Attendance Rate' }

   Line 399: "parent.total_children"
   Context: {
        title: t('parent.total_children', { defaultValue: 'Total Children' }

   Line 410: "parent.view_homework"
   Context: {
      title: t('parent.view_homework', { defaultValue: 'View Homework' }

   Line 416: "parent.check_attendance"
   Context: {
      title: t('parent.check_attendance', { defaultValue: 'Check Attendance' }

   Line 422: "parent.view_grades"
   Context: {
      title: t('parent.view_grades', { defaultValue: 'View Grades' }

   Line 428: "parent.messages"
   Context: {
      title: t('parent.messages', { defaultValue: 'Messages' }

   Line 434: "parent.events"
   Context: {
      title: t('parent.events', { defaultValue: 'Events' }

   Line 440: "parent.ai_homework_help"
   Context: {
      title: t('parent.ai_homework_help', { defaultValue: 'AI Homework Help' }

   Line 452: "common.loading"
   Context: {t('common.loading', { defaultValue: 'Loading...' }

   Line 475: "parent.dashboard_subtitle"
   Context: {t('parent.dashboard_subtitle', { defaultValue: 'Track your child\'s progress' }

   Line 487: "dashboard.overview"
   Context: {t('dashboard.overview', { defaultValue: 'Overview' }

   Line 507: "dashboard.quick_actions"
   Context: {t('dashboard.quick_actions', { defaultValue: 'Quick Actions' }

   Line 517: "dashboard.upgrade_required"
   Context: {action.disabled ? t('dashboard.upgrade_required', { defaultValue: 'Upgrade required' }

   Line 531: "enhanced"
   Context: {preferences.layout === 'enhanced' ? 'Classic' : 'Enhanced'}

   Line 102: "Select Child"
   Context: 'Select Child'

   Line 192: "Good morning"
   Context: 'Good morning'

   Line 193: "Good afternoon"
   Context: 'Good afternoon'

   Line 194: "Good evening"
   Context: 'Good evening'

   Line 304: "Needs attention"
   Context: 'Needs attention'

   Line 335: "Coming Soon"
   Context: 'Coming Soon'

   Line 344: "Unread Messages"
   Context: 'Unread Messages'

   Line 351: "Homework Pending"
   Context: 'Homework Pending'

   Line 358: "Attendance Rate"
   Context: 'Attendance Rate'

   Line 365: "Total Children"
   Context: 'Total Children'

   Line 344: "Unread Messages"
   Context: 'Unread Messages'

   Line 351: "Homework Pending"
   Context: 'Homework Pending'

   Line 358: "Attendance Rate"
   Context: 'Attendance Rate'

   Line 365: "Total Children"
   Context: 'Total Children'

   Line 417: "Check Attendance"
   Context: 'Check Attendance'

   Line 441: "AI Homework Help"
   Context: 'AI Homework Help'

   Line 507: "Quick Actions"
   Context: 'Quick Actions'

   Line 517: "Upgrade required"
   Context: 'Upgrade required'

üìÑ components/dashboard/NewEnhancedParentDashboard_LOCAL_490480.tsx:
   Line 102: "parent.selectChild"
   Context: {t('parent.selectChild', { defaultValue: 'Select Child' }

   Line 141: "common.manage"
   Context: {t('common.manage', { defaultValue: 'Manage' }

   Line 193: "Good afternoon"
   Context: { defaultValue: 'Good afternoon' }

   Line 194: "Good evening"
   Context: { defaultValue: 'Good evening' }

   Line 206: "Dashboard refresh failed:"
   Context: {
      logger.error('Dashboard refresh failed:', _error);
    }

   Line 304: "Needs attention"
   Context: { defaultValue: 'Needs attention' }

   Line 315: "view_homework"
   Context: {
      case 'view_homework':
        router.push('/screens/homework');
        break;
      case 'check_attendance':
        router.push('/screens/attendance');
        break;
      case 'view_grades':
        router.push('/screens/grades');
        break;
      case 'messages':
        router.push('/screens/messages');
        break;
      case 'events':
        router.push('/screens/events');
        break;
      case 'ai_homework_help':
        router.push('/screens/ai-homework-help');
        break;
      default:
        Alert.alert(t('common.coming_soon', { defaultValue: 'Coming Soon' }

   Line 335: "This feature is coming soon!"
   Context: { defaultValue: 'This feature is coming soon!' }

   Line 340: "parent.unread_messages"
   Context: {
    if (!dashboardData) {
      return [
        {
          title: t('parent.unread_messages', { defaultValue: 'Unread Messages' }

   Line 350: "parent.homework_pending"
   Context: {
          title: t('parent.homework_pending', { defaultValue: 'Homework Pending' }

   Line 357: "parent.attendance_rate"
   Context: {
          title: t('parent.attendance_rate', { defaultValue: 'Attendance Rate' }

   Line 364: "parent.total_children"
   Context: {
          title: t('parent.total_children', { defaultValue: 'Total Children' }

   Line 378: "parent.unread_messages"
   Context: {
        title: t('parent.unread_messages', { defaultValue: 'Unread Messages' }

   Line 385: "parent.homework_pending"
   Context: {
        title: t('parent.homework_pending', { defaultValue: 'Homework Pending' }

   Line 392: "parent.attendance_rate"
   Context: {
        title: t('parent.attendance_rate', { defaultValue: 'Attendance Rate' }

   Line 399: "parent.total_children"
   Context: {
        title: t('parent.total_children', { defaultValue: 'Total Children' }

   Line 410: "parent.view_homework"
   Context: {
      title: t('parent.view_homework', { defaultValue: 'View Homework' }

   Line 416: "parent.check_attendance"
   Context: {
      title: t('parent.check_attendance', { defaultValue: 'Check Attendance' }

   Line 422: "parent.view_grades"
   Context: {
      title: t('parent.view_grades', { defaultValue: 'View Grades' }

   Line 428: "parent.messages"
   Context: {
      title: t('parent.messages', { defaultValue: 'Messages' }

   Line 434: "parent.events"
   Context: {
      title: t('parent.events', { defaultValue: 'Events' }

   Line 440: "parent.ai_homework_help"
   Context: {
      title: t('parent.ai_homework_help', { defaultValue: 'AI Homework Help' }

   Line 452: "common.loading"
   Context: {t('common.loading', { defaultValue: 'Loading...' }

   Line 475: "parent.dashboard_subtitle"
   Context: {t('parent.dashboard_subtitle', { defaultValue: 'Track your child\'s progress' }

   Line 487: "dashboard.overview"
   Context: {t('dashboard.overview', { defaultValue: 'Overview' }

   Line 507: "dashboard.quick_actions"
   Context: {t('dashboard.quick_actions', { defaultValue: 'Quick Actions' }

   Line 517: "dashboard.upgrade_required"
   Context: {action.disabled ? t('dashboard.upgrade_required', { defaultValue: 'Upgrade required' }

   Line 531: "enhanced"
   Context: {preferences.layout === 'enhanced' ? 'Classic' : 'Enhanced'}

   Line 102: "Select Child"
   Context: 'Select Child'

   Line 192: "Good morning"
   Context: 'Good morning'

   Line 193: "Good afternoon"
   Context: 'Good afternoon'

   Line 194: "Good evening"
   Context: 'Good evening'

   Line 304: "Needs attention"
   Context: 'Needs attention'

   Line 335: "Coming Soon"
   Context: 'Coming Soon'

   Line 344: "Unread Messages"
   Context: 'Unread Messages'

   Line 351: "Homework Pending"
   Context: 'Homework Pending'

   Line 358: "Attendance Rate"
   Context: 'Attendance Rate'

   Line 365: "Total Children"
   Context: 'Total Children'

   Line 344: "Unread Messages"
   Context: 'Unread Messages'

   Line 351: "Homework Pending"
   Context: 'Homework Pending'

   Line 358: "Attendance Rate"
   Context: 'Attendance Rate'

   Line 365: "Total Children"
   Context: 'Total Children'

   Line 417: "Check Attendance"
   Context: 'Check Attendance'

   Line 441: "AI Homework Help"
   Context: 'AI Homework Help'

   Line 507: "Quick Actions"
   Context: 'Quick Actions'

   Line 517: "Upgrade required"
   Context: 'Upgrade required'

üìÑ components/dashboard/NewEnhancedParentDashboard_REMOTE_490480.tsx:
   Line 182: "Refresh error:"
   Context: {
      console.error('Refresh error:', _error);
    }

   Line 278: "Needs attention"
   Context: { defaultValue: 'Needs attention' }

   Line 336: "parent.average_grade"
   Context: {
      title: t('parent.average_grade'),
      value: 'B+',
      icon: 'trophy',
      color: theme.secondary,
      trend: 'up'
    }

   Line 459: "enhanced"
   Context: {dashPrefs.layout === 'enhanced' ? 'Classic' : 'Enhanced'}

   Line 183: "Refresh error:"
   Context: console.error('Refresh error:'

   Line 278: "Needs attention"
   Context: 'Needs attention'

üìÑ components/dashboard/NewEnhancedPrincipalDashboard.tsx:
   Line 112: "Refresh error:"
   Context: {
      console.error('Refresh error:', _error);
    }

   Line 207: "Needs attention"
   Context: { defaultValue: 'Needs attention' }

   Line 215: "Loading your dashboard..."
   Context: {
    return <LoadingScreen message="Loading your dashboard..." />;
  }

   Line 216: "Loading your dashboard..."
   Context: message="Loading your dashboard..."

   Line 435: "Double tap to execute this action"
   Context: accessibilityHint="Double tap to execute this action"

   Line 113: "Refresh error:"
   Context: console.error('Refresh error:'

   Line 207: "Needs attention"
   Context: 'Needs attention'

   Line 435: "Double tap to execute this action"
   Context: "Double tap to execute this action"

üìÑ components/dashboard/NewEnhancedTeacherDashboard.tsx:
   Line 106: "Refresh error:"
   Context: {
      console.error('Refresh error:', _error);
    }

   Line 202: "Needs attention"
   Context: { defaultValue: 'Needs attention' }

   Line 385: "enhanced"
   Context: {dashPrefs.layout === 'enhanced' ? 'Classic' : 'Enhanced'}

   Line 107: "Refresh error:"
   Context: console.error('Refresh error:'

   Line 202: "Needs attention"
   Context: 'Needs attention'

üìÑ components/dashboard/ParentDashboard.tsx:
   Line 66: "Failed to get tier from user metadata:"
   Context: {
        console.warn('Failed to get tier from user metadata:', error);
      }

   Line 237: "parent"
   Context: {
            // Approach 2: If no direct links and user is parent role, try preschool-based lookup
            if (profile?.role === 'parent' && mySchoolId) {
              console.log('No direct parent links found, trying preschool-based lookup');
              const { data: preschoolChildren }

   Line 258: "Error loading children:"
   Context: {
          console.error('Error loading children:', error);
        }

   Line 396: "Failed to load dashboard data:"
   Context: {
      console.error('Failed to load dashboard data:', err);
      setError(err instanceof Error ? err.message : 'Unknown error occurred');
    }

   Line 425: "edudash.dashboard.refresh_failed"
   Context: {
      // Track failed refresh
      track('edudash.dashboard.refresh_failed', {
        role: 'parent',
        user_id: user?.id,
        error: error instanceof Error ? error.message : 'Unknown error',
        platform: Platform.OS,
      }

   Line 559: "Failed to load urgent metrics:"
   Context: {
      console.error('Failed to load urgent metrics:', error);
    }

   Line 669: "General Education"
   Context: {
      if (!question.trim()) return;
  
      try {
        const start = Date.now();
        const text = await generate({
          question,
          subject: 'General Education',
          gradeLevel: children.length > 0 ? 8 : 10,
          difficulty: 'easy',
        }

   Line 691: "common.error"
   Context: {
        Alert.alert(t('common.error'), t('ai.homework.error'));
        console.error('Homework help error:', error);
      }

   Line 762: "homework"
   Context: {
case 'homework':
        track('edudash.parent.homework_help_requested', {
          subject: 'General Education',
          child_age: children.length > 0 ? 8 : 10,
          user_id: user?.id,
          children_count: children.length,
          source: 'dashboard_quick_action',
        }

   Line 2083: "Welcome!"
   Context: {
                recentActivities.push(
                  { time: 'Welcome!', event: 'Account created successfully', type: 'success' }

   Line 67: "Failed to get tier from user metadata:"
   Context: console.warn('Failed to get tier from user metadata:'

   Line 240: "No direct parent links found, trying preschool-based lookup"
   Context: console.log('No direct parent links found, trying preschool-based lookup'

   Line 259: "Error loading children:"
   Context: console.error('Error loading children:'

   Line 397: "Failed to load dashboard data:"
   Context: console.error('Failed to load dashboard data:'

   Line 560: "Failed to load urgent metrics:"
   Context: console.error('Failed to load urgent metrics:'

   Line 693: "Homework help error:"
   Context: console.error('Homework help error:'

   Line 398: "Unknown error occurred"
   Context: 'Unknown error occurred'

   Line 430: "Unknown error"
   Context: 'Unknown error'

   Line 676: "General Education"
   Context: 'General Education'

   Line 676: "General Education"
   Context: 'General Education'

   Line 1616: "Welcome to EduDash Pro"
   Context: 'Welcome to EduDash Pro'

   Line 2085: "Account created successfully"
   Context: 'Account created successfully'

   Line 2086: "Link your children to start tracking progress"
   Context: 'Link your children to start tracking progress'

üìÑ components/dashboard/RealtimeActivityFeed.tsx:
   Line 183: "No school ID provided for real-time subscriptions"
   Context: {
    if (!schoolId) {
      console.warn('No school ID provided for real-time subscriptions');
      setConnectionStatus('error');
      return;
    }

   Line 239: "init_1"
   Context: {
    setLoading(true);
    
    try {
      // Create some initial synthetic activities to show the feed is working
      const initialActivities: ActivityFeedItem[] = [
        {
          id: 'init_1',
          type: 'system',
          title: 'Activity Feed Active',
          description: 'Real-time activity monitoring is now active for your school',
          timestamp: new Date().toISOString(),
          priority: 'medium',
          icon: 'pulse',
          color: colors.system,
          actionable: false
        }

   Line 256: "init_2"
   Context: {
          id: 'init_2',
          type: 'system',
          title: 'Dashboard Loaded',
          description: 'Principal dashboard loaded successfully with live data',
          timestamp: new Date(Date.now() - 60000).toISOString(), // 1 minute ago
          priority: 'low',
          icon: 'checkmark-circle',
          color: colors.system,
          actionable: false
        }

   Line 271: "Failed to load initial activities:"
   Context: {
      console.error('Failed to load initial activities:', error);
    }

   Line 307: "activity.just_now"
   Context: {
    const date = new Date(timestamp);
    const now = new Date();
    const diffMs = now.getTime() - date.getTime();
    const diffMins = Math.floor(diffMs / 60000);
    
    if (diffMins < 1) return t('activity.just_now', { defaultValue: 'Just now' }

   Line 349: "activity.high_priority"
   Context: {t('activity.high_priority', { defaultValue: 'High Priority' }

   Line 372: "connected"
   Context: {connectionStatus === 'connected' ? t('activity.live', { defaultValue: 'Live' }

   Line 373: "Connecting..."
   Context: { defaultValue: 'Connecting...' }

   Line 382: "activity.loading"
   Context: {t('activity.loading', { defaultValue: 'Loading activity feed...' }

   Line 391: "activity.recent_activity"
   Context: {t('activity.recent_activity', { defaultValue: 'Recent Activity' }

   Line 427: "activity.no_recent_activity"
   Context: {t('activity.no_recent_activity', { defaultValue: 'No Recent Activity' }

   Line 429: "activity.empty_description"
   Context: {t('activity.empty_description', { defaultValue: 'School activities will appear here in real-time' }

   Line 93: "Student Details"
   Context: Alert.alert('Student Details'

   Line 109: "Payment Details"
   Context: Alert.alert('Payment Details'

   Line 140: "Meeting Details"
   Context: Alert.alert('Meeting Details'

   Line 185: "No school ID provided for real-time subscriptions"
   Context: console.warn('No school ID provided for real-time subscriptions'

   Line 272: "Failed to load initial activities:"
   Context: console.error('Failed to load initial activities:'

   Line 86: "New Student Enrollment"
   Context: 'New Student Enrollment'

   Line 93: "Student Details"
   Context: 'Student Details'

   Line 102: "Payment Received"
   Context: 'Payment Received'

   Line 102: "Payment Update"
   Context: 'Payment Update'

   Line 109: "Payment Details"
   Context: 'Payment Details'

   Line 118: "Teacher Activity"
   Context: 'Teacher Activity'

   Line 140: "Meeting Details"
   Context: 'Meeting Details'

   Line 149: "Attendance Update"
   Context: 'Attendance Update'

   Line 163: "System Activity"
   Context: 'System Activity'

   Line 164: "System activity detected"
   Context: 'System activity detected'

   Line 248: "Activity Feed Active"
   Context: 'Activity Feed Active'

   Line 259: "Dashboard Loaded"
   Context: 'Dashboard Loaded'

   Line 260: "Principal dashboard loaded successfully with live data"
   Context: 'Principal dashboard loaded successfully with live data'

   Line 313: "Just now"
   Context: 'Just now'

   Line 349: "High Priority"
   Context: 'High Priority'

   Line 391: "Recent Activity"
   Context: 'Recent Activity'

   Line 427: "No Recent Activity"
   Context: 'No Recent Activity'

üìÑ components/dashboard/SimpleEnhancedHeader.tsx:
   Line 54: "pro"
   Context: {
    switch (effectiveTier) {
      case 'pro':
        return {
          label: 'Pro',
          color: '#FFB000', // SA Gold
          icon: 'star' as const
        }

   Line 156: "dashboard.whatsapp_not_connected"
   Context: {t('dashboard.whatsapp_not_connected', { defaultValue: 'Not Connected' }

   Line 109: "Open profile settings"
   Context: accessibilityLabel="Open profile settings"

   Line 109: "Open profile settings"
   Context: "Open profile settings"

   Line 156: "Not Connected"
   Context: 'Not Connected'

üìÑ components/dashboard/TeacherDashboard.tsx:
   Line 347: "lesson-generator"
   Context: {
      id: "lesson-generator",
      title: "AI Lesson Generator",
      subtitle: "Create engaging lessons with AI",
      icon: "bulb",
      color: theme.primary,
      onPress: () => {
        if (!hasActiveSeat && (!aiLessonEnabled || !canCreateAssignments)) {
          Alert.alert(
            t("dashboard.ai_upgrade_required_title", {
              defaultValue: "Upgrade Required",
            }

   Line 359: "Your plan does not include this AI feature or your seat is not active."
   Context: {
              defaultValue:
                "Your plan does not include this AI feature or your seat is not active.",
            }

   Line 366: "AI Feature Disabled"
   Context: {
          Alert.alert(
            "AI Feature Disabled",
            "AI Lesson Generator is not enabled in this build.",
          );
          return;
        }

   Line 377: "homework-grader"
   Context: {
      id: "homework-grader",
      title: "Grade Homework",
      subtitle: "Auto-grade assignments with AI",
      icon: "checkmark-circle",
      color: theme.successDark || theme.success,
      onPress: () => {
        if (!hasActiveSeat && (!aiGradingEnabled || !canGradeAssignments)) {
          Alert.alert(
            t("dashboard.ai_upgrade_required_title", {
              defaultValue: "Upgrade Required",
            }

   Line 359: "Your plan does not include this AI feature or your seat is not active."
   Context: {
              defaultValue:
                "Your plan does not include this AI feature or your seat is not active.",
            }

   Line 396: "AI Feature Disabled"
   Context: {
          Alert.alert(
            "AI Feature Disabled",
            "AI Homework Grader is not enabled in this build.",
          );
          return;
        }

   Line 407: "homework-helper"
   Context: {
      id: "homework-helper",
      title: "Homework Helper",
      subtitle: "Child-safe, step-by-step guidance",
      icon: "help-circle",
      color: theme.infoDark || theme.info,
      onPress: () => {
        if (!aiHelperEnabled) {
          Alert.alert(
            "AI Tool Disabled",
            "AI Homework Helper is not enabled for this build.",
          );
          return;
        }

   Line 425: "progress-analysis"
   Context: {
      id: "progress-analysis",
      title: "Progress Analysis",
      subtitle: "AI-powered student insights",
      icon: "analytics",
      color: theme.accentDark || theme.accent,
      onPress: () => {
        if (!hasActiveSeat && !canViewAnalytics) {
          Alert.alert(
            "Unavailable",
            "Your seat does not permit access to analytics yet.",
          );
          return;
        }

   Line 448: "take-attendance"
   Context: {
      id: "take-attendance",
      title: "Take Attendance",
      icon: "checkmark-done",
      color: theme.successDark || theme.success,
      onPress: () => {
        router.push("/screens/attendance");
      }

   Line 458: "lessons-hub"
   Context: {
      id: "lessons-hub",
      title: "Lessons Hub",
      icon: "library-outline",
      color: theme.primary,
      onPress: async () => {
        await maybeShowInterstitial('teacher_dashboard_lessons_hub');
        router.push("/screens/lessons-hub");
      }

   Line 469: "saved-lessons"
   Context: {
      id: "saved-lessons",
      title: "Saved Lessons",
      icon: "library",
      color: theme.accent || theme.primary,
      onPress: async () => {
        await maybeShowInterstitial('teacher_dashboard_saved_lessons');
        router.push("/screens/lessons-hub");
      }

   Line 480: "message-parents"
   Context: {
      id: "message-parents",
      title: "Message Parents",
      icon: "chatbubbles",
      color: theme.accentDark || theme.accent,
      onPress: async () => {
        await maybeShowInterstitial('teacher_dashboard_message_parents');
        router.push("/screens/teacher-messages");
      }

   Line 491: "view-reports"
   Context: {
      id: "view-reports",
      title: "View Reports",
      icon: "document-text",
      color: theme.errorDark || theme.error,
      onPress: async () => {
        await maybeShowInterstitial('teacher_dashboard_view_reports');
        router.push("/screens/teacher-reports");
      }

   Line 502: "whatsapp-connect"
   Context: {
      id: "whatsapp-connect",
      title: connectionStatus.isConnected ? "WhatsApp Connected" : "Connect WhatsApp",
      icon: "logo-whatsapp",
      color: "#25D366",
      onPress: () => {
        track('edudash.whatsapp.quick_action_pressed', {
          connected: connectionStatus.isConnected,
          timestamp: new Date().toISOString()
        }

   Line 619: "graded"
   Context: {assignment.status === "graded"
              ? "Graded"
              : assignment.status === "overdue"
                ? "Overdue"
                : "Pending"}

   Line 706: "dashboard.ai_upgrade_required_cta"
   Context: {t("dashboard.ai_upgrade_required_cta", {
                defaultValue: "Upgrade to use",
              }

   Line 773: "pending"
   Context: {seatStatus === "pending"
          ? "Access Restricted - Seat Pending"
          : "Access Restricted - No Active Seat"}

   Line 778: "pending"
   Context: {seatStatus === "pending"
          ? "Your teacher seat is pending approval. Ask your administrator to assign a seat."
          : "Your teacher account needs an active seat to access all features. Request a seat from your administrator."}

   Line 857: "seat-status-profile"
   Context: {
    let channelProfile: any;
    let channelSeats: any;
    (async () => {
      try {
        const id = user?.id;
        if (!id) return;
        const client = assertSupabase();
        // Profile updates
        channelProfile = client
          .channel("seat-status-profile")
          .on(
            "postgres_changes",
            {
              event: "UPDATE",
              schema: "public",
              table: "profiles",
              filter: `id=eq.${id}

   Line 880: "Failed to refresh profile:"
   Context: {
                console.warn("Failed to refresh profile:", err);
              }

   Line 901: "Failed to refresh after seat change:"
   Context: {
                console.warn("Failed to refresh after seat change:", err);
              }

   Line 907: "Failed to set up subscriptions:"
   Context: {
        console.warn("Failed to set up subscriptions:", err);
      }

   Line 912: "Failed to unsubscribe profile:"
   Context: { console.warn("Failed to unsubscribe profile:", err); }

   Line 913: "Failed to unsubscribe seats:"
   Context: { console.warn("Failed to unsubscribe seats:", err); }

   Line 998: "teacher"
   Context: {profile?.role === "teacher"
                        ? "Teacher"
                        : "Teacher"}

   Line 1168: "dashboard.ai_tools_info"
   Context: {t("dashboard.ai_tools_info", {
                defaultValue:
                  "AI runs on a secure server. Access and usage are limited by your plan or trial.",
              }

   Line 1203: "dashboard.ai_upgrade_nudge"
   Context: {t("dashboard.ai_upgrade_nudge", {
                    defaultValue: "Unlock AI tools with Basic, Premium or Pro.",
                  }

   Line 1210: "dashboard.upgrade_now"
   Context: {t("dashboard.upgrade_now", {
                        defaultValue: "Upgrade now",
                      }

   Line 1217: "dashboard.see_plans"
   Context: {t("dashboard.see_plans", { defaultValue: "See plans" }

   Line 1400: "Upgrade failed"
   Context: {
                  Alert.alert(
                    "Upgrade failed",
                    e?.message || "Please try again",
                  );
                }

   Line 1400: "Upgrade failed"
   Context: {
                  Alert.alert(
                    "Upgrade failed",
                    e?.message || "Please try again",
                  );
                }

   Line 1582: "WhatsApp Connected!"
   Context: {() => {
          setShowWhatsAppModal(false);
          Alert.alert('WhatsApp Connected!', 'You can now receive school updates via WhatsApp.');
        }

   Line 963: "Toggles between classic and enhanced dashboard layouts"
   Context: accessibilityHint="Toggles between classic and enhanced dashboard layouts"

   Line 1224: "Dismiss upgrade message"
   Context: accessibilityLabel="Dismiss upgrade message"

   Line 367: "AI Feature Disabled"
   Context: Alert.alert(
            "AI Feature Disabled"

   Line 367: "AI Feature Disabled"
   Context: Alert.alert(
            "AI Feature Disabled"

   Line 415: "AI Tool Disabled"
   Context: Alert.alert(
            "AI Tool Disabled"

   Line 731: "Unlocked!"
   Context: Alert.alert('Unlocked!'

   Line 830: "Request Sent"
   Context: Alert.alert(
                  "Request Sent"

   Line 881: "Failed to refresh profile:"
   Context: console.warn("Failed to refresh profile:"

   Line 902: "Failed to refresh after seat change:"
   Context: console.warn("Failed to refresh after seat change:"

   Line 908: "Failed to set up subscriptions:"
   Context: console.warn("Failed to set up subscriptions:"

   Line 912: "Failed to unsubscribe profile:"
   Context: console.warn("Failed to unsubscribe profile:"

   Line 913: "Failed to unsubscribe seats:"
   Context: console.warn("Failed to unsubscribe seats:"

   Line 1401: "Upgrade failed"
   Context: Alert.alert(
                    "Upgrade failed"

   Line 1401: "Upgrade failed"
   Context: Alert.alert(
                    "Upgrade failed"

   Line 1584: "WhatsApp Connected!"
   Context: Alert.alert('WhatsApp Connected!'

   Line 349: "AI Lesson Generator"
   Context: "AI Lesson Generator"

   Line 350: "Create engaging lessons with AI"
   Context: "Create engaging lessons with AI"

   Line 357: "Upgrade Required"
   Context: "Upgrade Required"

   Line 368: "AI Feature Disabled"
   Context: "AI Feature Disabled"

   Line 379: "Grade Homework"
   Context: "Grade Homework"

   Line 357: "Upgrade Required"
   Context: "Upgrade Required"

   Line 368: "AI Feature Disabled"
   Context: "AI Feature Disabled"

   Line 409: "Homework Helper"
   Context: "Homework Helper"

   Line 416: "AI Tool Disabled"
   Context: "AI Tool Disabled"

   Line 427: "Progress Analysis"
   Context: "Progress Analysis"

   Line 450: "Take Attendance"
   Context: "Take Attendance"

   Line 460: "Lessons Hub"
   Context: "Lessons Hub"

   Line 471: "Saved Lessons"
   Context: "Saved Lessons"

   Line 482: "Message Parents"
   Context: "Message Parents"

   Line 504: "WhatsApp Connected"
   Context: "WhatsApp Connected"

   Line 504: "Connect WhatsApp"
   Context: "Connect WhatsApp"

   Line 707: "Upgrade to use"
   Context: "Upgrade to use"

   Line 831: "Request Sent"
   Context: "Request Sent"

   Line 838: "Could not send request"
   Context: "Could not send request"

   Line 963: "Toggles between classic and enhanced dashboard layouts"
   Context: "Toggles between classic and enhanced dashboard layouts"

   Line 1211: "Upgrade now"
   Context: "Upgrade now"

   Line 1217: "See plans"
   Context: "See plans"

   Line 1224: "Dismiss upgrade message"
   Context: "Dismiss upgrade message"

   Line 1402: "Upgrade failed"
   Context: "Upgrade failed"

   Line 1403: "Please try again"
   Context: "Please try again"

   Line 1402: "Upgrade failed"
   Context: "Upgrade failed"

   Line 1403: "Please try again"
   Context: "Please try again"

üìÑ components/debug/IconTest.tsx:
   Line 15: "Icon rendering error:"
   Context: {
      console.warn('Icon rendering error:', error);
    }

   Line 16: "Icon rendering error:"
   Context: console.warn('Icon rendering error:'

üìÑ components/debug/RoleDebugger.tsx:
   Line 67: "No rows were updated. User profile may not exist."
   Context: {
                throw new Error('No rows were updated. User profile may not exist.');
              }

   Line 87: "Unknown error occurred"
   Context: {
              const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred';
              console.error('üîß Role update failed:', error);
              Alert.alert(
                'Error', 
                `Failed to update role: ${errorMessage}

   Line 173: "Copy to Clipboard"
   Context: { text: 'Copy to Clipboard', onPress: () => {
                      if (typeof navigator !== 'undefined' && navigator.clipboard) {
                        navigator.clipboard.writeText(sqlQuery);
                        Alert.alert('Copied', 'SQL query copied to clipboard');
                      }

   Line 24: "Profile refresh error:"
   Context: console.error('Profile refresh error:'

   Line 36: "Confirm Role Change"
   Context: Alert.alert(
      'Confirm Role Change'

   Line 169: "Manual SQL Query"
   Context: Alert.alert(
                  'Manual SQL Query'

   Line 21: "Profile refreshed successfully"
   Context: 'Profile refreshed successfully'

   Line 23: "Failed to refresh profile"
   Context: 'Failed to refresh profile'

   Line 32: "No user found"
   Context: 'No user found'

   Line 37: "Confirm Role Change"
   Context: 'Confirm Role Change'

   Line 88: "Unknown error occurred"
   Context: 'Unknown error occurred'

   Line 170: "Manual SQL Query"
   Context: 'Manual SQL Query'

   Line 173: "Copy to Clipboard"
   Context: 'Copy to Clipboard'

   Line 176: "SQL query copied to clipboard"
   Context: 'SQL query copied to clipboard'

   Line 68: "No rows were updated. User profile may not exist."
   Context: throw new Error('No rows were updated. User profile may not exist.'

üìÑ components/debug/UpdateDebugPanel.tsx:
   Line 62: "Failed to load update info:"
   Context: {
      console.warn('Failed to load update info:', error);
    }

   Line 67: "Updates Disabled"
   Context: {
    if (!Updates.isEnabled) {
      Alert.alert('Updates Disabled', 'Updates are disabled in this build.');
      return;
    }

   Line 73: "[UpdateDebug] Checking for updates..."
   Context: {
      setChecking(true);
      console.log('[UpdateDebug] Checking for updates...');
      
      const result = await Updates.checkForUpdateAsync();
      console.log('[UpdateDebug] Check result:', result);
      
      if (result.isAvailable) {
        Alert.alert(
          'Update Available',
          `New update found!\nManifest ID: ${result.manifest?.id}

   Line 86: "Fetch Now"
   Context: { text: 'Fetch Now', onPress: handleFetchUpdate }

   Line 89: "No Update"
   Context: {
        Alert.alert('No Update', 'You are already running the latest version.');
      }

   Line 95: "[UpdateDebug] Check failed:"
   Context: {
      console.error('[UpdateDebug] Check failed:', error);
      Alert.alert('Check Failed', `Error: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 67: "Updates Disabled"
   Context: {
    if (!Updates.isEnabled) {
      Alert.alert('Updates Disabled', 'Updates are disabled in this build.');
      return;
    }

   Line 109: "[UpdateDebug] Fetching update..."
   Context: {
      setFetching(true);
      console.log('[UpdateDebug] Fetching update...');
      
      const result = await Updates.fetchUpdateAsync();
      console.log('[UpdateDebug] Fetch result:', result);
      
      if (result.isNew) {
        Alert.alert(
          'Update Downloaded',
          'New update has been downloaded and is ready to apply. The app will restart.',
          [
            { text: 'Cancel', style: 'cancel' }

   Line 122: "Restart Now"
   Context: { text: 'Restart Now', onPress: handleReload }

   Line 125: "No New Update"
   Context: {
        Alert.alert('No New Update', 'The latest update was already cached.');
      }

   Line 131: "[UpdateDebug] Fetch failed:"
   Context: {
      console.error('[UpdateDebug] Fetch failed:', error);
      Alert.alert('Fetch Failed', `Error: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 143: "[UpdateDebug] Reload failed:"
   Context: {
      console.error('[UpdateDebug] Reload failed:', error);
      Alert.alert('Reload Failed', `Error: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 225: "Checking..."
   Context: {checking ? 'Checking...' : 'Check for Update'}

   Line 240: "Fetching..."
   Context: {fetching ? 'Fetching...' : 'Fetch Update'}

   Line 357: "ios"
   Context: {
    fontSize: 14,
    flex: 1,
    fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace',
  }

   Line 382: "ios"
   Context: {
    fontSize: 12,
    fontFamily: Platform.OS === 'ios' ? 'Menlo' : 'monospace',
    lineHeight: 16,
  }

   Line 186: "App Version"
   Context: label="App Version"

   Line 189: "Updates Enabled"
   Context: label="Updates Enabled"

   Line 195: "Update ID"
   Context: label="Update ID"

   Line 196: "Runtime Version"
   Context: label="Runtime Version"

   Line 199: "Emergency Launch"
   Context: label="Emergency Launch"

   Line 204: "Last Check"
   Context: label="Last Check"

   Line 63: "Failed to load update info:"
   Context: console.warn('Failed to load update info:'

   Line 69: "Updates Disabled"
   Context: Alert.alert('Updates Disabled'

   Line 81: "Update Available"
   Context: Alert.alert(
          'Update Available'

   Line 90: "No Update"
   Context: Alert.alert('No Update'

   Line 97: "Check Failed"
   Context: Alert.alert('Check Failed'

   Line 69: "Updates Disabled"
   Context: Alert.alert('Updates Disabled'

   Line 117: "Update Downloaded"
   Context: Alert.alert(
          'Update Downloaded'

   Line 126: "No New Update"
   Context: Alert.alert('No New Update'

   Line 133: "Fetch Failed"
   Context: Alert.alert('Fetch Failed'

   Line 145: "Reload Failed"
   Context: Alert.alert('Reload Failed'

   Line 69: "Updates Disabled"
   Context: 'Updates Disabled'

   Line 82: "Update Available"
   Context: 'Update Available'

   Line 86: "Fetch Now"
   Context: 'Fetch Now'

   Line 90: "No Update"
   Context: 'No Update'

   Line 97: "Check Failed"
   Context: 'Check Failed'

   Line 97: "Unknown error"
   Context: 'Unknown error'

   Line 69: "Updates Disabled"
   Context: 'Updates Disabled'

   Line 118: "Update Downloaded"
   Context: 'Update Downloaded'

   Line 122: "Restart Now"
   Context: 'Restart Now'

   Line 126: "No New Update"
   Context: 'No New Update'

   Line 133: "Fetch Failed"
   Context: 'Fetch Failed'

   Line 97: "Unknown error"
   Context: 'Unknown error'

   Line 145: "Reload Failed"
   Context: 'Reload Failed'

   Line 97: "Unknown error"
   Context: 'Unknown error'

   Line 186: "App Version"
   Context: "App Version"

   Line 189: "Updates Enabled"
   Context: "Updates Enabled"

   Line 195: "Update ID"
   Context: "Update ID"

   Line 196: "Runtime Version"
   Context: "Runtime Version"

   Line 199: "Emergency Launch"
   Context: "Emergency Launch"

   Line 204: "Last Check"
   Context: "Last Check"

   Line 225: "Check for Update"
   Context: 'Check for Update'

   Line 240: "Fetch Update"
   Context: 'Fetch Update'

üìÑ components/features/MeetingRoomSystem.tsx:
   Line 130: "Unknown Host"
   Context: {
        id: meeting.id,
        title: meeting.title,
        description: meeting.description,
        startTime: meeting.start_time,
        endTime: meeting.end_time,
        hostId: meeting.host_id,
        hostName: meeting.host_name || 'Unknown Host',
        participants: meeting.meeting_participants?.map((p: any) => ({
          id: p.id,
          name: p.participant_name,
          email: p.participant_email,
          role: p.role,
          status: p.status,
          joinTime: p.join_time,
          leaveTime: p.leave_time
        }

   Line 154: "Failed to load meetings:"
   Context: {
      console.error('Failed to load meetings:', error);
      // Show empty state with error message instead of mock data
      setMeetings([]);
    }

   Line 190: "Failed to load meeting rooms:"
   Context: {
      console.error('Failed to load meeting rooms:', error);
      // Show empty state with error message instead of mock data
      setMeetingRooms([]);
    }

   Line 259: "Failed to schedule meeting:"
   Context: {
      console.error('Failed to schedule meeting:', error);
      Alert.alert('Error', 'Failed to schedule meeting. Please try again.');
    }

   Line 367: "In Use"
   Context: {item.isActive ? 'In Use' : 'Available'}

   Line 379: "videoCall"
   Context: {feature === 'videoCall' ? 'Video' :
                 feature === 'screenShare' ? 'Screen Share' :
                 feature === 'whiteboard' ? 'Whiteboard' :
                 feature.charAt(0).toUpperCase() + feature.slice(1)}

   Line 474: "meetings"
   Context: {[
            { key: 'meetings', label: 'Meetings', icon: 'calendar' }

   Line 476: "rooms"
   Context: { key: 'rooms', label: 'Rooms', icon: 'business' }

   Line 477: "schedule"
   Context: { key: 'schedule', label: 'Schedule', icon: 'add-circle' }

   Line 633: "start"
   Context: {showDatePicker === 'start' ? 'Start' : 'End'}

   Line 640: "start"
   Context: {(showDatePicker === 'start' ? newMeeting.startTime : newMeeting.endTime)
                      .toISOString().split('T')[0]}

   Line 642: "start"
   Context: {(text) => {
                      const currentTime = showDatePicker === 'start' ? newMeeting.startTime : newMeeting.endTime;
                      const newDate = new Date(text + 'T' + currentTime.toTimeString().slice(0, 5));
                      if (!isNaN(newDate.getTime())) {
                        if (showDatePicker === 'start') {
                          setNewMeeting(prev => ({ ...prev, startTime: newDate }

   Line 533: "Enter meeting title"
   Context: placeholder="Enter meeting title"

   Line 543: "Meeting description (optional)"
   Context: placeholder="Meeting description (optional)"

   Line 155: "Failed to load meetings:"
   Context: console.error('Failed to load meetings:'

   Line 191: "Failed to load meeting rooms:"
   Context: console.error('Failed to load meeting rooms:'

   Line 260: "Failed to schedule meeting:"
   Context: console.error('Failed to schedule meeting:'

   Line 137: "Unknown Host"
   Context: 'Unknown Host'

   Line 206: "Please enter a meeting title"
   Context: 'Please enter a meeting title'

   Line 211: "Please select a meeting room"
   Context: 'Please select a meeting room'

   Line 367: "In Use"
   Context: 'In Use'

   Line 380: "Screen Share"
   Context: 'Screen Share'

   Line 533: "Enter meeting title"
   Context: "Enter meeting title"

üìÑ components/lessons/LessonsHub.tsx:
   Line 97: "Error loading lessons hub data:"
   Context: {
      console.error('Error loading lessons hub data:', error);
    }

   Line 313: "[LessonsHub] myGeneratedLessons:"
   Context: {
    console.log('[LessonsHub] myGeneratedLessons:', myGeneratedLessons.length, 'featuredLessons:', featuredLessons.length);
    
    // Show available lessons prioritizing: myGenerated -> featured -> recent -> popular
    let displayLessons = myGeneratedLessons;
    let sectionLabel = "My AI-Generated Lessons";
    
    if (displayLessons.length === 0) {
      displayLessons = featuredLessons;
      console.log('[LessonsHub] Using featured lessons as fallback');
    }

   Line 183: "Search lessons, topics, or skills..."
   Context: placeholder="Search lessons, topics, or skills..."

   Line 98: "Error loading lessons hub data:"
   Context: console.error('Error loading lessons hub data:'

üìÑ components/pdf/GenerationProgress.tsx:
   Line 169: "parse"
   Context: { key: 'parse', label: 'Analyzing content', icon: 'search-outline' }

   Line 170: "retrieve"
   Context: { key: 'retrieve', label: 'Gathering data', icon: 'cloud-download-outline' }

   Line 171: "compose"
   Context: { key: 'compose', label: 'Composing layout', icon: 'construct-outline' }

   Line 172: "render"
   Context: { key: 'render', label: 'Rendering PDF', icon: 'document-text-outline' }

   Line 173: "upload"
   Context: { key: 'upload', label: 'Finalizing', icon: 'checkmark-circle-outline' }

   Line 268: "Processing..."
   Context: {phases[currentPhaseIndex]?.label || 'Processing...'}

   Line 343: "Cancel PDF generation"
   Context: accessibilityLabel="Cancel PDF generation"

   Line 169: "Analyzing content"
   Context: 'Analyzing content'

   Line 170: "Gathering data"
   Context: 'Gathering data'

   Line 171: "Composing layout"
   Context: 'Composing layout'

   Line 172: "Rendering PDF"
   Context: 'Rendering PDF'

   Line 343: "Cancel PDF generation"
   Context: "Cancel PDF generation"

üìÑ components/pdf/PDFActionBar.tsx:
   Line 206: "Generating PDF..."
   Context: {isGenerating ? 'Generating PDF...' : 
                             !hasPreview && !previewError ? 'Generate preview first' : 'Generate PDF'}

   Line 236: "Generating..."
   Context: {isGenerating ? 'Generating...' : 
             !hasPreview && !previewError ? 'Preview First' : 
             previewError ? 'Generate Anyway' : 'Generate PDF'}

   Line 175: "Generate preview"
   Context: accessibilityLabel="Generate preview"

   Line 250: "Save draft"
   Context: accessibilityLabel="Save draft"

   Line 175: "Generate preview"
   Context: "Generate preview"

   Line 207: "Generate preview first"
   Context: 'Generate preview first'

   Line 207: "Generate PDF"
   Context: 'Generate PDF'

   Line 237: "Preview First"
   Context: 'Preview First'

   Line 238: "Generate Anyway"
   Context: 'Generate Anyway'

   Line 207: "Generate PDF"
   Context: 'Generate PDF'

   Line 250: "Save draft"
   Context: "Save draft"

üìÑ components/pdf/PDFNotificationBanner.tsx:
   Line 201: "Dismiss notification"
   Context: accessibilityLabel="Dismiss notification"

   Line 201: "Dismiss notification"
   Context: "Dismiss notification"

üìÑ components/pdf/PDFPreviewPanel.tsx:
   Line 161: "Segoe UI"
   Context: {
          margin: 0;
          padding: 0;
          font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, sans-serif;
          background: white;
        }

   Line 203: "Page Break"
   Context: {
            content: 'Page Break';
            position: absolute;
            right: 0;
            top: -10px;
            font-size: 10px;
            color: #999;
            background: white;
            padding: 0 5px;
          }

   Line 229: "UTF-8"
   Context: charset="UTF-8"

   Line 356: "Zoom out"
   Context: accessibilityLabel="Zoom out"

   Line 364: "Zoom in"
   Context: accessibilityLabel="Zoom in"

   Line 375: "Toggle margins"
   Context: accessibilityLabel="Toggle margins"

   Line 390: "Toggle edit mode"
   Context: accessibilityLabel="Toggle edit mode"

   Line 164: "Segoe UI"
   Context: 'Segoe UI'

   Line 204: "Page Break"
   Context: 'Page Break'

   Line 356: "Zoom out"
   Context: "Zoom out"

   Line 364: "Zoom in"
   Context: "Zoom in"

   Line 375: "Toggle margins"
   Context: "Toggle margins"

   Line 390: "Toggle edit mode"
   Context: "Toggle edit mode"

üìÑ components/pdf/PDFViewer.tsx:
   Line 191: "UTF-8"
   Context: {
    if (!uri) return null;

    return `
      <!DOCTYPE html>
      <html>
        <head>
          <meta charset="UTF-8">
          <meta name="viewport" content="width=device-width, initial-scale=${zoom}

   Line 268: "application/pdf"
   Context: {
    if (!uri) return;

    try {
      if (await Sharing.isAvailableAsync()) {
        await Sharing.shareAsync(uri, {
          mimeType: 'application/pdf',
          dialogTitle: `Share ${filename || 'PDF'}

   Line 277: "Sharing not available"
   Context: {
        Alert.alert('Sharing not available', 'Sharing is not supported on this device');
      }

   Line 280: "Sharing failed"
   Context: {
      Alert.alert('Sharing failed', 'Could not share the PDF');
    }

   Line 300: "Print failed"
   Context: {
      Alert.alert('Print failed', 'Could not print the PDF');
    }

   Line 324: "Download failed"
   Context: {
      Alert.alert('Download failed', 'Could not download the PDF');
    }

   Line 364: "PDF Document"
   Context: {filename || 'PDF Document'}

   Line 364: "PDF Document"
   Context: {filename || 'PDF Document'}

   Line 198: "UTF-8"
   Context: charset="UTF-8"

   Line 278: "Sharing not available"
   Context: Alert.alert('Sharing not available'

   Line 281: "Sharing failed"
   Context: Alert.alert('Sharing failed'

   Line 301: "Print failed"
   Context: Alert.alert('Print failed'

   Line 325: "Download failed"
   Context: Alert.alert('Download failed'

   Line 278: "Sharing not available"
   Context: 'Sharing not available'

   Line 278: "Sharing is not supported on this device"
   Context: 'Sharing is not supported on this device'

   Line 281: "Sharing failed"
   Context: 'Sharing failed'

   Line 281: "Could not share the PDF"
   Context: 'Could not share the PDF'

   Line 301: "Print failed"
   Context: 'Print failed'

   Line 301: "Could not print the PDF"
   Context: 'Could not print the PDF'

   Line 325: "Download failed"
   Context: 'Download failed'

   Line 325: "Could not download the PDF"
   Context: 'Could not download the PDF'

   Line 364: "PDF Document"
   Context: 'PDF Document'

   Line 364: "PDF Document"
   Context: 'PDF Document'

   Line 442: "Failed to load PDF"
   Context: 'Failed to load PDF'

üìÑ components/pdf/tabs/PromptTab.tsx:
   Line 244: "Enter a title for your document..."
   Context: placeholder="Enter a title for your document..."

   Line 301: "Describe what you want in your PDF. Be as detailed as possible..."
   Context: placeholder="Describe what you want in your PDF. Be as detailed as possible..."

   Line 199: "Create a parent letter about upcoming school events"
   Context: 'Create a parent letter about upcoming school events'

   Line 200: "Generate a progress report for a student"
   Context: 'Generate a progress report for a student'

   Line 201: "Write a lesson plan for teaching fractions"
   Context: 'Write a lesson plan for teaching fractions'

   Line 202: "Compose a newsletter with school updates"
   Context: 'Compose a newsletter with school updates'

   Line 203: "Draft a worksheet for vocabulary practice"
   Context: 'Draft a worksheet for vocabulary practice'

üìÑ components/pricing/ComparisonTable.tsx:
   Line 77: "free"
   Context: {
    'free': 'Free',
    'parent-starter': 'Parent Starter',
    'parent-plus': 'Parent Plus',
    'private-teacher': 'Private Teacher',
    'pro': 'Pro',
    'preschool-pro': 'Preschool Pro',
    'enterprise': 'Enterprise (K-12)',
  }

   Line 126: "AI Lesson Generator"
   Context: { name: 'AI Lesson Generator', category: 'ai', description: 'Create CAPS-aligned lessons automatically', icon: 'document-text' }

   Line 127: "AI Grading Assistant"
   Context: { name: 'AI Grading Assistant', category: 'ai', description: 'Automated grading with feedback', icon: 'checkmark-circle' }

   Line 128: "Homework Helper"
   Context: { name: 'Homework Helper', category: 'ai', description: 'AI-powered homework assistance', icon: 'school' }

   Line 129: "Model Selection"
   Context: { name: 'Model Selection', category: 'ai', description: 'Choose AI model (Haiku/Sonnet/Opus)', icon: 'settings' }

   Line 132: "Mobile App Access"
   Context: { name: 'Mobile App Access', category: 'core', description: 'Full mobile application', icon: 'phone-portrait' }

   Line 133: "Basic Dashboard"
   Context: { name: 'Basic Dashboard', category: 'core', description: 'Essential dashboard features', icon: 'grid' }

   Line 134: "Progress Tracking"
   Context: { name: 'Progress Tracking', category: 'core', description: 'Student progress monitoring', icon: 'trending-up' }

   Line 135: "Communication Tools"
   Context: { name: 'Communication Tools', category: 'core', description: 'Parent-teacher messaging', icon: 'chatbubbles' }

   Line 138: "Org-level AI Allocation"
   Context: { name: 'Org-level AI Allocation', category: 'advanced', description: 'Distribute AI usage across organization', icon: 'business' }

   Line 139: "Advanced Analytics"
   Context: { name: 'Advanced Analytics', category: 'advanced', description: 'Detailed reports and insights', icon: 'analytics' }

   Line 140: "SSO Integration"
   Context: { name: 'SSO Integration', category: 'advanced', description: 'Single sign-on capability', icon: 'key' }

   Line 141: "Principal Hub"
   Context: { name: 'Principal Hub', category: 'advanced', description: 'Administrative management tools', icon: 'person-circle' }

   Line 144: "Email Support"
   Context: { name: 'Email Support', category: 'support', description: 'Email customer support', icon: 'mail' }

   Line 145: "Priority Support"
   Context: { name: 'Priority Support', category: 'support', description: 'Faster response times', icon: 'flash' }

   Line 146: "Phone Support"
   Context: { name: 'Phone Support', category: 'support', description: 'Direct phone assistance', icon: 'call' }

   Line 147: "Dedicated Manager"
   Context: { name: 'Dedicated Manager', category: 'support', description: 'Personal account manager', icon: 'person' }

   Line 150: "AI Lesson Generator"
   Context: {
    'AI Lesson Generator': { free: 5, 'parent-starter': 0, 'parent-plus': 0, 'private-teacher': 20, pro: 50, 'preschool-pro': 50, enterprise: 5000 }

   Line 160: "parent-starter"
   Context: { free: false, 'parent-starter': false, 'parent-plus': 'Basic', 'private-teacher': 'Standard', pro: 'Advanced', 'preschool-pro': 'Enterprise', enterprise: 'Enterprise' }

   Line 160: "parent-starter"
   Context: { free: false, 'parent-starter': false, 'parent-plus': 'Basic', 'private-teacher': 'Standard', pro: 'Advanced', 'preschool-pro': 'Enterprise', enterprise: 'Enterprise' }

   Line 172: "AI-Powered Features"
   Context: {
    ai: 'AI-Powered Features',
    core: 'Core Features', 
    advanced: 'Advanced Features',
    support: 'Support & Services'
  }

   Line 209: "cards"
   Context: {viewMode === 'cards' ? 'Table View' : 'Card View'}

   Line 209: "cards"
   Context: {viewMode === 'cards' ? 'Table View' : 'Card View'}

   Line 58: "Special pricing"
   Context: 'Special pricing'

   Line 79: "Parent Starter"
   Context: 'Parent Starter'

   Line 80: "Parent Plus"
   Context: 'Parent Plus'

   Line 81: "Private Teacher"
   Context: 'Private Teacher'

   Line 83: "Preschool Pro"
   Context: 'Preschool Pro'

   Line 126: "AI Lesson Generator"
   Context: 'AI Lesson Generator'

   Line 127: "AI Grading Assistant"
   Context: 'AI Grading Assistant'

   Line 127: "Automated grading with feedback"
   Context: 'Automated grading with feedback'

   Line 128: "Homework Helper"
   Context: 'Homework Helper'

   Line 129: "Model Selection"
   Context: 'Model Selection'

   Line 132: "Mobile App Access"
   Context: 'Mobile App Access'

   Line 132: "Full mobile application"
   Context: 'Full mobile application'

   Line 133: "Basic Dashboard"
   Context: 'Basic Dashboard'

   Line 133: "Essential dashboard features"
   Context: 'Essential dashboard features'

   Line 134: "Progress Tracking"
   Context: 'Progress Tracking'

   Line 134: "Student progress monitoring"
   Context: 'Student progress monitoring'

   Line 135: "Communication Tools"
   Context: 'Communication Tools'

   Line 138: "Distribute AI usage across organization"
   Context: 'Distribute AI usage across organization'

   Line 139: "Advanced Analytics"
   Context: 'Advanced Analytics'

   Line 139: "Detailed reports and insights"
   Context: 'Detailed reports and insights'

   Line 140: "SSO Integration"
   Context: 'SSO Integration'

   Line 141: "Principal Hub"
   Context: 'Principal Hub'

   Line 141: "Administrative management tools"
   Context: 'Administrative management tools'

   Line 144: "Email Support"
   Context: 'Email Support'

   Line 144: "Email customer support"
   Context: 'Email customer support'

   Line 145: "Priority Support"
   Context: 'Priority Support'

   Line 145: "Faster response times"
   Context: 'Faster response times'

   Line 146: "Phone Support"
   Context: 'Phone Support'

   Line 146: "Direct phone assistance"
   Context: 'Direct phone assistance'

   Line 147: "Dedicated Manager"
   Context: 'Dedicated Manager'

   Line 147: "Personal account manager"
   Context: 'Personal account manager'

   Line 126: "AI Lesson Generator"
   Context: 'AI Lesson Generator'

   Line 127: "AI Grading Assistant"
   Context: 'AI Grading Assistant'

   Line 128: "Homework Helper"
   Context: 'Homework Helper'

   Line 129: "Model Selection"
   Context: 'Model Selection'

   Line 132: "Mobile App Access"
   Context: 'Mobile App Access'

   Line 133: "Basic Dashboard"
   Context: 'Basic Dashboard'

   Line 134: "Progress Tracking"
   Context: 'Progress Tracking'

   Line 135: "Communication Tools"
   Context: 'Communication Tools'

   Line 139: "Advanced Analytics"
   Context: 'Advanced Analytics'

   Line 140: "SSO Integration"
   Context: 'SSO Integration'

   Line 141: "Principal Hub"
   Context: 'Principal Hub'

   Line 144: "Email Support"
   Context: 'Email Support'

   Line 145: "Priority Support"
   Context: 'Priority Support'

   Line 146: "Phone Support"
   Context: 'Phone Support'

   Line 147: "Dedicated Manager"
   Context: 'Dedicated Manager'

   Line 167: "Priority Processing"
   Context: 'Priority Processing'

   Line 168: "Advanced Reports"
   Context: 'Advanced Reports'

   Line 174: "Core Features"
   Context: 'Core Features'

   Line 175: "Advanced Features"
   Context: 'Advanced Features'

üìÑ components/pricing/PricingComparisonTable.tsx:
   Line 36: "free"
   Context: {
    id: 'free',
    name: 'Free',
    price_monthly: 'R0',
    price_annual: 'R0',
    description: 'Basic tools for individual parents',
    cta_text: 'Get Started',
    target_audience: 'Individual Parents'
  }

   Line 45: "parent_starter"
   Context: {
    id: 'parent_starter',
    name: 'Parent Starter',
    price_monthly: 'R49',
    price_annual: 'R490',
    description: 'Enhanced features for active parents',
    cta_text: 'Choose Starter',
    target_audience: 'Active Parents'
  }

   Line 54: "parent_plus"
   Context: {
    id: 'parent_plus',
    name: 'Parent Plus',
    price_monthly: 'R149',
    price_annual: 'R1,490',
    description: 'Complete solution for engaged families',
    popular: true,
    cta_text: 'Choose Plus',
    target_audience: 'Engaged Families'
  }

   Line 64: "private_teacher"
   Context: {
    id: 'private_teacher',
    name: 'Private Teacher',
    price_monthly: 'R299',
    price_annual: 'R2,990',
    description: 'Professional tools for individual educators',
    cta_text: 'For Teachers',
    target_audience: 'Private Educators'
  }

   Line 73: "pro"
   Context: {
    id: 'pro',
    name: 'Pro',
    price_monthly: 'R599',
    price_annual: 'R5,990',
    description: 'Advanced features for professional teachers',
    cta_text: 'Go Pro',
    target_audience: 'Professional Teachers'
  }

   Line 82: "preschool_pro"
   Context: {
    id: 'preschool_pro',
    name: 'Preschool Pro',
    price_monthly: 'Custom',
    price_annual: 'Custom',
    description: 'Complete solution for preschool management',
    cta_text: 'Contact Sales',
    target_audience: 'Preschools'
  }

   Line 91: "enterprise"
   Context: {
    id: 'enterprise',
    name: 'Enterprise',
    price_monthly: 'Custom',
    price_annual: 'Custom',
    description: 'Scalable solution for large organizations',
    cta_text: 'Contact Sales',
    target_audience: 'Large Organizations'
  }

   Line 104: "Student Progress Tracking"
   Context: { name: 'Student Progress Tracking', free: true, parent_starter: true, parent_plus: true, private_teacher: true, pro: true, preschool_pro: true, enterprise: true, category: 'core' }

   Line 105: "Basic Dashboard"
   Context: { name: 'Basic Dashboard', free: true, parent_starter: true, parent_plus: true, private_teacher: true, pro: true, preschool_pro: true, enterprise: true, category: 'core' }

   Line 106: "Assignment Management"
   Context: { name: 'Assignment Management', free: '5/month', parent_starter: '50/month', parent_plus: 'Unlimited', private_teacher: 'Unlimited', pro: 'Unlimited', preschool_pro: 'Unlimited', enterprise: 'Unlimited', category: 'core' }

   Line 107: "Communication Tools"
   Context: { name: 'Communication Tools', free: 'Basic', parent_starter: 'Enhanced', parent_plus: 'Advanced', private_teacher: 'Advanced', pro: 'Advanced', enterprise: 'Advanced', preschool_pro: 'Advanced', category: 'core' }

   Line 110: "AI Homework Helper"
   Context: { name: 'AI Homework Helper', free: false, parent_starter: '10/month', parent_plus: '100/month', private_teacher: '200/month', pro: '500/month', preschool_pro: 'Custom', enterprise: 'Custom', category: 'ai' }

   Line 111: "AI Lesson Generator"
   Context: { name: 'AI Lesson Generator', free: false, parent_starter: false, parent_plus: '25/month', private_teacher: '50/month', pro: '200/month', preschool_pro: 'Custom', enterprise: 'Custom', category: 'ai' }

   Line 112: "AI Grading Assistant"
   Context: { name: 'AI Grading Assistant', free: false, parent_starter: false, parent_plus: false, private_teacher: '25/month', pro: '100/month', preschool_pro: 'Custom', enterprise: 'Custom', category: 'ai' }

   Line 113: "STEM Activity Generator"
   Context: { name: 'STEM Activity Generator', free: false, parent_starter: false, parent_plus: false, private_teacher: '25/month', pro: '100/month', preschool_pro: 'Custom', enterprise: 'Custom', category: 'ai' }

   Line 116: "Analytics & Reports"
   Context: { name: 'Analytics & Reports', free: 'Basic', parent_starter: 'Standard', parent_plus: 'Advanced', private_teacher: 'Advanced', pro: 'Professional', preschool_pro: 'Enterprise', enterprise: 'Enterprise', category: 'advanced' }

   Line 117: "Multi-language Support"
   Context: { name: 'Multi-language Support', free: false, parent_starter: false, parent_plus: true, private_teacher: true, pro: true, preschool_pro: true, enterprise: true, category: 'advanced' }

   Line 119: "White-label Branding"
   Context: { name: 'White-label Branding', free: false, parent_starter: false, parent_plus: false, private_teacher: false, pro: false, preschool_pro: true, enterprise: true, category: 'advanced' }

   Line 120: "Principal Hub"
   Context: { name: 'Principal Hub', free: false, parent_starter: false, parent_plus: false, private_teacher: false, pro: false, preschool_pro: true, enterprise: true, category: 'advanced' }

   Line 123: "Email Support"
   Context: { name: 'Email Support', free: false, parent_starter: true, parent_plus: true, private_teacher: true, pro: true, preschool_pro: true, enterprise: true, category: 'support' }

   Line 124: "Priority Support"
   Context: { name: 'Priority Support', free: false, parent_starter: false, parent_plus: true, private_teacher: true, pro: true, preschool_pro: true, enterprise: true, category: 'support' }

   Line 125: "Phone Support"
   Context: { name: 'Phone Support', free: false, parent_starter: false, parent_plus: false, private_teacher: false, pro: false, preschool_pro: true, enterprise: true, category: 'support' }

   Line 126: "Dedicated Account Manager"
   Context: { name: 'Dedicated Account Manager', free: false, parent_starter: false, parent_plus: false, private_teacher: false, pro: false, preschool_pro: false, enterprise: true, category: 'support' }

   Line 152: "core"
   Context: {
    switch (category) {
      case 'core': return 'Core Features';
      case 'ai': return 'AI-Powered Features';
      case 'advanced': return 'Advanced Features';
      case 'support': return 'Support & Services';
      default: return 'Features';
    }

   Line 41: "Basic tools for individual parents"
   Context: 'Basic tools for individual parents'

   Line 42: "Get Started"
   Context: 'Get Started'

   Line 43: "Individual Parents"
   Context: 'Individual Parents'

   Line 47: "Parent Starter"
   Context: 'Parent Starter'

   Line 50: "Enhanced features for active parents"
   Context: 'Enhanced features for active parents'

   Line 51: "Choose Starter"
   Context: 'Choose Starter'

   Line 52: "Active Parents"
   Context: 'Active Parents'

   Line 56: "Parent Plus"
   Context: 'Parent Plus'

   Line 59: "Complete solution for engaged families"
   Context: 'Complete solution for engaged families'

   Line 61: "Choose Plus"
   Context: 'Choose Plus'

   Line 62: "Engaged Families"
   Context: 'Engaged Families'

   Line 66: "Private Teacher"
   Context: 'Private Teacher'

   Line 69: "Professional tools for individual educators"
   Context: 'Professional tools for individual educators'

   Line 70: "For Teachers"
   Context: 'For Teachers'

   Line 71: "Private Educators"
   Context: 'Private Educators'

   Line 78: "Advanced features for professional teachers"
   Context: 'Advanced features for professional teachers'

   Line 79: "Go Pro"
   Context: 'Go Pro'

   Line 80: "Professional Teachers"
   Context: 'Professional Teachers'

   Line 84: "Preschool Pro"
   Context: 'Preschool Pro'

   Line 87: "Complete solution for preschool management"
   Context: 'Complete solution for preschool management'

   Line 88: "Contact Sales"
   Context: 'Contact Sales'

   Line 96: "Scalable solution for large organizations"
   Context: 'Scalable solution for large organizations'

   Line 88: "Contact Sales"
   Context: 'Contact Sales'

   Line 98: "Large Organizations"
   Context: 'Large Organizations'

   Line 104: "Student Progress Tracking"
   Context: 'Student Progress Tracking'

   Line 105: "Basic Dashboard"
   Context: 'Basic Dashboard'

   Line 106: "Assignment Management"
   Context: 'Assignment Management'

   Line 107: "Communication Tools"
   Context: 'Communication Tools'

   Line 110: "AI Homework Helper"
   Context: 'AI Homework Helper'

   Line 111: "AI Lesson Generator"
   Context: 'AI Lesson Generator'

   Line 112: "AI Grading Assistant"
   Context: 'AI Grading Assistant'

   Line 113: "STEM Activity Generator"
   Context: 'STEM Activity Generator'

   Line 120: "Principal Hub"
   Context: 'Principal Hub'

   Line 123: "Email Support"
   Context: 'Email Support'

   Line 124: "Priority Support"
   Context: 'Priority Support'

   Line 125: "Phone Support"
   Context: 'Phone Support'

   Line 126: "Dedicated Account Manager"
   Context: 'Dedicated Account Manager'

   Line 154: "Core Features"
   Context: 'Core Features'

   Line 156: "Advanced Features"
   Context: 'Advanced Features'

üìÑ components/settings/InvoiceNotificationSettings.tsx:
   Line 106: "Permission needed"
   Context: {
        Alert.alert('Permission needed', 'Please allow access to your photo library to upload a signature.');
        return;
      }

   Line 125: "Upload Failed"
   Context: {
            Alert.alert('Upload Failed', `Failed to upload signature: ${error.message}

   Line 130: "Image picker error:"
   Context: {
      console.error('Image picker error:', error);
      Alert.alert('Error', 'Failed to open image picker');
    }

   Line 136: "Delete Signature"
   Context: {
    Alert.alert(
      'Delete Signature',
      'Are you sure you want to remove your digital signature?',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 150: "Delete Failed"
   Context: {
                Alert.alert('Delete Failed', `Failed to delete signature: ${error.message}

   Line 166: "Test Failed"
   Context: {
      Alert.alert('Test Failed', `Failed to send test notification: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 173: "parent"
   Context: {
    switch (role) {
      case 'parent':
        return 'You\'ll receive notifications about invoices for your children, payment confirmations, and overdue reminders.';
      case 'teacher':
        return 'You\'ll receive notifications about invoices related to students in your classes.';
      case 'principal':
      case 'principal_admin':
        return 'You\'ll receive comprehensive notifications about all school invoices, plus optional daily and weekly summaries.';
      default:
        return 'Configure your invoice notification preferences to stay informed about important updates.';
    }

   Line 432: "Add your signature to personalize invoice emails"
   Context: {storageStatus?.available 
                          ? 'Add your signature to personalize invoice emails'
                          : 'Signature storage not available'
                        }

   Line 107: "Permission needed"
   Context: Alert.alert('Permission needed'

   Line 126: "Upload Failed"
   Context: Alert.alert('Upload Failed'

   Line 131: "Image picker error:"
   Context: console.error('Image picker error:'

   Line 137: "Delete Signature"
   Context: Alert.alert(
      'Delete Signature'

   Line 151: "Delete Failed"
   Context: Alert.alert('Delete Failed'

   Line 165: "Test Sent"
   Context: Alert.alert('Test Sent'

   Line 167: "Test Failed"
   Context: Alert.alert('Test Failed'

   Line 107: "Permission needed"
   Context: 'Permission needed'

   Line 126: "Upload Failed"
   Context: 'Upload Failed'

   Line 132: "Failed to open image picker"
   Context: 'Failed to open image picker'

   Line 138: "Delete Signature"
   Context: 'Delete Signature'

   Line 148: "Signature deleted successfully"
   Context: 'Signature deleted successfully'

   Line 151: "Delete Failed"
   Context: 'Delete Failed'

   Line 165: "Test Sent"
   Context: 'Test Sent'

   Line 167: "Test Failed"
   Context: 'Test Failed'

   Line 167: "Unknown error"
   Context: 'Unknown error'

   Line 433: "Add your signature to personalize invoice emails"
   Context: 'Add your signature to personalize invoice emails'

   Line 434: "Signature storage not available"
   Context: 'Signature storage not available'

üìÑ components/settings/PushNotificationTester.tsx:
   Line 48: "Test Notification"
   Context: {
    title: 'Test Notification',
    body: 'This is a test push notification from EduDash Pro',
    data: { test: true }

   Line 93: "Error getting push tokens:"
   Context: {
          console.error('Error getting push tokens:', error);
          addTestResult(`‚ùå Token Error: ${error}

   Line 122: "Error initializing notification status:"
   Context: {
      console.error('Error initializing notification status:', error);
      setNotificationStatus(prev => ({ ...prev, isLoading: false }

   Line 129: "üîÑ Requesting notification permissions..."
   Context: {
    try {
      addTestResult('üîÑ Requesting notification permissions...');

      if (!Device.isDevice) {
        Alert.alert(
          'Physical Device Required',
          'Push notifications require a physical device. They will not work in simulators.'
        );
        addTestResult('‚ùå Not a physical device - notifications not available');
        return;
      }

   Line 160: "Permission Denied"
   Context: {
        Alert.alert(
          'Permission Denied',
          'Notifications permission was denied. You can enable it in your device settings.',
          [
            { text: 'OK' }

   Line 166: "Open Settings"
   Context: { text: 'Open Settings', onPress: () => Notifications.openSettingsAsync() }

   Line 179: "Error requesting permissions:"
   Context: {
      console.error('Error requesting permissions:', error);
      addTestResult(`‚ùå Permission Error: ${error}

   Line 185: "üîÑ Sending test notification..."
   Context: {
    try {
      setIsSendingTest(true);
      addTestResult('üîÑ Sending test notification...');

      if (!notificationStatus.hasPermission) {
        Alert.alert('No Permission', 'Please grant notification permissions first.');
        addTestResult('‚ùå No permission for notifications');
        return;
      }

   Line 224: "Error sending test notification:"
   Context: {
      console.error('Error sending test notification:', error);
      addTestResult(`‚ùå Test Error: ${error}

   Line 260: "Error sending remote notification:"
   Context: {
      console.error('Error sending remote notification:', error);
      addTestResult(`‚ùå Remote notification error: ${error}

   Line 266: "Missing Data"
   Context: {
    try {
      if (!notificationStatus.expoPushToken || !user?.id) {
        Alert.alert('Missing Data', 'No push token or user ID available');
        return;
      }

   Line 290: "‚úÖ Token saved to database"
   Context: {
        addTestResult('‚úÖ Token saved to database');
        Alert.alert('Success', 'Push token saved to database!');
      }

   Line 302: "Error saving token:"
   Context: {
      console.error('Error saving token:', error);
      addTestResult(`‚ùå Save Error: ${error}

   Line 589: "Notification Title"
   Context: placeholder="Notification Title"

   Line 597: "Notification Body"
   Context: placeholder="Notification Body"

   Line 94: "Error getting push tokens:"
   Context: console.error('Error getting push tokens:'

   Line 123: "Error initializing notification status:"
   Context: console.error('Error initializing notification status:'

   Line 134: "Physical Device Required"
   Context: Alert.alert(
          'Physical Device Required'

   Line 161: "Permission Denied"
   Context: Alert.alert(
          'Permission Denied'

   Line 180: "Error requesting permissions:"
   Context: console.error('Error requesting permissions:'

   Line 191: "No Permission"
   Context: Alert.alert('No Permission'

   Line 222: "Test Sent"
   Context: Alert.alert('Test Sent'

   Line 225: "Error sending test notification:"
   Context: console.error('Error sending test notification:'

   Line 227: "Test Failed"
   Context: Alert.alert('Test Failed'

   Line 261: "Error sending remote notification:"
   Context: console.error('Error sending remote notification:'

   Line 269: "Missing Data"
   Context: Alert.alert('Missing Data'

   Line 289: "Database Error"
   Context: Alert.alert('Database Error'

   Line 303: "Error saving token:"
   Context: console.error('Error saving token:'

   Line 49: "Test Notification"
   Context: 'Test Notification'

   Line 50: "This is a test push notification from EduDash Pro"
   Context: 'This is a test push notification from EduDash Pro'

   Line 135: "Physical Device Required"
   Context: 'Physical Device Required'

   Line 162: "Permission Denied"
   Context: 'Permission Denied'

   Line 166: "Open Settings"
   Context: 'Open Settings'

   Line 191: "No Permission"
   Context: 'No Permission'

   Line 222: "Test Sent"
   Context: 'Test Sent'

   Line 227: "Test Failed"
   Context: 'Test Failed'

   Line 269: "Missing Data"
   Context: 'Missing Data'

   Line 269: "No push token or user ID available"
   Context: 'No push token or user ID available'

   Line 289: "Database Error"
   Context: 'Database Error'

   Line 315: "Failed to copy token to clipboard"
   Context: 'Failed to copy token to clipboard'

   Line 589: "Notification Title"
   Context: "Notification Title"

   Line 597: "Notification Body"
   Context: "Notification Body"

üìÑ components/super-admin/subscriptions/PlanChangeModal.tsx:
   Line 133: "Failed to fetch plans:"
   Context: {
      console.error('Failed to fetch plans:', error);
      Alert.alert('Error', 'Failed to load subscription plans');
    }

   Line 239: "default"
   Context: {
    if (!subscription) return;
    
    try {
      setLoading(true);
      setButtonState('default');
      
      await adminUpdateSubscriptionPlan(assertSupabase(), {
        subscriptionId: subscription.id,
        newPlanId: selectedPlanId,
        billingFrequency,
        seatsTotal: parseInt(seatsTotal) || 1,
        reason: reason || 'Plan changed by SuperAdmin',
        metadata: {
          changed_via: 'superadmin_dashboard',
          payment_required: false,
        }

   Line 272: "Vibration not available"
   Context: {
          console.debug('Vibration not available');
        }

   Line 283: "Failed to update subscription:"
   Context: {
      console.error('Failed to update subscription:', error);
      
      track('sa_subs_upgrade_failed', {
        subscription_id: subscription.id,
        error: error.message,
      }

   Line 272: "Vibration not available"
   Context: {
          console.debug('Vibration not available');
        }

   Line 334: "Plan change by SuperAdmin - requires payment confirmation"
   Context: {
        subscriptionId: subscription.id,
        newPlanId: selectedPlanId,
        billingFrequency,
        seatsTotal: parseInt(seatsTotal) || 1,
        reason: reason || 'Plan change by SuperAdmin - requires payment confirmation',
        metadata: {
          changed_via: 'superadmin_dashboard',
          payment_required: true,
          previous_status: subscription.status,
          payment_amount: amount,
        }

   Line 352: "Failed to send payment notification:"
   Context: {
        console.warn('Failed to send payment notification:', notificationError);
      }

   Line 272: "Vibration not available"
   Context: {
          console.debug('Vibration not available');
        }

   Line 382: "Payment notification error:"
   Context: {
      console.error('Payment notification error:', error);
      
      track('sa_subs_upgrade_failed', {
        subscription_id: subscription.id,
        error: `Notification error: ${error.message}

   Line 272: "Vibration not available"
   Context: {
          console.debug('Vibration not available');
        }

   Line 416: "free"
   Context: {
      'free': { emoji: 'üÜì', level: 'Free Tier', color: '#6b7280' }

   Line 706: "Notify School to Pay"
   Context: {buttonMessage || (isPaymentRequired() ? 'Notify School to Pay' : 'Confirm Change')}

   Line 571: "Enter number of seats"
   Context: placeholder="Enter number of seats"

   Line 581: "Reason for plan change..."
   Context: placeholder="Reason for plan change..."

   Line 134: "Failed to fetch plans:"
   Context: console.error('Failed to fetch plans:'

   Line 212: "Confirm Plan Change"
   Context: Alert.alert(
      'Confirm Plan Change'

   Line 284: "Failed to update subscription:"
   Context: console.error('Failed to update subscription:'

   Line 353: "Failed to send payment notification:"
   Context: console.warn('Failed to send payment notification:'

   Line 383: "Payment notification error:"
   Context: console.error('Payment notification error:'

   Line 135: "Failed to load subscription plans"
   Context: 'Failed to load subscription plans'

   Line 184: "Please select a valid plan"
   Context: 'Please select a valid plan'

   Line 213: "Confirm Plan Change"
   Context: 'Confirm Plan Change'

   Line 251: "Plan changed by SuperAdmin"
   Context: 'Plan changed by SuperAdmin'

   Line 273: "Vibration not available"
   Context: 'Vibration not available'

   Line 293: "Failed to update subscription"
   Context: 'Failed to update subscription'

   Line 273: "Vibration not available"
   Context: 'Vibration not available'

   Line 273: "Vibration not available"
   Context: 'Vibration not available'

   Line 392: "Failed to notify school for payment"
   Context: 'Failed to notify school for payment'

   Line 273: "Vibration not available"
   Context: 'Vibration not available'

   Line 417: "Free Tier"
   Context: 'Free Tier'

   Line 571: "Enter number of seats"
   Context: "Enter number of seats"

   Line 706: "Notify School to Pay"
   Context: 'Notify School to Pay'

   Line 706: "Confirm Change"
   Context: 'Confirm Change'

üìÑ components/superadmin/EnhancedUserManagement.tsx:
   Line 194: "Failed to fetch users:"
   Context: {
      console.error('Failed to fetch users:', error);
      Alert.alert('Error', 'Failed to load users');
    }

   Line 336: "Failed to suspend user:"
   Context: {
      console.error('Failed to suspend user:', error);
      Alert.alert('Error', 'Failed to suspend user');
    }

   Line 342: "hard"
   Context: {
    try {
      // Show confirmation dialog with details
      const confirmMessage = `
        WARNING: This action ${request.deletionType === 'hard' ? 'CANNOT BE UNDONE' : 'can be reversed within 30 days'}

   Line 352: "hard"
   Context: {request.deletionType === 'hard' ? 
          'All user data will be permanently deleted from the database.' : 
          'User will be deactivated and data will be retained for recovery.'
        }

   Line 381: "Failed to delete user:"
   Context: {
      console.error('Failed to delete user:', error);
      Alert.alert('Error', 'Failed to delete user');
    }

   Line 381: "Failed to delete user:"
   Context: {
      console.error('Failed to delete user:', error);
      Alert.alert('Error', 'Failed to delete user');
    }

   Line 422: "No Users Selected"
   Context: {
    if (operation.userIds.length === 0) {
      Alert.alert('No Users Selected', 'Please select users to perform bulk operation');
      return;
    }

   Line 457: "Failed to perform bulk operation:"
   Context: {
      console.error('Failed to perform bulk operation:', error);
      Alert.alert('Error', 'Failed to perform bulk operation');
    }

   Line 807: "Create User"
   Context: {() => Alert.alert('Create User', 'User creation wizard coming soon')}

   Line 708: "Search users..."
   Context: placeholder="Search users..."

   Line 195: "Failed to fetch users:"
   Context: console.error('Failed to fetch users:'

   Line 337: "Failed to suspend user:"
   Context: console.error('Failed to suspend user:'

   Line 360: "Confirm User Deletion"
   Context: Alert.prompt(
        'Confirm User Deletion'

   Line 382: "Failed to delete user:"
   Context: console.error('Failed to delete user:'

   Line 400: "Deletion Initiated"
   Context: Alert.alert(
        'Deletion Initiated'

   Line 382: "Failed to delete user:"
   Context: console.error('Failed to delete user:'

   Line 424: "No Users Selected"
   Context: Alert.alert('No Users Selected'

   Line 440: "Bulk Operation Started"
   Context: Alert.alert(
        'Bulk Operation Started'

   Line 458: "Failed to perform bulk operation:"
   Context: console.error('Failed to perform bulk operation:'

   Line 807: "Create User"
   Context: Alert.alert('Create User'

   Line 196: "Failed to load users"
   Context: 'Failed to load users'

   Line 338: "Failed to suspend user"
   Context: 'Failed to suspend user'

   Line 346: "CANNOT BE UNDONE"
   Context: 'CANNOT BE UNDONE'

   Line 361: "Confirm User Deletion"
   Context: 'Confirm User Deletion'

   Line 383: "Failed to delete user"
   Context: 'Failed to delete user'

   Line 401: "Deletion Initiated"
   Context: 'Deletion Initiated'

   Line 383: "Failed to delete user"
   Context: 'Failed to delete user'

   Line 424: "No Users Selected"
   Context: 'No Users Selected'

   Line 424: "Please select users to perform bulk operation"
   Context: 'Please select users to perform bulk operation'

   Line 441: "Bulk Operation Started"
   Context: 'Bulk Operation Started'

   Line 459: "Failed to perform bulk operation"
   Context: 'Failed to perform bulk operation'

   Line 807: "Create User"
   Context: 'Create User'

   Line 807: "User creation wizard coming soon"
   Context: 'User creation wizard coming soon'

üìÑ components/superadmin/GlobalOverview.tsx:
   Line 111: "Failed to fetch platform stats:"
   Context: {
      console.error('Failed to fetch platform stats:', error);
    }

   Line 249: "Contact Sales"
   Context: {[
          { label: 'Contact Sales', onPress: () => handleQuickAction('contact_sales'), primary: true }

   Line 251: "System Status"
   Context: { label: 'System Status', onPress: () => handleQuickAction('system_status') }

   Line 175: "Global Platform Overview"
   Context: title="Global Platform Overview"

   Line 178: "Active Tenants"
   Context: label="Active Tenants"

   Line 183: "Monthly Revenue"
   Context: label="Monthly Revenue"

   Line 188: "Critical Issues"
   Context: label="Critical Issues"

   Line 193: "AI Usage Cost"
   Context: label="AI Usage Cost"

   Line 198: "Total Users"
   Context: label="Total Users"

   Line 203: "Active Seats"
   Context: label="Active Seats"

   Line 211: "Recent Alerts"
   Context: title="Recent Alerts"

   Line 225: "Feature Flag Status"
   Context: title="Feature Flag Status"

   Line 248: "Quick Actions"
   Context: title="Quick Actions"

   Line 112: "Failed to fetch platform stats:"
   Context: console.error('Failed to fetch platform stats:'

   Line 106: "High error rate in AI Gateway"
   Context: 'High error rate in AI Gateway'

   Line 108: "Server maintenance scheduled for tonight"
   Context: 'Server maintenance scheduled for tonight'

   Line 175: "Global Platform Overview"
   Context: "Global Platform Overview"

   Line 178: "Active Tenants"
   Context: "Active Tenants"

   Line 183: "Monthly Revenue"
   Context: "Monthly Revenue"

   Line 188: "Critical Issues"
   Context: "Critical Issues"

   Line 193: "AI Usage Cost"
   Context: "AI Usage Cost"

   Line 198: "Total Users"
   Context: "Total Users"

   Line 203: "Active Seats"
   Context: "Active Seats"

   Line 211: "Recent Alerts"
   Context: "Recent Alerts"

   Line 225: "Feature Flag Status"
   Context: "Feature Flag Status"

   Line 248: "Quick Actions"
   Context: "Quick Actions"

   Line 250: "Contact Sales"
   Context: 'Contact Sales'

   Line 251: "System Status"
   Context: 'System Status'

üìÑ components/superadmin/SalesLeads.tsx:
   Line 35: "Failed to fetch leads:"
   Context: {
      console.error('Failed to fetch leads:', e);
    }

   Line 52: "Failed to fetch stats:"
   Context: {
      console.error('Failed to fetch stats:', error);
    }

   Line 69: "Failed to update lead status:"
   Context: {
      console.error('Failed to update lead status:', e);
    }

   Line 135: "Unknown org"
   Context: {lead.organization_name || 'Unknown org'}

   Line 157: "School / Org name"
   Context: placeholder="School / Org name"

   Line 171: "Principal email (optional)"
   Context: placeholder="Principal email (optional)"

   Line 180: "Seats (e.g., 10)"
   Context: placeholder="Seats (e.g., 10)"

   Line 36: "Failed to fetch leads:"
   Context: console.error('Failed to fetch leads:'

   Line 53: "Failed to fetch stats:"
   Context: console.error('Failed to fetch stats:'

   Line 70: "Failed to update lead status:"
   Context: console.error('Failed to update lead status:'

   Line 135: "Unknown org"
   Context: 'Unknown org'

   Line 204: "No school id"
   Context: 'No school id'

   Line 246: "Could not convert"
   Context: 'Could not convert'

   Line 204: "No school id"
   Context: throw new Error('No school id'

üìÑ components/superadmin/Settings.tsx:
   Line 23: "Feature Flags"
   Context: {[
          { 
            label: 'Feature Flags', 
            onPress: () => router.push('/screens/super-admin-feature-flags'),
            primary: true 
          }

   Line 29: "System Settings"
   Context: { 
            label: 'System Settings', 
            onPress: () => router.push('/screens/super-admin-settings') 
          }

   Line 22: "Platform Configuration"
   Context: title="Platform Configuration"

   Line 40: "Management Tools"
   Context: title="Management Tools"

   Line 22: "Platform Configuration"
   Context: "Platform Configuration"

   Line 25: "Feature Flags"
   Context: 'Feature Flags'

   Line 30: "System Settings"
   Context: 'System Settings'

   Line 40: "Management Tools"
   Context: "Management Tools"

üìÑ components/superadmin/SuperAdminDashboard.tsx:
   Line 84: "Dashboard data fetch was not successful"
   Context: {
        throw new Error('Dashboard data fetch was not successful');
      }

   Line 92: "System test error:"
   Context: {
        console.warn('System test error:', systemError.message);
        // Don't throw here, as dashboard data might still be valid
      }

   Line 106: "Failed to fetch dashboard data:"
   Context: {
      console.error('Failed to fetch dashboard data:', error);
      setError(error.message || 'Failed to load dashboard');
      Alert.alert('Error', 'Failed to load dashboard data. Please try refreshing.');
    }

   Line 136: "Coming Soon"
   Context: {
      Alert.alert('Coming Soon', `${action}

   Line 222: "SuperAdmin"
   Context: {systemStatus.is_superadmin ? 'SuperAdmin' : 'Limited'}

   Line 318: "User Management"
   Context: {() => handleQuickAction('User Management', '/screens/super-admin-users')}

   Line 326: "AI Quotas"
   Context: {() => handleQuickAction('AI Quotas', '/screens/super-admin-ai-quotas')}

   Line 334: "System Health"
   Context: {() => handleQuickAction('System Health', '/screens/super-admin-system-monitor')}

   Line 93: "System test error:"
   Context: console.warn('System test error:'

   Line 107: "Failed to fetch dashboard data:"
   Context: console.error('Failed to fetch dashboard data:'

   Line 137: "Coming Soon"
   Context: Alert.alert('Coming Soon'

   Line 85: "Dashboard data fetch was not successful"
   Context: 'Dashboard data fetch was not successful'

   Line 108: "Failed to load dashboard"
   Context: 'Failed to load dashboard'

   Line 137: "Coming Soon"
   Context: 'Coming Soon'

   Line 222: "SuperAdmin"
   Context: 'SuperAdmin'

   Line 318: "User Management"
   Context: 'User Management'

   Line 326: "AI Quotas"
   Context: 'AI Quotas'

   Line 334: "System Health"
   Context: 'System Health'

   Line 85: "Dashboard data fetch was not successful"
   Context: throw new Error('Dashboard data fetch was not successful'

üìÑ components/superadmin/Tenants.tsx:
   Line 19: "Manage Subscriptions"
   Context: {[
          { 
            label: 'Manage Subscriptions', 
            onPress: () => router.push('/screens/super-admin-subscriptions'),
            primary: true 
          }

   Line 25: "User Management"
   Context: { 
            label: 'User Management', 
            onPress: () => router.push('/screens/super-admin-users') 
          }

   Line 18: "Organization Management"
   Context: title="Organization Management"

   Line 39: "Quick Actions"
   Context: title="Quick Actions"

   Line 18: "Organization Management"
   Context: "Organization Management"

   Line 21: "Manage Subscriptions"
   Context: 'Manage Subscriptions'

   Line 26: "User Management"
   Context: 'User Management'

   Line 39: "Quick Actions"
   Context: "Quick Actions"

üìÑ components/sync/OfflineBanner.tsx:
   Line 33: "Refreshing data..."
   Context: {
    if (syncStatus?.isOnline) {
      // Mock refresh - replace with actual implementation
      console.log('Refreshing data...')
    }

   Line 48: "Syncing your data..."
   Context: {
      return 'Syncing your data...'
    }

   Line 138: "Never synced"
   Context: {
    if (!lastSyncTime) return 'Never synced'

    const now = new Date()
    const diff = now.getTime() - lastSyncTime.getTime()
    const minutes = Math.floor(diff / 60000)

    if (minutes < 1) return 'Just synced'
    if (minutes < 60) return `${minutes}

   Line 195: "Syncing..."
   Context: {syncStatus.isSyncing ? 'Syncing...' : 'Refresh'}

   Line 191: "Refresh data"
   Context: accessibilityLabel="Refresh data"

   Line 192: "Manually sync your data with the server"
   Context: accessibilityHint="Manually sync your data with the server"

   Line 36: "Refreshing data..."
   Context: console.log('Refreshing data...'

   Line 139: "Never synced"
   Context: 'Never synced'

   Line 145: "Just synced"
   Context: 'Just synced'

   Line 191: "Refresh data"
   Context: "Refresh data"

   Line 192: "Manually sync your data with the server"
   Context: "Manually sync your data with the server"

üìÑ components/ui/AdBanner.tsx:
   Line 43: "Error checking ads eligibility:"
   Context: {
        console.warn('Error checking ads eligibility:', error);
        setShowAds(false);
      }

   Line 88: "edudash.ad.banner_failed"
   Context: {
    setAdFailed(true);
    setAdLoaded(false);
    
    track('edudash.ad.banner_failed', {
      placement,
      error: error?.message || 'Unknown error',
      user_id: user?.id,
      platform: Platform.OS,
    }

   Line 44: "Error checking ads eligibility:"
   Context: console.warn('Error checking ads eligibility:'

   Line 142: "Navigate to upgrade screen"
   Context: console.log('Navigate to upgrade screen'

   Line 94: "Unknown error"
   Context: 'Unknown error'

   Line 142: "Navigate to upgrade screen"
   Context: 'Navigate to upgrade screen'

üìÑ components/ui/AdBannerWithUpgrade.tsx:
   Line 85: "Remove ads by upgrading to a paid plan"
   Context: accessibilityLabel="Remove ads by upgrading to a paid plan"

   Line 85: "Remove ads by upgrading to a paid plan"
   Context: "Remove ads by upgrading to a paid plan"

üìÑ components/ui/AppSplashScreen.tsx:
   Line 17: "Initializing EduDash Pro..."
   Context: {
  isLoading,
  onLoadingComplete,
  minimumDisplayTime = 2000, // Minimum 2 seconds for branding
  message = "Initializing EduDash Pro...",
}

üìÑ components/ui/Avatar.tsx:
   Line 28: "Failed to convert avatar URI:"
   Context: {
          console.error('Failed to convert avatar URI:', error);
          setDisplayUri(null); // Fallback to initials
        }

   Line 29: "Failed to convert avatar URI:"
   Context: console.error('Failed to convert avatar URI:'

üìÑ components/ui/CacheIndicator.tsx:
   Line 33: "Just now"
   Context: {
  const opacity = React.useRef(new Animated.Value(1)).current;

  const formatTimeAgo = (date: Date): string => {
    const now = new Date();
    const diffInMinutes = Math.floor((now.getTime() - date.getTime()) / (1000 * 60));
    
    if (diffInMinutes < 1) return 'Just now';
    if (diffInMinutes < 60) return `${diffInMinutes}

   Line 50: "phone-portrait-outline"
   Context: {
    if (isLoadingFromCache) {
      return {
        icon: 'phone-portrait-outline' as const,
        text: compact ? 'Cached' : 'Loaded from cache',
        color: '#EA580C',
        backgroundColor: '#FEF3C7',
      }

   Line 58: "wifi-outline"
   Context: {
      return {
        icon: 'wifi-outline' as const,
        text: compact ? 'Offline' : 'Offline mode',
        color: '#DC2626',
        backgroundColor: '#FEE2E2',
      }

   Line 65: "cloud-done-outline"
   Context: {
      return {
        icon: 'cloud-done-outline' as const,
        text: compact ? 'Live' : 'Live data',
        color: '#059669',
        backgroundColor: '#D1FAE5',
      }

   Line 40: "Just now"
   Context: 'Just now'

   Line 54: "Loaded from cache"
   Context: 'Loaded from cache'

   Line 61: "Offline mode"
   Context: 'Offline mode'

   Line 68: "Live data"
   Context: 'Live data'

üìÑ components/ui/EduDashProLoader.tsx:
   Line 34: "Loading EduDashPro..."
   Context: {
  message = 'Loading EduDashPro...',
  showIcon = true,
  showSpinner = true,
  iconSize = 120,
  style,
  testID,
  fullScreen = true,
  variant = 'default',
  ...props
}

üìÑ components/ui/ErrorBoundary.tsx:
   Line 63: "Try again"
   Context: accessibilityLabel="Try again"

   Line 39: "ErrorBoundary caught an error:"
   Context: console.error('ErrorBoundary caught an error:'

   Line 63: "Try again"
   Context: "Try again"

üìÑ components/ui/InlineUpgradeBanner.tsx:
   Line 78: "Upgrade to Premium"
   Context: {
  title = 'Upgrade to Premium',
  description = 'Unlock all features and remove limits with a Premium subscription',
  screen,
  feature,
  icon = 'diamond',
  containerStyle,
  variant = 'default',
  visible = true,
}

   Line 63: "Unlock Premium Analytics"
   Context: title="Unlock Premium Analytics"

   Line 64: "Get detailed insights and advanced reporting features"
   Context: description="Get detailed insights and advanced reporting features"

   Line 63: "Unlock Premium Analytics"
   Context: "Unlock Premium Analytics"

   Line 64: "Get detailed insights and advanced reporting features"
   Context: "Get detailed insights and advanced reporting features"

   Line 79: "Upgrade to Premium"
   Context: 'Upgrade to Premium'

   Line 80: "Unlock all features and remove limits with a Premium subscription"
   Context: 'Unlock all features and remove limits with a Premium subscription'

üìÑ components/ui/LanguageSelector.tsx:
   Line 29: "Failed to change language:"
   Context: {
      console.error('Failed to change language:', error);
    }

   Line 30: "Failed to change language:"
   Context: console.error('Failed to change language:'

üìÑ components/ui/LoadingExamples.tsx:
   Line 71: "Processing your request..."
   Context: {`// Full screen overlay
<EduDashProLoader 
  message="Processing your request..." 
  variant="default"
  fullScreen={true}

   Line 111: "Loading dashboard data..."
   Context: {
  const [loading, setLoading] = useState(true);
  
  if (loading) {
    return (
      <LoadingState 
        message="Loading dashboard data..." 
        variant="branded" 
      />
    );
  }

   Line 147: "Loading students..."
   Context: {`// Inside list components
{dataLoading ? (
  <EduDashProInlineLoader 
    message="Loading students..." 
    iconSize={50}

   Line 274: "#e5e7eb"
   Context: {
    color: '#e5e7eb',
    fontFamily: Platform.OS === 'web' ? 'monospace' : 'Courier New',
    fontSize: 12,
    lineHeight: 18,
  }

   Line 29: "Loading your dashboard..."
   Context: message="Loading your dashboard..."

   Line 42: "Loading..."
   Context: message="Loading..."

   Line 56: "Loading student data..."
   Context: message="Loading student data..."

   Line 73: "Processing your request..."
   Context: message="Processing your request..."

   Line 95: "Initializing Neural Network..."
   Context: message="Initializing Neural Network..."

   Line 117: "Loading dashboard data..."
   Context: message="Loading dashboard data..."

   Line 137: "Initializing EduDash Pro..."
   Context: message="Initializing EduDash Pro..."

   Line 150: "Loading students..."
   Context: message="Loading students..."

   Line 276: "Courier New"
   Context: 'Courier New'

üìÑ components/ui/LoadingScreen.tsx:
   Line 16: "Loading..."
   Context: { 
  message = 'Loading...', 
  showLogo = true 
}

üìÑ components/ui/LoadingState.tsx:
   Line 22: "Loading..."
   Context: {
  message = 'Loading...',
  size = 'large',
  color = '#007AFF',
  style,
  testID,
  variant = 'branded',
  showIcon = true,
  ...props
}

üìÑ components/ui/PremiumFeatureBanner.tsx:
   Line 59: "AI Lesson Generator"
   Context: featureName="AI Lesson Generator"

   Line 60: "Generate personalized lessons with AI assistance"
   Context: description="Generate personalized lessons with AI assistance"

   Line 68: "Advanced Analytics"
   Context: featureName="Advanced Analytics"

   Line 69: "Get detailed insights into student performance"
   Context: description="Get detailed insights into student performance"

   Line 130: "Go back"
   Context: accessibilityLabel="Go back"

   Line 59: "AI Lesson Generator"
   Context: "AI Lesson Generator"

   Line 60: "Generate personalized lessons with AI assistance"
   Context: "Generate personalized lessons with AI assistance"

   Line 68: "Advanced Analytics"
   Context: "Advanced Analytics"

   Line 69: "Get detailed insights into student performance"
   Context: "Get detailed insights into student performance"

   Line 130: "Go back"
   Context: "Go back"

üìÑ components/ui/ScreenHeader.tsx:
   Line 67: "Go back"
   Context: accessibilityLabel="Go back"

   Line 67: "Go back"
   Context: "Go back"

üìÑ components/ui/SmartImage.tsx:
   Line 125: "Image load failed"
   Context: {
    const duration = loadStartTime.current 
      ? performance.now() - loadStartTime.current 
      : 0;
    
    setIsLoading(false);
    setHasError(true);
    
    logger.warn('Image load failed', { source, error, duration }

   Line 378: "Image preload batch failed"
   Context: {
      logger.warn('Image preload batch failed', error);
    }

   Line 133: "Image load failed"
   Context: 'Image load failed'

   Line 195: "SmartImage"
   Context: 'SmartImage'

   Line 268: "SmartAvatar"
   Context: 'SmartAvatar'

   Line 309: "LessonThumbnail"
   Context: 'LessonThumbnail'

   Line 379: "Image preload batch failed"
   Context: 'Image preload batch failed'

üìÑ components/ui/SocialLoginButtons.tsx:
   Line 23: "google"
   Context: {
    name: 'google',
    title: 'Continue with Google',
    icon: 'google',
    backgroundColor: '#FFFFFF',
    textColor: '#1F2937'
  }

   Line 30: "apple"
   Context: {
    name: 'apple',
    title: 'Continue with Apple',
    icon: 'apple',
    backgroundColor: '#000000',
    textColor: '#FFFFFF'
  }

   Line 37: "microsoft"
   Context: {
    name: 'microsoft',
    title: 'Continue with Microsoft',
    icon: 'microsoft',
    backgroundColor: '#0078D4',
    textColor: '#FFFFFF'
  }

   Line 25: "Continue with Google"
   Context: 'Continue with Google'

   Line 32: "Continue with Apple"
   Context: 'Continue with Apple'

   Line 39: "Continue with Microsoft"
   Context: 'Continue with Microsoft'

üìÑ components/ui/TierBadge.tsx:
   Line 16: "free"
   Context: {
  const tt = String(t || 'free').toLowerCase()
  switch (tt) {
    case 'starter': return { label: 'Starter', color: '#059669' }

   Line 45: "subscription.tierSource.unknown"
   Context: { defaultValue: t('subscription.tierSource.unknown', { defaultValue: 'Unknown' }

   Line 68: "subscription.managePlan"
   Context: {t('subscription.managePlan', { defaultValue: 'Manage plan' }

   Line 68: "subscription.managePlan"
   Context: {t('subscription.managePlan', { defaultValue: 'Manage plan' }

   Line 68: "Manage plan"
   Context: 'Manage plan'

   Line 68: "Manage plan"
   Context: 'Manage plan'

üìÑ components/ui/VirtualizedList.tsx:
   Line 73: "VirtualizedList: Error in renderItem"
   Context: {
      logger.warn('VirtualizedList: Error in renderItem', { error, item: info.item }

   Line 84: "VirtualizedList: Error in keyExtractor"
   Context: {
        logger.warn('VirtualizedList: Error in keyExtractor', { error, item, index }

   Line 122: "VirtualizedList: Error in onEndReached"
   Context: {
      logger.warn('VirtualizedList: Error in onEndReached', error);
    }

   Line 162: "UltraFastList"
   Context: 'UltraFastList'

   Line 194: "DashChatList"
   Context: 'DashChatList'

   Line 216: "DashLessonGrid"
   Context: 'DashLessonGrid'

   Line 162: "UltraFastList"
   Context: 'UltraFastList'

üìÑ components/whatsapp/DashWhatsAppConnector.tsx:
   Line 83: "[DashWhatsApp] Failed to initialize:"
   Context: {
      console.error('[DashWhatsApp] Failed to initialize:', error);
      Alert.alert('Error', 'Failed to initialize WhatsApp integration');
    }

   Line 120: "Connection Initiated! üéâ"
   Context: {
      setLoading(true);
      
      if (whatsappIntegration) {
        const result = await whatsappIntegration.handleIncomingConnection(phoneNumber);
        
        if (result.success) {
          Alert.alert(
            'Connection Initiated! üéâ',
            'Check your WhatsApp for a welcome message from Dash AI. Follow the guided setup to complete your connection.',
            [
              { text: 'Open WhatsApp', onPress: () => openWhatsApp() }

   Line 132: "Continue Setup"
   Context: { text: 'Continue Setup', onPress: () => setCurrentStep('smart_invite') }

   Line 135: "Connection Failed"
   Context: {
          Alert.alert('Connection Failed', result.error || 'Please try again');
        }

   Line 139: "[DashWhatsApp] Connection failed:"
   Context: {
      console.error('[DashWhatsApp] Connection failed:', error);
      Alert.alert('Error', 'Failed to connect. Please check your phone number and try again.');
    }

   Line 148: "Hi! I"
   Context: {encodeURIComponent("Hi! I'd like to connect to EduDash Pro üéì")}

   Line 150: "WhatsApp Not Found"
   Context: {
      Alert.alert(
        'WhatsApp Not Found',
        'Please install WhatsApp or use the web version',
        [
          { text: 'Web WhatsApp', onPress: () => Linking.openURL('https://web.whatsapp.com') }

   Line 162: "Copied!"
   Context: {
    try {
      await Clipboard.setStringAsync(text);
      Alert.alert('Copied!', `${label}

   Line 224: "Connection link"
   Context: {() => copyToClipboard(qrCodeData, 'Connection link')}

   Line 311: "Connecting..."
   Context: {loading ? 'Connecting...' : 'Connect'}

   Line 341: "Invite link"
   Context: {() => copyToClipboard(inviteLink, 'Invite link')}

   Line 393: "Copied!"
   Context: {() => {
            Clipboard.setStringAsync(inviteLink);
            Alert.alert('Copied!', 'Share this link to invite others with intelligent onboarding');
          }

   Line 127: "Connection Initiated! üéâ"
   Context: Alert.alert(
            'Connection Initiated! üéâ'

   Line 136: "Connection Failed"
   Context: Alert.alert('Connection Failed'

   Line 151: "WhatsApp Not Found"
   Context: Alert.alert(
        'WhatsApp Not Found'

   Line 165: "Copied!"
   Context: Alert.alert('Copied!'

   Line 165: "Copied!"
   Context: Alert.alert('Copied!'

   Line 85: "Failed to initialize WhatsApp integration"
   Context: 'Failed to initialize WhatsApp integration'

   Line 102: "Quick homework help via WhatsApp"
   Context: "Quick homework help via WhatsApp"

   Line 103: "Instant parent notifications"
   Context: "Instant parent notifications"

   Line 104: "Emergency school alerts"
   Context: "Emergency school alerts"

   Line 116: "Please enter a valid phone number"
   Context: 'Please enter a valid phone number'

   Line 131: "Open WhatsApp"
   Context: 'Open WhatsApp'

   Line 132: "Continue Setup"
   Context: 'Continue Setup'

   Line 136: "Connection Failed"
   Context: 'Connection Failed'

   Line 136: "Please try again"
   Context: 'Please try again'

   Line 152: "WhatsApp Not Found"
   Context: 'WhatsApp Not Found'

   Line 153: "Please install WhatsApp or use the web version"
   Context: 'Please install WhatsApp or use the web version'

   Line 155: "Web WhatsApp"
   Context: 'Web WhatsApp'

   Line 224: "Connection link"
   Context: 'Connection link'

   Line 341: "Invite link"
   Context: 'Invite link'

   Line 395: "Share this link to invite others with intelligent onboarding"
   Context: 'Share this link to invite others with intelligent onboarding'

üìÑ components/whatsapp/WhatsAppIntegrationDemo.tsx:
   Line 68: "instant_messages"
   Context: {
      id: 'instant_messages',
      icon: 'flash' as const,
      title: t('whatsapp.features.instantMessages', { defaultValue: 'Instant Messages' }

   Line 72: "Get school updates delivered instantly to WhatsApp"
   Context: { defaultValue: 'Get school updates delivered instantly to WhatsApp' }

   Line 75: "direct_chat"
   Context: {
      id: 'direct_chat',
      icon: 'chatbubbles' as const,
      title: t('whatsapp.features.directChat', { defaultValue: 'Direct Teacher Chat' }

   Line 79: "Chat directly with your child\"
   Context: { defaultValue: 'Chat directly with your child\'s teacher via WhatsApp' }

   Line 82: "homework_reminders"
   Context: {
      id: 'homework_reminders',
      icon: 'notifications' as const,
      title: t('whatsapp.features.homeworkReminders', { defaultValue: 'Homework Reminders' }

   Line 86: "Never miss homework deadlines with WhatsApp reminders"
   Context: { defaultValue: 'Never miss homework deadlines with WhatsApp reminders' }

   Line 89: "voice_messages"
   Context: {
      id: 'voice_messages',
      icon: 'mic' as const,
      title: t('whatsapp.features.voiceMessages', { defaultValue: 'Voice Messages' }

   Line 93: "Send voice messages in your preferred language"
   Context: { defaultValue: 'Send voice messages in your preferred language' }

   Line 96: "media_sharing"
   Context: {
      id: 'media_sharing',
      icon: 'image' as const,
      title: t('whatsapp.features.mediaSharing', { defaultValue: 'Photo & Document Sharing' }

   Line 100: "Share homework photos and documents easily"
   Context: { defaultValue: 'Share homework photos and documents easily' }

   Line 103: "works_offline"
   Context: {
      id: 'works_offline',
      icon: 'cloud-offline' as const,
      title: t('whatsapp.features.workOffline', { defaultValue: 'Works Offline' }

   Line 107: "WhatsApp works even with poor internet connection"
   Context: { defaultValue: 'WhatsApp works even with poor internet connection' }

   Line 317: "WhatsApp Connected"
   Context: {connectionStatus.isConnected ? 'WhatsApp Connected' : 'WhatsApp Not Connected'}

   Line 320: "Receiving school updates via WhatsApp"
   Context: {connectionStatus.isConnected 
                  ? 'Receiving school updates via WhatsApp'
                  : 'Connect to receive instant school updates'
                }

   Line 381: "Manage Connection"
   Context: {connectionStatus.isConnected ? 'Manage Connection' : 'Connect WhatsApp'}

   Line 71: "Instant Messages"
   Context: 'Instant Messages'

   Line 72: "Get school updates delivered instantly to WhatsApp"
   Context: 'Get school updates delivered instantly to WhatsApp'

   Line 78: "Direct Teacher Chat"
   Context: 'Direct Teacher Chat'

   Line 85: "Homework Reminders"
   Context: 'Homework Reminders'

   Line 86: "Never miss homework deadlines with WhatsApp reminders"
   Context: 'Never miss homework deadlines with WhatsApp reminders'

   Line 92: "Voice Messages"
   Context: 'Voice Messages'

   Line 93: "Send voice messages in your preferred language"
   Context: 'Send voice messages in your preferred language'

   Line 100: "Share homework photos and documents easily"
   Context: 'Share homework photos and documents easily'

   Line 106: "Works Offline"
   Context: 'Works Offline'

   Line 107: "WhatsApp works even with poor internet connection"
   Context: 'WhatsApp works even with poor internet connection'

   Line 317: "WhatsApp Connected"
   Context: 'WhatsApp Connected'

   Line 317: "WhatsApp Not Connected"
   Context: 'WhatsApp Not Connected'

   Line 321: "Receiving school updates via WhatsApp"
   Context: 'Receiving school updates via WhatsApp'

   Line 322: "Connect to receive instant school updates"
   Context: 'Connect to receive instant school updates'

   Line 381: "Manage Connection"
   Context: 'Manage Connection'

   Line 381: "Connect WhatsApp"
   Context: 'Connect WhatsApp'

üìÑ components/whatsapp/WhatsAppOptInModal.tsx:
   Line 184: "WhatsApp opt-in failed:"
   Context: {
      console.error('WhatsApp opt-in failed:', error)
      Alert.alert(
        t('whatsapp:optInFailed'),
        t('whatsapp:optInFailedMessage'),
        [{ text: t('common.ok') }

   Line 194: "Disconnect WhatsApp"
   Context: {
    if (isDisconnecting) return // Prevent multiple clicks
    
    Alert.alert(
      'Disconnect WhatsApp',
      'How would you like to disconnect your WhatsApp integration?',
      [
        { text: 'Cancel', style: 'cancel' }

   Line 202: "Soft Disconnect"
   Context: {
          text: 'Soft Disconnect',
          onPress: async () => {
            setIsDisconnecting(true)
            console.log('Starting soft disconnect...')
            try {
              console.log('Calling optOut function...')
              await optOut()
              console.log('optOut completed successfully')
              setStep('phone')
              setPhoneNumber('')
              setConsentGiven(false)
              // Force refresh to ensure UI updates
              setTimeout(() => {
                forceRefresh()
                // Additional cache clearing to ensure UI updates
                queryClient.invalidateQueries({ queryKey: ['whatsapp'] }

   Line 227: "WhatsApp opt-out failed:"
   Context: {
              console.error('WhatsApp opt-out failed:', error)
              const errorMsg = error instanceof Error ? error.message : 'Unknown error occurred'
              Alert.alert(
                'Disconnect Failed', 
                `Could not disconnect: ${errorMsg}

   Line 239: "Hard Disconnect"
   Context: {
          text: 'Hard Disconnect',
          style: 'destructive',
          onPress: async () => {
            setIsDisconnecting(true)
            console.log('Starting hard disconnect...')
            try {
              console.log('Calling hardDisconnect function...')
              await hardDisconnect()
              console.log('hardDisconnect completed successfully')
              setStep('phone')
              setPhoneNumber('')
              setConsentGiven(false)
              // Force refresh to ensure UI updates
              setTimeout(() => {
                forceRefresh()
                // Additional cache clearing to ensure UI updates
                queryClient.invalidateQueries({ queryKey: ['whatsapp'] }

   Line 265: "WhatsApp hard disconnect failed:"
   Context: {
              console.error('WhatsApp hard disconnect failed:', error)
              const errorMsg = error instanceof Error ? error.message : 'Unknown error occurred'
              Alert.alert(
                'Hard Disconnect Failed', 
                `Could not remove WhatsApp connection: ${errorMsg}

   Line 272: "Contact Support"
   Context: { text: 'Contact Support', onPress: () => {
                    // Could open support chat or email
                    console.log('User needs support for WhatsApp disconnect')
                  }

   Line 288: "Failed to open WhatsApp:"
   Context: {
    const deepLink = getWhatsAppDeepLink()
    if (deepLink) {
      Linking.openURL(deepLink).catch(err => {
        console.error('Failed to open WhatsApp:', err)
        Alert.alert(
          t('whatsapp:openFailed'),
          t('whatsapp:openFailedMessage'),
          [{ text: t('common.ok') }

   Line 302: "WhatsApp Not Connected"
   Context: {
    if (!connectionStatus?.isConnected || !connectionStatus?.contact) {
      Alert.alert(
        'WhatsApp Not Connected',
        'Please connect WhatsApp first before sending test messages.',
        [{ text: t('common.ok') }

   Line 321: "Test message failed:"
   Context: {
      console.error('Test message failed:', error)
      const errorMessage = error instanceof Error ? error.message : 'Unknown error occurred'
      Alert.alert(
        t('whatsapp:testMessageFailed'),
        `${t('whatsapp:testMessageFailedMessage')}

   Line 629: "Starting auto-connect to school WhatsApp..."
   Context: {async () => {
              try {
                console.log('Starting auto-connect to school WhatsApp...')
                await autoConnectToSchool()
                console.log('Auto-connect successful')
                setStep('success')
                onSuccess?.()
              }

   Line 636: "Auto-connect failed:"
   Context: {
                console.error('Auto-connect failed:', error)
                const errorMessage = error instanceof Error ? error.message : 'Unknown error'
                Alert.alert(
                  'Connection Failed', 
                  `Could not connect to school WhatsApp: ${errorMessage}

   Line 694: "teacher"
   Context: {profile?.role === 'teacher'
          ? 'Connect your school\'s WhatsApp Business number for student communications'
          : 'Enter a WhatsApp number to connect for school communications'
        }

   Line 718: "teacher"
   Context: {profile?.role === 'teacher'
          ? 'School WhatsApp number pre-filled and locked for teachers'
          : connectionStatus?.schoolWhatsAppNumber
            ? 'School number pre-filled. You can change it if needed.'
            : 'Include country code (e.g., +27 for South Africa)'
        }

   Line 899: "teacher"
   Context: {profile?.role === 'teacher' ? 'School WhatsApp Number:' : 'Connected WhatsApp Number:'}

   Line 185: "WhatsApp opt-in failed:"
   Context: console.error('WhatsApp opt-in failed:'

   Line 197: "Disconnect WhatsApp"
   Context: Alert.alert(
      'Disconnect WhatsApp'

   Line 206: "Starting soft disconnect..."
   Context: console.log('Starting soft disconnect...'

   Line 208: "Calling optOut function..."
   Context: console.log('Calling optOut function...'

   Line 223: "Disconnected Successfully"
   Context: Alert.alert(
                'Disconnected Successfully'

   Line 228: "WhatsApp opt-out failed:"
   Context: console.error('WhatsApp opt-out failed:'

   Line 230: "Disconnect Failed"
   Context: Alert.alert(
                'Disconnect Failed'

   Line 244: "Starting hard disconnect..."
   Context: console.log('Starting hard disconnect...'

   Line 246: "Calling hardDisconnect function..."
   Context: console.log('Calling hardDisconnect function...'

   Line 261: "Completely Disconnected"
   Context: Alert.alert(
                'Completely Disconnected'

   Line 266: "WhatsApp hard disconnect failed:"
   Context: console.error('WhatsApp hard disconnect failed:'

   Line 268: "Hard Disconnect Failed"
   Context: Alert.alert(
                'Hard Disconnect Failed'

   Line 274: "User needs support for WhatsApp disconnect"
   Context: console.log('User needs support for WhatsApp disconnect'

   Line 292: "Failed to open WhatsApp:"
   Context: console.error('Failed to open WhatsApp:'

   Line 304: "WhatsApp Not Connected"
   Context: Alert.alert(
        'WhatsApp Not Connected'

   Line 322: "Test message failed:"
   Context: console.error('Test message failed:'

   Line 631: "Starting auto-connect to school WhatsApp..."
   Context: console.log('Starting auto-connect to school WhatsApp...'

   Line 633: "Auto-connect successful"
   Context: console.log('Auto-connect successful'

   Line 637: "Auto-connect failed:"
   Context: console.error('Auto-connect failed:'

   Line 639: "Connection Failed"
   Context: Alert.alert(
                  'Connection Failed'

   Line 198: "Disconnect WhatsApp"
   Context: 'Disconnect WhatsApp'

   Line 203: "Soft Disconnect"
   Context: 'Soft Disconnect'

   Line 224: "Disconnected Successfully"
   Context: 'Disconnected Successfully'

   Line 229: "Unknown error occurred"
   Context: 'Unknown error occurred'

   Line 231: "Disconnect Failed"
   Context: 'Disconnect Failed'

   Line 232: "Hard Disconnect"
   Context: "Hard Disconnect"

   Line 240: "Hard Disconnect"
   Context: 'Hard Disconnect'

   Line 262: "Completely Disconnected"
   Context: 'Completely Disconnected'

   Line 229: "Unknown error occurred"
   Context: 'Unknown error occurred'

   Line 269: "Hard Disconnect Failed"
   Context: 'Hard Disconnect Failed'

   Line 272: "Contact Support"
   Context: 'Contact Support'

   Line 274: "User needs support for WhatsApp disconnect"
   Context: 'User needs support for WhatsApp disconnect'

   Line 305: "WhatsApp Not Connected"
   Context: 'WhatsApp Not Connected'

   Line 229: "Unknown error occurred"
   Context: 'Unknown error occurred'

   Line 576: "WhatsApp data refreshed from database"
   Context: 'WhatsApp data refreshed from database'

   Line 638: "Unknown error"
   Context: 'Unknown error'

   Line 640: "Connection Failed"
   Context: 'Connection Failed'

   Line 696: "Enter a WhatsApp number to connect for school communications"
   Context: 'Enter a WhatsApp number to connect for school communications'

   Line 879: "Connection status refreshed from database"
   Context: 'Connection status refreshed from database'

üìÑ components/whatsapp/WhatsAppProfileGuard.tsx:
   Line 54: "first_name"
   Context: {
    const requirements: ProfileRequirement[] = [
      {
        key: 'first_name',
        label: 'First Name',
        description: 'Your first name for personalized messages',
        completed: !!(profile?.first_name && profile.first_name.trim()),
        value: profile?.first_name,
      }

   Line 63: "last_name"
   Context: {
        key: 'last_name',
        label: 'Last Name',
        description: 'Your last name for identification',
        completed: !!(profile?.last_name && profile.last_name.trim()),
        value: profile?.last_name,
      }

   Line 70: "phone"
   Context: {
        key: 'phone',
        label: 'Phone Number',
        description: 'Your mobile number for WhatsApp messages',
        completed: !!(profile as any)?.phone && validatePhoneNumber((profile as any).phone).isValid,
        value: (profile as any)?.phone,
      }

   Line 77: "preschool"
   Context: {
        key: 'preschool',
        label: 'School Association',
        description: 'You must be associated with a school',
        completed: !!(profile?.organization_id),
        value: profile?.organization_name,
      }

   Line 94: "Invalid Phone Number"
   Context: {
    const validation = validatePhoneNumber(phoneNumber);
    
    if (!validation.isValid) {
      Alert.alert('Invalid Phone Number', validation.message || 'Please enter a valid phone number');
      return;
    }

   Line 125: "Continue to WhatsApp"
   Context: {
            text: 'Continue to WhatsApp',
            onPress: () => {
              onProfileComplete();
            }

   Line 138: "Failed to update phone number:"
   Context: {
      console.error('Failed to update phone number:', error);
      
      track('edudash.whatsapp.phone_update_failed', {
        user_id: user?.id,
        error: error instanceof Error ? error.message : 'Unknown error',
      }

   Line 98: "Invalid Phone Number"
   Context: Alert.alert('Invalid Phone Number'

   Line 121: "Phone Updated!"
   Context: Alert.alert(
        'Phone Updated!'

   Line 139: "Failed to update phone number:"
   Context: console.error('Failed to update phone number:'

   Line 146: "Update Failed"
   Context: Alert.alert(
        'Update Failed'

   Line 58: "First Name"
   Context: 'First Name'

   Line 59: "Your first name for personalized messages"
   Context: 'Your first name for personalized messages'

   Line 65: "Last Name"
   Context: 'Last Name'

   Line 66: "Your last name for identification"
   Context: 'Your last name for identification'

   Line 72: "Phone Number"
   Context: 'Phone Number'

   Line 73: "Your mobile number for WhatsApp messages"
   Context: 'Your mobile number for WhatsApp messages'

   Line 79: "School Association"
   Context: 'School Association'

   Line 80: "You must be associated with a school"
   Context: 'You must be associated with a school'

   Line 98: "Invalid Phone Number"
   Context: 'Invalid Phone Number'

   Line 98: "Please enter a valid phone number"
   Context: 'Please enter a valid phone number'

   Line 126: "Continue to WhatsApp"
   Context: 'Continue to WhatsApp'

   Line 143: "Unknown error"
   Context: 'Unknown error'

   Line 147: "Update Failed"
   Context: 'Update Failed'

   Line 440: "Please complete your profile first"
   Context: 'Please complete your profile first'

üìÑ components/whatsapp/WhatsAppQuickAction.tsx:
   Line 60: "Failed to open WhatsApp:"
   Context: {
    const deepLink = getWhatsAppDeepLink()
    
    if (deepLink) {
      Linking.openURL(deepLink).catch(err => {
        console.error('Failed to open WhatsApp:', err)
        Alert.alert(
          t('whatsapp:openFailed'),
          t('whatsapp:openFailedMessage'),
          [{ text: t('common.ok') }

   Line 65: "Failed to open WhatsApp:"
   Context: console.error('Failed to open WhatsApp:'

üìÑ components/whatsapp/WhatsAppStatusChip.tsx:
   Line 28: "ellipsis-horizontal"
   Context: {
    if (isLoading) {
      return {
        icon: 'ellipsis-horizontal' as const,
        text: 'Checking...',
        backgroundColor: theme.border,
        textColor: theme.textSecondary,
        borderColor: theme.border,
      }

   Line 39: "logo-whatsapp"
   Context: {
      return {
        icon: 'logo-whatsapp' as const,
        text: 'Connected',
        backgroundColor: '#25D366', // WhatsApp green
        textColor: '#FFFFFF',
        borderColor: '#25D366',
      }

   Line 49: "logo-whatsapp"
   Context: {
      icon: 'logo-whatsapp' as const,
      text: 'Not Connected',
      backgroundColor: isDark ? '#2A2A2A' : '#F5F5F5',
      textColor: theme.textSecondary,
      borderColor: theme.border,
    }

   Line 153: "Tap to manage WhatsApp connection"
   Context: accessibilityHint="Tap to manage WhatsApp connection"

   Line 51: "Not Connected"
   Context: 'Not Connected'

   Line 153: "Tap to manage WhatsApp connection"
   Context: "Tap to manage WhatsApp connection"

üìÑ components/wireframes/DatabaseAwareDashboards.tsx:
   Line 77: "Failed to fetch SuperAdmin data:"
   Context: {
      console.error('Failed to fetch SuperAdmin data:', error);
    }

   Line 106: "No schools yet"
   Context: {orgs.length === 0 ? 'No schools yet' : 'Active tenants'}

   Line 112: "No leads yet"
   Context: {leads.length === 0 ? 'No leads yet' : 'In pipeline'}

   Line 144: "Unnamed Organization"
   Context: {safeDisplay(lead.organization_name, 'Unnamed Organization')}

   Line 144: "Unnamed Organization"
   Context: {safeDisplay(lead.organization_name, 'Unnamed Organization')}

   Line 195: "Unknown role"
   Context: {safeDisplay(lead.role, 'Unknown role')}

   Line 196: "No phone"
   Context: {`${safeDisplay(lead.phone, 'No phone')}

   Line 221: "Unnamed School"
   Context: {safeDisplay(org.name, 'Unnamed School')}

   Line 222: "Unknown location"
   Context: {safeDisplay(org.country, 'Unknown location')}

   Line 245: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon')}

   Line 256: "dashboard"
   Context: {activeTab === 'dashboard' && (
        <WireframeQuickAction
          label="Alert"
          icon="üö®"
          role="superadmin"
          onPress={() => Alert.alert('Create Alert')}

   Line 321: "Failed to fetch school counts:"
   Context: {
      console.error('Failed to fetch school counts:', error);
    }

   Line 345: "School Overview"
   Context: {schoolId ? "School Overview" : "No School Selected"}

   Line 357: "Unable to load"
   Context: {counts.teachers === null ? 'Unable to load' : counts.teachers === 0 ? 'No teachers' : undefined}

   Line 362: "Unable to load"
   Context: {counts.students === null ? 'Unable to load' : counts.students === 0 ? 'No students' : undefined}

   Line 367: "Unable to load"
   Context: {counts.classes === null ? 'Unable to load' : counts.classes === 0 ? 'No classes' : undefined}

   Line 373: "Setup Required"
   Context: {!schoolId ? (
        <WireframeCard title="Setup Required">
          <WireframeEmptyState
            icon="üè´"
            title="No School Associated"
            description="Your account needs to be linked to a school to view dashboard metrics"
            actionLabel="Contact Support"
            onActionPress={() => Alert.alert('Please contact support to link your school')}

   Line 402: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon', 'Report generation will be available soon')}

   Line 406: "Setup Checklist"
   Context: {(counts.teachers === 0 || counts.students === 0 || counts.classes === 0) && (
            <WireframeCard title="Setup Checklist">
              {counts.teachers === 0 && (
                <WireframeListItem
                  icon="üë•"
                  title="Add Teachers"
                  subtitle="Invite teaching staff to join your school"
                  badge="Todo"
                />
              )}

   Line 439: "hub"
   Context: {
    switch (activeTab) {
      case 'hub':
        return (
          <WireframeEmptyState
            icon="üé•"
            title="Principal Meeting Room"
            description="Video collaboration space for school leadership team meetings"
            actionLabel="Start New Meeting"
            onActionPress={() => Alert.alert('Feature Coming Soon', 'Video meetings will be available soon')}

   Line 458: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon', 'Teacher management will be available soon')}

   Line 468: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon', 'Resource portal will be available soon')}

   Line 478: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon', 'Settings will be available soon')}

   Line 489: "dashboard"
   Context: {activeTab === 'dashboard' && schoolId && (
        <WireframeQuickAction
          label="Report"
          icon="üìä"
          role="principal"
          onPress={() => Alert.alert('Generate Report')}

   Line 528: "Failed to fetch teacher data:"
   Context: {
      console.error('Failed to fetch teacher data:', error);
    }

   Line 577: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon', 'Class creation will be available soon')}

   Line 622: "ai-tools"
   Context: {
    switch (activeTab) {
      case 'ai-tools':
        return (
          <WireframeEmptyState
            icon="‚ú®"
            title="AI Teaching Assistant"
            description="Generate lessons, create quizzes, and build STEM activities with AI"
            actionLabel="Start Creating"
            onActionPress={() => Alert.alert('Feature Coming Soon', 'AI tools will be available soon')}

   Line 641: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon', 'Assignment creation will be available soon')}

   Line 651: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon', 'Resource library will be available soon')}

   Line 661: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon', 'Messaging will be available soon')}

   Line 672: "dashboard"
   Context: {activeTab === 'dashboard' && (
        <WireframeQuickAction
          label="Lesson"
          icon="üéØ"
          role="teacher"
          onPress={() => Alert.alert('Generate Lesson')}

   Line 711: "Failed to fetch parent data:"
   Context: {
      console.error('Failed to fetch parent data:', error);
    }

   Line 760: "Contact School"
   Context: {() => Alert.alert('Contact School', 'Please contact your school to enroll your children')}

   Line 781: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon', 'Photo math will be available soon')}

   Line 806: "School Upgrade"
   Context: {() => Alert.alert('School Upgrade', 'Contact your principal to learn about premium features')}

   Line 812: "homework"
   Context: {
    switch (activeTab) {
      case 'homework':
        return (
          <WireframeEmptyState
            icon="üìö"
            title="AI Homework Helper"
            description="Get step-by-step guidance on homework problems. Take a photo or type your question!"
            actionLabel="Start Homework Help"
            onActionPress={() => Alert.alert('Feature Coming Soon', 'AI homework helper will be available soon')}

   Line 831: "No messages from teachers yet"
   Context: {() => Alert.alert('No messages from teachers yet')}

   Line 841: "No upcoming events"
   Context: {() => Alert.alert('No upcoming events')}

   Line 478: "Feature Coming Soon"
   Context: {() => Alert.alert('Feature Coming Soon', 'Settings will be available soon')}

   Line 862: "homework"
   Context: {activeTab === 'homework' && (
        <WireframeQuickAction
          label="Photo"
          icon="üì∏"
          role="parent"
          onPress={() => Alert.alert('Photo Homework Problem')}

   Line 92: "Access Denied"
   Context: title="Access Denied"

   Line 93: "Super admin access required to view this dashboard"
   Context: description="Super admin access required to view this dashboard"

   Line 101: "Global Platform Overview"
   Context: title="Global Platform Overview"

   Line 118: "Global reach"
   Context: subtext="Global reach"

   Line 124: "Recent Enterprise Leads"
   Context: title="Recent Enterprise Leads"

   Line 128: "Loading leads..."
   Context: title="Loading leads..."

   Line 129: "Fetching from database"
   Context: subtitle="Fetching from database"

   Line 134: "No Leads Yet"
   Context: title="No Leads Yet"

   Line 135: "Enterprise leads will appear here when submitted from the contact form"
   Context: description="Enterprise leads will appear here when submitted from the contact form"

   Line 160: "Schools by Region"
   Context: title="Schools by Region"

   Line 164: "No schools registered yet"
   Context: title="No schools registered yet"

   Line 165: "Schools will appear here after lead conversion"
   Context: subtitle="Schools will appear here after lead conversion"

   Line 189: "Sales Pipeline"
   Context: title="Sales Pipeline"

   Line 203: "No Leads in Pipeline"
   Context: title="No Leads in Pipeline"

   Line 204: "Enterprise leads from the contact form will appear here"
   Context: description="Enterprise leads from the contact form will appear here"

   Line 229: "No Organizations"
   Context: title="No Organizations"

   Line 230: "Schools will appear here after being created from leads"
   Context: description="Schools will appear here after being created from leads"

   Line 242: "Platform Settings"
   Context: title="Platform Settings"

   Line 243: "Global configuration and feature flag management"
   Context: description="Global configuration and feature flag management"

   Line 244: "Manage Settings"
   Context: actionLabel="Manage Settings"

   Line 92: "Access Denied"
   Context: title="Access Denied"

   Line 337: "Principal or admin access required to view this dashboard"
   Context: description="Principal or admin access required to view this dashboard"

   Line 349: "Loading school metrics..."
   Context: title="Loading school metrics..."

   Line 129: "Fetching from database"
   Context: subtitle="Fetching from database"

   Line 374: "Setup Required"
   Context: title="Setup Required"

   Line 377: "No School Associated"
   Context: title="No School Associated"

   Line 378: "Your account needs to be linked to a school to view dashboard metrics"
   Context: description="Your account needs to be linked to a school to view dashboard metrics"

   Line 379: "Contact Support"
   Context: actionLabel="Contact Support"

   Line 385: "Quick Actions"
   Context: title="Quick Actions"

   Line 388: "Principal Meeting Room"
   Context: title="Principal Meeting Room"

   Line 389: "Start or join a video meeting with staff"
   Context: subtitle="Start or join a video meeting with staff"

   Line 394: "Manage Teachers"
   Context: title="Manage Teachers"

   Line 401: "Generate weekly or monthly school reports"
   Context: subtitle="Generate weekly or monthly school reports"

   Line 407: "Setup Checklist"
   Context: title="Setup Checklist"

   Line 411: "Add Teachers"
   Context: title="Add Teachers"

   Line 412: "Invite teaching staff to join your school"
   Context: subtitle="Invite teaching staff to join your school"

   Line 419: "Enroll Students"
   Context: title="Enroll Students"

   Line 420: "Add student records to your school"
   Context: subtitle="Add student records to your school"

   Line 427: "Create Classes"
   Context: title="Create Classes"

   Line 428: "Set up class schedules and assignments"
   Context: subtitle="Set up class schedules and assignments"

   Line 388: "Principal Meeting Room"
   Context: title="Principal Meeting Room"

   Line 446: "Video collaboration space for school leadership team meetings"
   Context: description="Video collaboration space for school leadership team meetings"

   Line 447: "Start New Meeting"
   Context: actionLabel="Start New Meeting"

   Line 455: "Teacher Management"
   Context: title="Teacher Management"

   Line 456: "Staff directory, performance tracking, and professional development"
   Context: description="Staff directory, performance tracking, and professional development"

   Line 457: "Invite Teachers"
   Context: actionLabel="Invite Teachers"

   Line 465: "Resource Portal"
   Context: title="Resource Portal"

   Line 466: "School-wide content library and teaching materials"
   Context: description="School-wide content library and teaching materials"

   Line 467: "Browse Resources"
   Context: actionLabel="Browse Resources"

   Line 475: "School Settings"
   Context: title="School Settings"

   Line 476: "Configure school policies, integrations, and preferences"
   Context: description="Configure school policies, integrations, and preferences"

   Line 244: "Manage Settings"
   Context: actionLabel="Manage Settings"

   Line 92: "Access Denied"
   Context: title="Access Denied"

   Line 543: "Teacher access required to view this dashboard"
   Context: description="Teacher access required to view this dashboard"

   Line 559: "Loading your data..."
   Context: title="Loading your data..."

   Line 560: "Fetching classes and assignments"
   Context: subtitle="Fetching classes and assignments"

   Line 565: "Good to see you!"
   Context: title="Good to see you!"

   Line 574: "No Classes Scheduled"
   Context: title="No Classes Scheduled"

   Line 575: "Your class schedule will appear here once classes are created"
   Context: description="Your class schedule will appear here once classes are created"

   Line 576: "Create First Class"
   Context: actionLabel="Create First Class"

   Line 581: "AI Teaching Tools"
   Context: title="AI Teaching Tools"

   Line 584: "Generate Lesson Plan"
   Context: title="Generate Lesson Plan"

   Line 585: "AI-powered lesson planning for your subjects"
   Context: subtitle="AI-powered lesson planning for your subjects"

   Line 590: "Grade Assignments"
   Context: title="Grade Assignments"

   Line 591: "AI-assisted grading with rubric support"
   Context: subtitle="AI-assisted grading with rubric support"

   Line 596: "STEM Activities"
   Context: title="STEM Activities"

   Line 597: "Generate hands-on science activities"
   Context: subtitle="Generate hands-on science activities"

   Line 602: "Quick Stats"
   Context: title="Quick Stats"

   Line 605: "Classes Taught"
   Context: title="Classes Taught"

   Line 606: "No classes assigned yet"
   Context: subtitle="No classes assigned yet"

   Line 610: "Assignments Graded"
   Context: title="Assignments Graded"

   Line 611: "No assignments to grade"
   Context: subtitle="No assignments to grade"

   Line 615: "Students Taught"
   Context: title="Students Taught"

   Line 616: "No students enrolled yet"
   Context: subtitle="No students enrolled yet"

   Line 628: "AI Teaching Assistant"
   Context: title="AI Teaching Assistant"

   Line 629: "Generate lessons, create quizzes, and build STEM activities with AI"
   Context: description="Generate lessons, create quizzes, and build STEM activities with AI"

   Line 630: "Start Creating"
   Context: actionLabel="Start Creating"

   Line 638: "Assignment Manager"
   Context: title="Assignment Manager"

   Line 639: "Create, distribute, and grade assignments across all your classes"
   Context: description="Create, distribute, and grade assignments across all your classes"

   Line 640: "New Assignment"
   Context: actionLabel="New Assignment"

   Line 648: "Teaching Resources"
   Context: title="Teaching Resources"

   Line 649: "Access curriculum materials, lesson plans, and teaching aids"
   Context: description="Access curriculum materials, lesson plans, and teaching aids"

   Line 650: "Browse Library"
   Context: actionLabel="Browse Library"

   Line 658: "Parent Communication"
   Context: title="Parent Communication"

   Line 659: "Message parents about student progress and classroom updates"
   Context: description="Message parents about student progress and classroom updates"

   Line 660: "New Message"
   Context: actionLabel="New Message"

   Line 92: "Access Denied"
   Context: title="Access Denied"

   Line 726: "Parent access required to view this dashboard"
   Context: description="Parent access required to view this dashboard"

   Line 742: "Loading your child"
   Context: title="Loading your child'

   Line 743: "Fetching assignments and grades"
   Context: subtitle="Fetching assignments and grades"

   Line 748: "Welcome!"
   Context: title="Welcome!"

   Line 757: "No Children Enrolled"
   Context: title="No Children Enrolled"

   Line 758: "Your children"
   Context: description="Your children'

   Line 759: "Contact School"
   Context: actionLabel="Contact School"

   Line 764: "AI Homework Helper"
   Context: title="AI Homework Helper"

   Line 767: "Get Homework Help"
   Context: title="Get Homework Help"

   Line 768: "AI-powered assistance for your child"
   Context: subtitle="AI-powered assistance for your child'

   Line 772: "Monthly Usage"
   Context: label="Monthly Usage"

   Line 779: "Photo Math Problems"
   Context: title="Photo Math Problems"

   Line 780: "Take a photo of math homework for instant help"
   Context: subtitle="Take a photo of math homework for instant help"

   Line 788: "Teacher Messages"
   Context: title="Teacher Messages"

   Line 789: "No messages from teachers yet"
   Context: subtitle="No messages from teachers yet"

   Line 794: "School Contact"
   Context: title="School Contact"

   Line 795: "Reach out to school administration"
   Context: subtitle="Reach out to school administration"

   Line 800: "School Upgrade"
   Context: title="School Upgrade"

   Line 803: "Help Your School Go Premium"
   Context: title="Help Your School Go Premium"

   Line 804: "Advocate for advanced AI tools and features"
   Context: subtitle="Advocate for advanced AI tools and features"

   Line 764: "AI Homework Helper"
   Context: title="AI Homework Helper"

   Line 819: "Get step-by-step guidance on homework problems. Take a photo or type your question!"
   Context: description="Get step-by-step guidance on homework problems. Take a photo or type your question!"

   Line 820: "Start Homework Help"
   Context: actionLabel="Start Homework Help"

   Line 788: "Teacher Messages"
   Context: title="Teacher Messages"

   Line 829: "Communication hub for all your child"
   Context: description="Communication hub for all your child'

   Line 830: "No Messages"
   Context: actionLabel="No Messages"

   Line 838: "School Calendar"
   Context: title="School Calendar"

   Line 839: "Important dates, events, and assignment due dates"
   Context: description="Important dates, events, and assignment due dates"

   Line 840: "No Events"
   Context: actionLabel="No Events"

   Line 848: "Account Settings"
   Context: title="Account Settings"

   Line 849: "Manage notifications, privacy, and account preferences"
   Context: description="Manage notifications, privacy, and account preferences"

   Line 244: "Manage Settings"
   Context: actionLabel="Manage Settings"

   Line 78: "Failed to fetch SuperAdmin data:"
   Context: console.error('Failed to fetch SuperAdmin data:'

   Line 137: "Navigate to Contact Sales Form"
   Context: Alert.alert('Navigate to Contact Sales Form'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 261: "Create Alert"
   Context: Alert.alert('Create Alert'

   Line 322: "Failed to fetch school counts:"
   Context: console.error('Failed to fetch school counts:'

   Line 380: "Please contact support to link your school"
   Context: Alert.alert('Please contact support to link your school'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 494: "Generate Report"
   Context: Alert.alert('Generate Report'

   Line 529: "Failed to fetch teacher data:"
   Context: console.error('Failed to fetch teacher data:'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 677: "Generate Lesson"
   Context: Alert.alert('Generate Lesson'

   Line 712: "Failed to fetch parent data:"
   Context: console.error('Failed to fetch parent data:'

   Line 760: "Contact School"
   Context: Alert.alert('Contact School'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 806: "School Upgrade"
   Context: Alert.alert('School Upgrade'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 831: "No messages from teachers yet"
   Context: Alert.alert('No messages from teachers yet'

   Line 841: "No upcoming events"
   Context: Alert.alert('No upcoming events'

   Line 245: "Feature Coming Soon"
   Context: Alert.alert('Feature Coming Soon'

   Line 867: "Photo Homework Problem"
   Context: Alert.alert('Photo Homework Problem'

   Line 92: "Access Denied"
   Context: "Access Denied"

   Line 93: "Super admin access required to view this dashboard"
   Context: "Super admin access required to view this dashboard"

   Line 101: "Global Platform Overview"
   Context: "Global Platform Overview"

   Line 106: "No schools yet"
   Context: 'No schools yet'

   Line 106: "Active tenants"
   Context: 'Active tenants'

   Line 112: "No leads yet"
   Context: 'No leads yet'

   Line 112: "In pipeline"
   Context: 'In pipeline'

   Line 118: "Global reach"
   Context: "Global reach"

   Line 124: "Recent Enterprise Leads"
   Context: "Recent Enterprise Leads"

   Line 129: "Fetching from database"
   Context: "Fetching from database"

   Line 134: "No Leads Yet"
   Context: "No Leads Yet"

   Line 135: "Enterprise leads will appear here when submitted from the contact form"
   Context: "Enterprise leads will appear here when submitted from the contact form"

   Line 137: "Navigate to Contact Sales Form"
   Context: 'Navigate to Contact Sales Form'

   Line 144: "Unnamed Organization"
   Context: 'Unnamed Organization'

   Line 160: "Schools by Region"
   Context: "Schools by Region"

   Line 164: "No schools registered yet"
   Context: "No schools registered yet"

   Line 165: "Schools will appear here after lead conversion"
   Context: "Schools will appear here after lead conversion"

   Line 189: "Sales Pipeline"
   Context: "Sales Pipeline"

   Line 144: "Unnamed Organization"
   Context: 'Unnamed Organization'

   Line 195: "Unknown role"
   Context: 'Unknown role'

   Line 196: "No phone"
   Context: 'No phone'

   Line 203: "No Leads in Pipeline"
   Context: "No Leads in Pipeline"

   Line 204: "Enterprise leads from the contact form will appear here"
   Context: "Enterprise leads from the contact form will appear here"

   Line 221: "Unnamed School"
   Context: 'Unnamed School'

   Line 222: "Unknown location"
   Context: 'Unknown location'

   Line 229: "No Organizations"
   Context: "No Organizations"

   Line 230: "Schools will appear here after being created from leads"
   Context: "Schools will appear here after being created from leads"

   Line 242: "Platform Settings"
   Context: "Platform Settings"

   Line 243: "Global configuration and feature flag management"
   Context: "Global configuration and feature flag management"

   Line 244: "Manage Settings"
   Context: "Manage Settings"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 261: "Create Alert"
   Context: 'Create Alert'

   Line 92: "Access Denied"
   Context: "Access Denied"

   Line 337: "Principal or admin access required to view this dashboard"
   Context: "Principal or admin access required to view this dashboard"

   Line 345: "School Overview"
   Context: "School Overview"

   Line 345: "No School Selected"
   Context: "No School Selected"

   Line 129: "Fetching from database"
   Context: "Fetching from database"

   Line 357: "Unable to load"
   Context: 'Unable to load'

   Line 357: "No teachers"
   Context: 'No teachers'

   Line 357: "Unable to load"
   Context: 'Unable to load'

   Line 362: "No students"
   Context: 'No students'

   Line 357: "Unable to load"
   Context: 'Unable to load'

   Line 367: "No classes"
   Context: 'No classes'

   Line 374: "Setup Required"
   Context: "Setup Required"

   Line 377: "No School Associated"
   Context: "No School Associated"

   Line 378: "Your account needs to be linked to a school to view dashboard metrics"
   Context: "Your account needs to be linked to a school to view dashboard metrics"

   Line 379: "Contact Support"
   Context: "Contact Support"

   Line 380: "Please contact support to link your school"
   Context: 'Please contact support to link your school'

   Line 385: "Quick Actions"
   Context: "Quick Actions"

   Line 388: "Principal Meeting Room"
   Context: "Principal Meeting Room"

   Line 389: "Start or join a video meeting with staff"
   Context: "Start or join a video meeting with staff"

   Line 394: "Manage Teachers"
   Context: "Manage Teachers"

   Line 395: "No teachers yet"
   Context: 'No teachers yet'

   Line 401: "Generate weekly or monthly school reports"
   Context: "Generate weekly or monthly school reports"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 402: "Report generation will be available soon"
   Context: 'Report generation will be available soon'

   Line 407: "Setup Checklist"
   Context: "Setup Checklist"

   Line 411: "Add Teachers"
   Context: "Add Teachers"

   Line 412: "Invite teaching staff to join your school"
   Context: "Invite teaching staff to join your school"

   Line 419: "Enroll Students"
   Context: "Enroll Students"

   Line 420: "Add student records to your school"
   Context: "Add student records to your school"

   Line 427: "Create Classes"
   Context: "Create Classes"

   Line 428: "Set up class schedules and assignments"
   Context: "Set up class schedules and assignments"

   Line 388: "Principal Meeting Room"
   Context: "Principal Meeting Room"

   Line 446: "Video collaboration space for school leadership team meetings"
   Context: "Video collaboration space for school leadership team meetings"

   Line 447: "Start New Meeting"
   Context: "Start New Meeting"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 448: "Video meetings will be available soon"
   Context: 'Video meetings will be available soon'

   Line 455: "Teacher Management"
   Context: "Teacher Management"

   Line 457: "Invite Teachers"
   Context: "Invite Teachers"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 458: "Teacher management will be available soon"
   Context: 'Teacher management will be available soon'

   Line 465: "Resource Portal"
   Context: "Resource Portal"

   Line 467: "Browse Resources"
   Context: "Browse Resources"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 468: "Resource portal will be available soon"
   Context: 'Resource portal will be available soon'

   Line 475: "School Settings"
   Context: "School Settings"

   Line 244: "Manage Settings"
   Context: "Manage Settings"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 478: "Settings will be available soon"
   Context: 'Settings will be available soon'

   Line 494: "Generate Report"
   Context: 'Generate Report'

   Line 92: "Access Denied"
   Context: "Access Denied"

   Line 543: "Teacher access required to view this dashboard"
   Context: "Teacher access required to view this dashboard"

   Line 560: "Fetching classes and assignments"
   Context: "Fetching classes and assignments"

   Line 566: "Your teaching dashboard is ready"
   Context: 'Your teaching dashboard is ready'

   Line 574: "No Classes Scheduled"
   Context: "No Classes Scheduled"

   Line 575: "Your class schedule will appear here once classes are created"
   Context: "Your class schedule will appear here once classes are created"

   Line 576: "Create First Class"
   Context: "Create First Class"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 577: "Class creation will be available soon"
   Context: 'Class creation will be available soon'

   Line 581: "AI Teaching Tools"
   Context: "AI Teaching Tools"

   Line 584: "Generate Lesson Plan"
   Context: "Generate Lesson Plan"

   Line 590: "Grade Assignments"
   Context: "Grade Assignments"

   Line 596: "STEM Activities"
   Context: "STEM Activities"

   Line 602: "Quick Stats"
   Context: "Quick Stats"

   Line 605: "Classes Taught"
   Context: "Classes Taught"

   Line 606: "No classes assigned yet"
   Context: "No classes assigned yet"

   Line 610: "Assignments Graded"
   Context: "Assignments Graded"

   Line 611: "No assignments to grade"
   Context: "No assignments to grade"

   Line 615: "Students Taught"
   Context: "Students Taught"

   Line 616: "No students enrolled yet"
   Context: "No students enrolled yet"

   Line 628: "AI Teaching Assistant"
   Context: "AI Teaching Assistant"

   Line 630: "Start Creating"
   Context: "Start Creating"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 631: "AI tools will be available soon"
   Context: 'AI tools will be available soon'

   Line 638: "Assignment Manager"
   Context: "Assignment Manager"

   Line 640: "New Assignment"
   Context: "New Assignment"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 641: "Assignment creation will be available soon"
   Context: 'Assignment creation will be available soon'

   Line 648: "Teaching Resources"
   Context: "Teaching Resources"

   Line 650: "Browse Library"
   Context: "Browse Library"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 651: "Resource library will be available soon"
   Context: 'Resource library will be available soon'

   Line 658: "Parent Communication"
   Context: "Parent Communication"

   Line 659: "Message parents about student progress and classroom updates"
   Context: "Message parents about student progress and classroom updates"

   Line 660: "New Message"
   Context: "New Message"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 661: "Messaging will be available soon"
   Context: 'Messaging will be available soon'

   Line 677: "Generate Lesson"
   Context: 'Generate Lesson'

   Line 92: "Access Denied"
   Context: "Access Denied"

   Line 726: "Parent access required to view this dashboard"
   Context: "Parent access required to view this dashboard"

   Line 742: "Loading your child"
   Context: "Loading your child'

   Line 743: "Fetching assignments and grades"
   Context: "Fetching assignments and grades"

   Line 757: "No Children Enrolled"
   Context: "No Children Enrolled"

   Line 758: "Your children"
   Context: "Your children'

   Line 759: "Contact School"
   Context: "Contact School"

   Line 760: "Contact School"
   Context: 'Contact School'

   Line 760: "Please contact your school to enroll your children"
   Context: 'Please contact your school to enroll your children'

   Line 764: "AI Homework Helper"
   Context: "AI Homework Helper"

   Line 767: "Get Homework Help"
   Context: "Get Homework Help"

   Line 772: "Monthly Usage"
   Context: "Monthly Usage"

   Line 779: "Photo Math Problems"
   Context: "Photo Math Problems"

   Line 780: "Take a photo of math homework for instant help"
   Context: "Take a photo of math homework for instant help"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 781: "Photo math will be available soon"
   Context: 'Photo math will be available soon'

   Line 788: "Teacher Messages"
   Context: "Teacher Messages"

   Line 789: "No messages from teachers yet"
   Context: "No messages from teachers yet"

   Line 794: "School Contact"
   Context: "School Contact"

   Line 795: "Reach out to school administration"
   Context: "Reach out to school administration"

   Line 800: "School Upgrade"
   Context: "School Upgrade"

   Line 803: "Help Your School Go Premium"
   Context: "Help Your School Go Premium"

   Line 804: "Advocate for advanced AI tools and features"
   Context: "Advocate for advanced AI tools and features"

   Line 806: "School Upgrade"
   Context: 'School Upgrade'

   Line 806: "Contact your principal to learn about premium features"
   Context: 'Contact your principal to learn about premium features'

   Line 764: "AI Homework Helper"
   Context: "AI Homework Helper"

   Line 820: "Start Homework Help"
   Context: "Start Homework Help"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 821: "AI homework helper will be available soon"
   Context: 'AI homework helper will be available soon'

   Line 788: "Teacher Messages"
   Context: "Teacher Messages"

   Line 829: "Communication hub for all your child"
   Context: "Communication hub for all your child'

   Line 830: "No Messages"
   Context: "No Messages"

   Line 831: "No messages from teachers yet"
   Context: 'No messages from teachers yet'

   Line 838: "School Calendar"
   Context: "School Calendar"

   Line 840: "No Events"
   Context: "No Events"

   Line 841: "No upcoming events"
   Context: 'No upcoming events'

   Line 848: "Account Settings"
   Context: "Account Settings"

   Line 244: "Manage Settings"
   Context: "Manage Settings"

   Line 245: "Feature Coming Soon"
   Context: 'Feature Coming Soon'

   Line 478: "Settings will be available soon"
   Context: 'Settings will be available soon'

   Line 867: "Photo Homework Problem"
   Context: 'Photo Homework Problem'

üìÑ components/wireframes/NavigationShells.tsx:
   Line 46: "AI Tools"
   Context: { label: 'AI Tools', icon: '‚ú®', screen: 'ai-tools' }

   Line 46: "AI Tools"
   Context: 'AI Tools'

üìÑ components/worksheets/WorksheetGenerator.tsx:
   Line 59: "math-addition"
   Context: {
    id: 'math-addition',
    title: 'Math Addition',
    description: 'Simple addition problems with visual aids',
    icon: '‚ûï',
    type: 'math',
    color: '#FF6B6B',
    ageGroups: ['3-4', '4-5', '5-6', '6-7']
  }

   Line 68: "math-subtraction"
   Context: {
    id: 'math-subtraction',
    title: 'Math Subtraction',
    description: 'Subtraction practice with counting help',
    icon: '‚ûñ',
    type: 'math',
    color: '#4ECDC4',
    ageGroups: ['4-5', '5-6', '6-7', '7-8']
  }

   Line 77: "math-multiplication"
   Context: {
    id: 'math-multiplication',
    title: 'Math Multiplication',
    description: 'Times tables and multiplication practice',
    icon: '‚úñÔ∏è',
    type: 'math',
    color: '#45B7D1',
    ageGroups: ['6-7', '7-8']
  }

   Line 86: "reading-comprehension"
   Context: {
    id: 'reading-comprehension',
    title: 'Reading Comprehension',
    description: 'Stories with questions to test understanding',
    icon: 'üìñ',
    type: 'reading',
    color: '#96CEB4',
    ageGroups: ['4-5', '5-6', '6-7', '7-8']
  }

   Line 95: "reading-vocabulary"
   Context: {
    id: 'reading-vocabulary',
    title: 'Vocabulary Builder',
    description: 'New words with definitions and examples',
    icon: 'üìö',
    type: 'reading',
    color: '#FECA57',
    ageGroups: ['5-6', '6-7', '7-8']
  }

   Line 104: "activity-coloring"
   Context: {
    id: 'activity-coloring',
    title: 'Coloring Activity',
    description: 'Fun coloring pages with educational themes',
    icon: 'üé®',
    type: 'activity',
    color: '#FF9FF3',
    ageGroups: ['3-4', '4-5', '5-6']
  }

   Line 113: "activity-tracing"
   Context: {
    id: 'activity-tracing',
    title: 'Letter Tracing',
    description: 'Practice writing letters and numbers',
    icon: '‚úèÔ∏è',
    type: 'activity',
    color: '#54A0FF',
    ageGroups: ['3-4', '4-5', '5-6']
  }

   Line 122: "activity-matching"
   Context: {
    id: 'activity-matching',
    title: 'Matching Game',
    description: 'Match objects, sounds, and concepts',
    icon: 'üîó',
    type: 'activity',
    color: '#5F27CD',
    ageGroups: ['3-4', '4-5', '5-6', '6-7']
  }

   Line 151: "medium"
   Context: {
    difficulty: 'medium',
    ageGroup: '5-6',
    colorMode: 'color',
    paperSize: 'A4',
    orientation: 'portrait',
    includeAnswerKey: false,
  }

   Line 162: "medium"
   Context: {
    if (visible) {
      setStep(1);
      setSelectedTemplate(null);
      setWorksheetOptions({
        difficulty: 'medium',
        ageGroup: '5-6',
        colorMode: 'color',
        paperSize: 'A4',
        orientation: 'portrait',
        includeAnswerKey: false,
      }

   Line 212: "Great!"
   Context: { text: 'Great!', onPress: onClose }

   Line 214: "Worksheet generation error:"
   Context: {
      console.error('Worksheet generation error:', error);
      Alert.alert(
        'Generation Failed',
        'Sorry, we couldn\'t create your worksheet. Please try again.',
        [{ text: 'OK' }

   Line 240: "comprehension"
   Context: {
    const readingData: ReadingWorksheetData = {
      type: selectedTemplate!.id.includes('comprehension') ? 'comprehension' : 'vocabulary',
      content: worksheetData.content || 'Sample reading passage for comprehension practice.',
      questions: worksheetData.questions || [
        {
          question: 'What is the main idea of this passage?',
          type: 'short-answer' as const,
          correctAnswer: 'Sample answer'
        }

   Line 250: "Choose the correct answer:"
   Context: {
          question: 'Choose the correct answer:',
          type: 'multiple-choice' as const,
          options: ['Option A', 'Option B', 'Option C', 'Option D'],
          correctAnswer: 'Option A'
        }

   Line 262: "coloring"
   Context: {
    const activityData: ActivitySheetData = {
      type: selectedTemplate!.id.includes('coloring') ? 'coloring' :
            selectedTemplate!.id.includes('tracing') ? 'tracing' :
            selectedTemplate!.id.includes('matching') ? 'matching' : 'creative',
      theme: worksheetData.theme || 'Animals',
      instructions: worksheetData.instructions || 'Follow the instructions and have fun learning!',
      materials: worksheetData.materials || ['Crayons or colored pencils', 'Eraser']
    }

   Line 315: "assignment-worksheet"
   Context: {() => {
            setSelectedTemplate({
              id: 'assignment-worksheet',
              title: assignment.title,
              description: 'Generate worksheet from assignment',
              icon: 'üìù',
              type: 'assignment',
              color: theme.primary,
              ageGroups: ['5-6', '6-7', '7-8']
            }

   Line 381: "Auto-generated"
   Context: {selectedTemplate?.title || 'Auto-generated'}

   Line 652: "Worksheet Generator"
   Context: {step === 1 ? 'Worksheet Generator' : 'Customize Worksheet'}

   Line 370: "Leave blank for generic worksheet"
   Context: placeholder="Leave blank for generic worksheet"

   Line 621: "What should the child do with this activity?"
   Context: placeholder="What should the child do with this activity?"

   Line 215: "Worksheet generation error:"
   Context: console.error('Worksheet generation error:'

   Line 216: "Generation Failed"
   Context: Alert.alert(
        'Generation Failed'

   Line 61: "Math Addition"
   Context: 'Math Addition'

   Line 62: "Simple addition problems with visual aids"
   Context: 'Simple addition problems with visual aids'

   Line 70: "Math Subtraction"
   Context: 'Math Subtraction'

   Line 71: "Subtraction practice with counting help"
   Context: 'Subtraction practice with counting help'

   Line 79: "Math Multiplication"
   Context: 'Math Multiplication'

   Line 80: "Times tables and multiplication practice"
   Context: 'Times tables and multiplication practice'

   Line 88: "Reading Comprehension"
   Context: 'Reading Comprehension'

   Line 89: "Stories with questions to test understanding"
   Context: 'Stories with questions to test understanding'

   Line 97: "Vocabulary Builder"
   Context: 'Vocabulary Builder'

   Line 98: "New words with definitions and examples"
   Context: 'New words with definitions and examples'

   Line 106: "Coloring Activity"
   Context: 'Coloring Activity'

   Line 107: "Fun coloring pages with educational themes"
   Context: 'Fun coloring pages with educational themes'

   Line 115: "Letter Tracing"
   Context: 'Letter Tracing'

   Line 116: "Practice writing letters and numbers"
   Context: 'Practice writing letters and numbers'

   Line 124: "Matching Game"
   Context: 'Matching Game'

   Line 217: "Generation Failed"
   Context: 'Generation Failed'

   Line 248: "Sample answer"
   Context: 'Sample answer'

   Line 253: "Option A"
   Context: 'Option A'

   Line 253: "Option B"
   Context: 'Option B'

   Line 253: "Option C"
   Context: 'Option C'

   Line 253: "Option D"
   Context: 'Option D'

   Line 253: "Option A"
   Context: 'Option A'

   Line 269: "Crayons or colored pencils"
   Context: 'Crayons or colored pencils'

   Line 319: "Generate worksheet from assignment"
   Context: 'Generate worksheet from assignment'

   Line 370: "Leave blank for generic worksheet"
   Context: "Leave blank for generic worksheet"

   Line 652: "Worksheet Generator"
   Context: 'Worksheet Generator'

   Line 652: "Customize Worksheet"
   Context: 'Customize Worksheet'

üìÑ components/worksheets/WorksheetQuickAction.tsx:
   Line 96: "Create Worksheet"
   Context: {assignment ? 'Create Worksheet' : 'Generate PDF'}

   Line 96: "Create Worksheet"
   Context: 'Create Worksheet'

   Line 96: "Generate PDF"
   Context: 'Generate PDF'

üìÑ contexts/AdsContext.tsx:
   Line 227: "[AdsProvider] Error showing interstitial:"
   Context: {
      warn('[AdsProvider] Error showing interstitial:', error);
      track('ads.interstitial_error', {
        tag,
        error: error instanceof Error ? error.message : 'Unknown error',
        tier,
        platform: Platform.OS,
      }

   Line 282: "[AdsProvider] Error with rewarded ad:"
   Context: {
      warn('[AdsProvider] Error with rewarded ad:', error);
      track('ads.rewarded_error', {
        tag,
        error: error instanceof Error ? error.message : 'Unknown error',
        tier,
        platform: Platform.OS,
      }

   Line 231: "Unknown error"
   Context: 'Unknown error'

   Line 231: "Unknown error"
   Context: 'Unknown error'

üìÑ contexts/AuthContext.tsx:
   Line 104: "Failed to fetch user profile:"
   Context: {
      console.error('Failed to fetch user profile:', error);
      setProfile(null);
      setPermissions(createPermissionChecker(null));
      return null;
    }

   Line 187: "[AuthContext] Sign out failed:"
   Context: {
      console.error('[AuthContext] Sign out failed:', error);
      
      // Even if sign-out fails, clear local state to prevent UI issues
      setUser(null);
      setSession(null);
      setProfile(null);
      setPermissions(createPermissionChecker(null));
      
      // Security audit for failed logout
      if (user?.id) {
        securityAuditor.auditAuthenticationEvent(user.id, 'auth_failure', {
          action: 'logout',
          error: error instanceof Error ? error.message : 'Unknown error',
        }

   Line 246: "Failed to fetch user profile:"
   Context: {
        console.error('Failed to fetch user profile:', error);
        if (mounted) {
          setProfile(null);
          setPermissions(createPermissionChecker(null));
        }

   Line 278: "Session user_id:"
   Context: {
          console.log('Session user_id:', storedSession.user_id);
          console.log('Session email:', storedSession.email);
          console.log('Session expires_at:', new Date(storedSession.expires_at * 1000).toISOString());
        }

   Line 283: "Profile role:"
   Context: {
          console.log('Profile role:', storedProfile.role);
          console.log('Profile org_id:', storedProfile.organization_id);
          console.log('Profile email:', storedProfile.email);
        }

   Line 317: "Initial profile refresh failed"
   Context: {
            logger.debug('Initial profile refresh failed', e);
          }

   Line 333: "PostHog identify failed"
   Context: {
            logger.debug('PostHog identify failed', e);
          }

   Line 341: "Sentry setUser failed"
   Context: {
            logger.debug('Sentry setUser failed', e);
          }

   Line 429: "Push registration failed:"
   Context: {
                logger.debug('Push registration failed:', result.reason);
              }

   Line 431: "Push permissions denied"
   Context: {
                logger.debug('Push permissions denied');
                // Could surface a non-blocking UI hint here in the future
              }

   Line 434: "Push registration successful"
   Context: {
                logger.debug('Push registration successful');
              }

   Line 437: "Push registration exception:"
   Context: {
              logger.debug('Push registration exception:', e);
            }

   Line 452: "PostHog identify (auth change) failed"
   Context: {
                logger.debug('PostHog identify (auth change) failed', e);
              }

   Line 460: "Sentry setUser (auth change) failed"
   Context: {
                logger.debug('Sentry setUser (auth change) failed', e);
              }

   Line 472: "Post-login routing failed:"
   Context: {
                console.error('Post-login routing failed:', error);
              }

   Line 490: "Push deregistration failed"
   Context: {
              logger.debug('Push deregistration failed', e);
            }

   Line 494: "PostHog reset failed"
   Context: { logger.debug('PostHog reset failed', e); }

   Line 495: "Sentry clear user failed"
   Context: { logger.debug('Sentry clear user failed', e); }

   Line 503: "Toast on sign-out failed (non-blocking)"
   Context: {
              logger.debug('Toast on sign-out failed (non-blocking)', e);
            }

   Line 511: "Auth state change handler error:"
   Context: {
          console.error('Auth state change handler error:', error);
        }

   Line 520: "Auth listener unsubscribe failed"
   Context: { logger.debug('Auth listener unsubscribe failed', e); }

   Line 521: "Visibility handler cleanup failed"
   Context: { logger.debug('Visibility handler cleanup failed', e); }

   Line 105: "Failed to fetch user profile:"
   Context: console.error('Failed to fetch user profile:'

   Line 105: "Failed to fetch user profile:"
   Context: console.error('Failed to fetch user profile:'

   Line 276: "Stored session exists:"
   Context: console.log('Stored session exists:'

   Line 277: "Stored profile exists:"
   Context: console.log('Stored profile exists:'

   Line 279: "Session user_id:"
   Context: console.log('Session user_id:'

   Line 280: "Session email:"
   Context: console.log('Session email:'

   Line 281: "Session expires_at:"
   Context: console.log('Session expires_at:'

   Line 284: "Profile role:"
   Context: console.log('Profile role:'

   Line 285: "Profile org_id:"
   Context: console.log('Profile org_id:'

   Line 286: "Profile email:"
   Context: console.log('Profile email:'

   Line 473: "Post-login routing failed:"
   Context: console.error('Post-login routing failed:'

   Line 512: "Auth state change handler error:"
   Context: console.error('Auth state change handler error:'

   Line 200: "Unknown error"
   Context: 'Unknown error'

   Line 318: "Initial profile refresh failed"
   Context: 'Initial profile refresh failed'

   Line 334: "PostHog identify failed"
   Context: 'PostHog identify failed'

   Line 342: "Sentry setUser failed"
   Context: 'Sentry setUser failed'

   Line 432: "Push permissions denied"
   Context: 'Push permissions denied'

   Line 435: "Push registration successful"
   Context: 'Push registration successful'

   Line 491: "Push deregistration failed"
   Context: 'Push deregistration failed'

   Line 494: "PostHog reset failed"
   Context: 'PostHog reset failed'

   Line 495: "Sentry clear user failed"
   Context: 'Sentry clear user failed'

   Line 502: "You have been signed out"
   Context: 'You have been signed out'

   Line 520: "Auth listener unsubscribe failed"
   Context: 'Auth listener unsubscribe failed'

   Line 521: "Visibility handler cleanup failed"
   Context: 'Visibility handler cleanup failed'

üìÑ contexts/DashboardPreferencesContext.tsx:
   Line 69: "Failed to load dashboard preferences:"
   Context: {
      console.error('Failed to load dashboard preferences:', error);
    }

   Line 80: "Failed to save dashboard preferences:"
   Context: {
      console.error('Failed to save dashboard preferences:', error);
    }

   Line 116: "Failed to reset dashboard preferences:"
   Context: {
      console.error('Failed to reset dashboard preferences:', error);
    }

   Line 70: "Failed to load dashboard preferences:"
   Context: console.error('Failed to load dashboard preferences:'

   Line 81: "Failed to save dashboard preferences:"
   Context: console.error('Failed to save dashboard preferences:'

   Line 117: "Failed to reset dashboard preferences:"
   Context: console.error('Failed to reset dashboard preferences:'

üìÑ contexts/SubscriptionContext.tsx:
   Line 206: "Seat assignment RPC error:"
   Context: {
        console.error('Seat assignment RPC error:', error?.message || error);
        // Throw the error with the actual message so the UI can show it
        throw new Error(error?.message || 'Failed to assign seat');
      }

   Line 212: "Seat assignment failed:"
   Context: {
      console.error('Seat assignment failed:', err);
      // Re-throw to let the UI handle it
      throw err;
    }

   Line 225: "Seat revocation RPC error:"
   Context: {
        console.error('Seat revocation RPC error:', error?.message || error);
        throw new Error(error?.message || 'Failed to revoke seat');
      }

   Line 230: "Seat revocation failed:"
   Context: {
      console.error('Seat revocation failed:', err);
      throw err;
    }

   Line 207: "Seat assignment RPC error:"
   Context: console.error('Seat assignment RPC error:'

   Line 213: "Seat assignment failed:"
   Context: console.error('Seat assignment failed:'

   Line 226: "Seat revocation RPC error:"
   Context: console.error('Seat revocation RPC error:'

   Line 231: "Seat revocation failed:"
   Context: console.error('Seat revocation failed:'

   Line 209: "Failed to assign seat"
   Context: 'Failed to assign seat'

   Line 227: "Failed to revoke seat"
   Context: 'Failed to revoke seat'

üìÑ contexts/ThemeContext.tsx:
   Line 439: "Failed to load theme mode:"
   Context: {
      console.error('Failed to load theme mode:', error);
    }

   Line 450: "Failed to save theme mode:"
   Context: {
      console.error('Failed to save theme mode:', error);
    }

   Line 440: "Failed to load theme mode:"
   Context: console.error('Failed to load theme mode:'

   Line 451: "Failed to save theme mode:"
   Context: console.error('Failed to save theme mode:'

üìÑ contexts/UpdatesProvider.tsx:
   Line 78: "Failed to check for updates"
   Context: {
      const errorMessage = error instanceof Error ? error.message : 'Failed to check for updates';
      logger.warn('[Updates] Update check failed:', errorMessage, error);
      
      // Track error
      if (error instanceof Error) {
        trackOTAError('check', error);
      }

   Line 106: "Failed to apply update"
   Context: {
      const errorMessage = error instanceof Error ? error.message : 'Failed to apply update';
      updateState({ updateError: errorMessage }

   Line 115: "Update apply failed:"
   Context: {
        logger.warn('Update apply failed:', errorMessage);
      }

   Line 166: "Background update check failed"
   Context: {
      const errorMessage = error instanceof Error ? error.message : 'Background update check failed';
      logger.warn('[Updates] Background update check failed:', errorMessage);
      
      // Don't set error state for background checks to avoid spam
      updateState({ 
        isDownloading: false,
        lastCheckTime: new Date()
      }

   Line 79: "Failed to check for updates"
   Context: 'Failed to check for updates'

   Line 107: "Failed to apply update"
   Context: 'Failed to apply update'

   Line 167: "Background update check failed"
   Context: 'Background update check failed'

üìÑ lib/BiometricBackupManager.ts:
   Line 17: "SecureStore import failed (web or unsupported platform)"
   Context: {
  console.debug('SecureStore import failed (web or unsupported platform)', e);
}

   Line 209: "Error setting up biometric backup:"
   Context: {
      console.error("Error setting up biometric backup:", error);
      return false;
    }

   Line 227: "Error verifying PIN fallback:"
   Context: {
      console.error("Error verifying PIN fallback:", error);
      return false;
    }

   Line 265: "Error verifying security questions:"
   Context: {
      console.error("Error verifying security questions:", error);
      return false;
    }

   Line 303: "Error getting fallback methods:"
   Context: {
      console.error("Error getting fallback methods:", error);
      return { hasPin: false, hasSecurityQuestions: false }

   Line 316: "Error getting backup data:"
   Context: {
      console.error("Error getting backup data:", error);
      return null;
    }

   Line 333: "Error disabling biometric backup:"
   Context: {
      console.error("Error disabling biometric backup:", error);
    }

   Line 357: "Error updating PIN fallback:"
   Context: {
      console.error("Error updating PIN fallback:", error);
      return false;
    }

   Line 366: "No Backup Methods Available"
   Context: {
    const methods = await this.getAvailableFallbackMethods();

    return new Promise((resolve) => {
      try {
        if (!methods.hasPin && !methods.hasSecurityQuestions) {
          Alert.alert(
            "No Backup Methods Available",
            "Please set up backup authentication methods in your profile settings.",
            [{ text: i18next.t("common.ok"), onPress: () => resolve(false) }

   Line 381: "Use PIN"
   Context: {
          options.push({
            text: "Use PIN",
            onPress: () => this.promptPinFallback().then(resolve),
          }

   Line 388: "Use Security Questions"
   Context: {
          options.push({
            text: "Use Security Questions",
            onPress: () => this.promptSecurityQuestions().then(resolve),
          }

   Line 406: "Error showing fallback options:"
   Context: {
        console.error("Error showing fallback options:", error);
        resolve(false);
      }

   Line 416: "Enter PIN"
   Context: {
    // This would typically show a custom PIN input modal
    // For now, using a simple prompt
    return new Promise((resolve) => {
      Alert.prompt(
        "Enter PIN",
        "Enter your backup PIN to authenticate:",
        [
          { text: "Cancel", style: "cancel", onPress: () => resolve(false) }

   Line 521: "Error exporting backup data:"
   Context: {
      console.error("Error exporting backup data:", error);
      return null;
    }

   Line 210: "Error setting up biometric backup:"
   Context: console.error("Error setting up biometric backup:"

   Line 228: "Error verifying PIN fallback:"
   Context: console.error("Error verifying PIN fallback:"

   Line 266: "Error verifying security questions:"
   Context: console.error("Error verifying security questions:"

   Line 304: "Error getting fallback methods:"
   Context: console.error("Error getting fallback methods:"

   Line 317: "Error getting backup data:"
   Context: console.error("Error getting backup data:"

   Line 334: "Error disabling biometric backup:"
   Context: console.error("Error disabling biometric backup:"

   Line 358: "Error updating PIN fallback:"
   Context: console.error("Error updating PIN fallback:"

   Line 372: "No Backup Methods Available"
   Context: Alert.alert(
            "No Backup Methods Available"

   Line 401: "Alternative Authentication"
   Context: Alert.alert(
          "Alternative Authentication"

   Line 407: "Error showing fallback options:"
   Context: console.error("Error showing fallback options:"

   Line 420: "Enter PIN"
   Context: Alert.prompt(
        "Enter PIN"

   Line 463: "Security Question"
   Context: Alert.prompt("Security Question"

   Line 522: "Error exporting backup data:"
   Context: console.error("Error exporting backup data:"

   Line 373: "No Backup Methods Available"
   Context: "No Backup Methods Available"

   Line 383: "Use PIN"
   Context: "Use PIN"

   Line 390: "Use Security Questions"
   Context: "Use Security Questions"

   Line 402: "Alternative Authentication"
   Context: "Alternative Authentication"

   Line 421: "Enter PIN"
   Context: "Enter PIN"

   Line 463: "Security Question"
   Context: "Security Question"

üìÑ lib/NotificationService.ts:
   Line 36: "Notification received:"
   Context: {
  handleNotification: async (notification) => {
    console.log('Notification received:', notification);
    
    // Determine if we should show the notification when app is in foreground
    const shouldShow = notification.request.content.data?.forceShow === true;
    
    return {
      shouldShowAlert: shouldShow,
      shouldPlaySound: true,
      shouldSetBadge: true,
    }

   Line 71: "Must use physical device for Push Notifications"
   Context: {
      // Check if device supports push notifications
      if (!Device.isDevice) {
        console.log('Must use physical device for Push Notifications');
        return false;
      }

   Line 87: "Push notification permission denied"
   Context: {
        console.log('Push notification permission denied');
        return false;
      }

   Line 104: "Failed to initialize notification service:"
   Context: {
      console.error('Failed to initialize notification service:', error);
      return false;
    }

   Line 113: "Failed to initialize notification service"
   Context: {
    try {
      if (!this.isInitialized) {
        const initialized = await this.initialize();
        if (!initialized) {
          throw new Error('Failed to initialize notification service');
        }

   Line 159: "Failed to save push token:"
   Context: {
        console.error('Failed to save push token:', error);
        throw error;
      }

   Line 167: "Failed to register for push notifications:"
   Context: {
      console.error('Failed to register for push notifications:', error);
      return null;
    }

   Line 176: "android"
   Context: {
    if (Platform.OS !== 'android') return;

    // Default channel
    await Notifications.setNotificationChannelAsync('default', {
      name: 'General Notifications',
      description: 'General app notifications',
      importance: Notifications.AndroidImportance.HIGH,
      vibrationPattern: [0, 250, 250, 250],
      lightColor: '#00f5ff',
      sound: 'default',
      enableLights: true,
      enableVibrate: true,
    }

   Line 192: "Urgent Notifications"
   Context: {
      name: 'Urgent Notifications',
      description: 'Critical alerts that require immediate attention',
      importance: Notifications.AndroidImportance.MAX,
      vibrationPattern: [0, 500, 200, 500],
      lightColor: '#ff4444',
      sound: 'default',
      enableLights: true,
      enableVibrate: true,
    }

   Line 204: "Educational Content"
   Context: {
      name: 'Educational Content',
      description: 'Learning activities and educational updates',
      importance: Notifications.AndroidImportance.DEFAULT,
      vibrationPattern: [0, 250],
      lightColor: '#00f5ff',
      sound: 'default',
      enableLights: true,
      enableVibrate: true,
    }

   Line 302: "Failed to schedule local notification:"
   Context: {
      console.error('Failed to schedule local notification:', error);
      throw error;
    }

   Line 311: "Notification cancelled:"
   Context: {
    try {
      await Notifications.cancelScheduledNotificationAsync(identifier);
      console.log('Notification cancelled:', identifier);
    }

   Line 315: "Failed to cancel notification:"
   Context: {
      console.error('Failed to cancel notification:', error);
      throw error;
    }

   Line 324: "All notifications cancelled"
   Context: {
    try {
      await Notifications.cancelAllScheduledNotificationsAsync();
      console.log('All notifications cancelled');
    }

   Line 328: "Failed to cancel all notifications:"
   Context: {
      console.error('Failed to cancel all notifications:', error);
      throw error;
    }

   Line 340: "Failed to get scheduled notifications:"
   Context: {
      console.error('Failed to get scheduled notifications:', error);
      return [];
    }

   Line 349: "Badge count set to:"
   Context: {
    try {
      await Notifications.setBadgeCountAsync(count);
      console.log('Badge count set to:', count);
    }

   Line 353: "Failed to set badge count:"
   Context: {
      console.error('Failed to set badge count:', error);
    }

   Line 378: "Failed to open notification settings:"
   Context: {
      console.error('Failed to open notification settings:', error);
    }

   Line 386: "No push token available"
   Context: {
    try {
      if (!this.pushToken) {
        throw new Error('No push token available');
      }

   Line 409: "Failed to update push token status:"
   Context: {
      console.error('Failed to update push token status:', error);
      throw error;
    }

   Line 38: "Notification received:"
   Context: console.log('Notification received:'

   Line 74: "Must use physical device for Push Notifications"
   Context: console.log('Must use physical device for Push Notifications'

   Line 88: "Push notification permission denied"
   Context: console.log('Push notification permission denied'

   Line 101: "Notification service initialized successfully"
   Context: console.log('Notification service initialized successfully'

   Line 105: "Failed to initialize notification service:"
   Context: console.error('Failed to initialize notification service:'

   Line 160: "Failed to save push token:"
   Context: console.error('Failed to save push token:'

   Line 164: "Push token registered successfully:"
   Context: console.log('Push token registered successfully:'

   Line 168: "Failed to register for push notifications:"
   Context: console.error('Failed to register for push notifications:'

   Line 272: "Notification categories configured"
   Context: console.log('Notification categories configured'

   Line 299: "Local notification scheduled:"
   Context: console.log('Local notification scheduled:'

   Line 303: "Failed to schedule local notification:"
   Context: console.error('Failed to schedule local notification:'

   Line 314: "Notification cancelled:"
   Context: console.log('Notification cancelled:'

   Line 316: "Failed to cancel notification:"
   Context: console.error('Failed to cancel notification:'

   Line 327: "All notifications cancelled"
   Context: console.log('All notifications cancelled'

   Line 329: "Failed to cancel all notifications:"
   Context: console.error('Failed to cancel all notifications:'

   Line 341: "Failed to get scheduled notifications:"
   Context: console.error('Failed to get scheduled notifications:'

   Line 352: "Badge count set to:"
   Context: console.log('Badge count set to:'

   Line 354: "Failed to set badge count:"
   Context: console.error('Failed to set badge count:'

   Line 379: "Failed to open notification settings:"
   Context: console.error('Failed to open notification settings:'

   Line 407: "Push token status updated:"
   Context: console.log('Push token status updated:'

   Line 410: "Failed to update push token status:"
   Context: console.error('Failed to update push token status:'

   Line 74: "Must use physical device for Push Notifications"
   Context: 'Must use physical device for Push Notifications'

   Line 88: "Push notification permission denied"
   Context: 'Push notification permission denied'

   Line 101: "Notification service initialized successfully"
   Context: 'Notification service initialized successfully'

   Line 118: "Failed to initialize notification service"
   Context: 'Failed to initialize notification service'

   Line 181: "General Notifications"
   Context: 'General Notifications'

   Line 182: "General app notifications"
   Context: 'General app notifications'

   Line 193: "Urgent Notifications"
   Context: 'Urgent Notifications'

   Line 194: "Critical alerts that require immediate attention"
   Context: 'Critical alerts that require immediate attention'

   Line 205: "Educational Content"
   Context: 'Educational Content'

   Line 206: "Learning activities and educational updates"
   Context: 'Learning activities and educational updates'

   Line 245: "Mark Read"
   Context: 'Mark Read'

   Line 264: "Mark Complete"
   Context: 'Mark Complete'

   Line 272: "Notification categories configured"
   Context: 'Notification categories configured'

   Line 327: "All notifications cancelled"
   Context: 'All notifications cancelled'

   Line 389: "No push token available"
   Context: 'No push token available'

   Line 118: "Failed to initialize notification service"
   Context: throw new Error('Failed to initialize notification service'

   Line 389: "No push token available"
   Context: throw new Error('No push token available'

üìÑ lib/SoundAlertService.ts:
   Line 119: "Failed to initialize SoundAlertService:"
   Context: {
      console.error('Failed to initialize SoundAlertService:', error);
      throw error;
    }

   Line 128: "re using system sounds
    console.log("
   Context: {
    // Skip preloading as we're using system sounds
    console.log('Using system notification sounds - skipping preload');
  }

   Line 152: "Alert suppressed due to quiet hours"
   Context: {
        console.log('Alert suppressed due to quiet hours');
        return;
      }

   Line 158: "Alert suppressed due to system settings"
   Context: {
        const systemSettings = await this.getSystemNotificationSettings();
        if (!systemSettings.alertsEnabled) {
          console.log('Alert suppressed due to system settings');
          return;
        }

   Line 177: "Failed to play alert:"
   Context: {
      console.error('Failed to play alert:', error);
    }

   Line 191: "Error playing sound:"
   Context: {
      console.error('Error playing sound:', error);
    }

   Line 219: "Failed to play system notification sound:"
   Context: {
      console.warn('Failed to play system notification sound:', error);
    }

   Line 314: "Failed to load alert settings from database:"
   Context: {
      console.warn('Failed to load alert settings from database:', error);
    }

   Line 384: "Failed to update alert settings:"
   Context: {
      console.error('Failed to update alert settings:', error);
      throw error;
    }

   Line 419: "Failed to get alert settings:"
   Context: {
      console.error('Failed to get alert settings:', error);
      return [];
    }

   Line 471: "Failed to get system notification settings:"
   Context: {
      console.error('Failed to get system notification settings:', error);
      return { alertsEnabled: true }

   Line 532: "Failed to log alert event:"
   Context: {
      console.warn('Failed to log alert event:', error);
    }

   Line 549: "Error during SoundAlertService cleanup:"
   Context: {
      console.error('Error during SoundAlertService cleanup:', error);
    }

   Line 118: "SoundAlertService initialized successfully"
   Context: console.log('SoundAlertService initialized successfully'

   Line 120: "Failed to initialize SoundAlertService:"
   Context: console.error('Failed to initialize SoundAlertService:'

   Line 130: "Using system notification sounds - skipping preload"
   Context: console.log('Using system notification sounds - skipping preload'

   Line 153: "Alert suppressed due to quiet hours"
   Context: console.log('Alert suppressed due to quiet hours'

   Line 161: "Alert suppressed due to system settings"
   Context: console.log('Alert suppressed due to system settings'

   Line 178: "Failed to play alert:"
   Context: console.error('Failed to play alert:'

   Line 192: "Error playing sound:"
   Context: console.error('Error playing sound:'

   Line 220: "Failed to play system notification sound:"
   Context: console.warn('Failed to play system notification sound:'

   Line 315: "Failed to load alert settings from database:"
   Context: console.warn('Failed to load alert settings from database:'

   Line 385: "Failed to update alert settings:"
   Context: console.error('Failed to update alert settings:'

   Line 420: "Failed to get alert settings:"
   Context: console.error('Failed to get alert settings:'

   Line 472: "Failed to get system notification settings:"
   Context: console.error('Failed to get system notification settings:'

   Line 533: "Failed to log alert event:"
   Context: console.warn('Failed to log alert event:'

   Line 548: "SoundAlertService cleanup completed"
   Context: console.log('SoundAlertService cleanup completed'

   Line 550: "Error during SoundAlertService cleanup:"
   Context: console.error('Error during SoundAlertService cleanup:'

   Line 118: "SoundAlertService initialized successfully"
   Context: 'SoundAlertService initialized successfully'

   Line 153: "Alert suppressed due to quiet hours"
   Context: 'Alert suppressed due to quiet hours'

   Line 161: "Alert suppressed due to system settings"
   Context: 'Alert suppressed due to system settings'

   Line 432: "Test Alert"
   Context: 'Test Alert'

   Line 548: "SoundAlertService cleanup completed"
   Context: 'SoundAlertService cleanup completed'

üìÑ lib/adMob.ts:
   Line 66: "android"
   Context: {
  if (isInitialized) return true;
  
  try {
    const flags = getFeatureFlagsSync();
    
    // Skip initialization on non-Android platforms during Android-only testing
    if (flags.android_only_mode && Platform.OS !== 'android') {
      log('AdMob initialization skipped: Android-only mode active');
      return false;
    }

   Line 91: "AdMob initialization failed"
   Context: {
    reportError(new Error('AdMob initialization failed'), { error }

   Line 165: "AdMob Stub: Cleanup called"
   Context: {
  debug('AdMob Stub: Cleanup called');
  isInitialized = false;
}

   Line 92: "AdMob initialization failed"
   Context: 'AdMob initialization failed'

   Line 92: "AdMob initialization failed"
   Context: new Error('AdMob initialization failed'

üìÑ lib/ads.ts:
   Line 30: "Failed to initialize ads:"
   Context: {
    warn('Failed to initialize ads:', error);
  }

   Line 29: "Ads initialized"
   Context: 'Ads initialized'

üìÑ lib/ads/InterstitialManager.ts:
   Line 10: "SecureStore import failed (web or unsupported platform)"
   Context: {
  console.debug('SecureStore import failed (web or unsupported platform)', e);
}

   Line 153: "Failed to preload interstitial ad:"
   Context: {
      console.warn('Failed to preload interstitial ad:', error);
    }

   Line 194: "Failed to show interstitial ad:"
   Context: {
      console.warn('Failed to show interstitial ad:', error);
      return false;
    }

   Line 154: "Failed to preload interstitial ad:"
   Context: console.warn('Failed to preload interstitial ad:'

   Line 195: "Failed to show interstitial ad:"
   Context: console.warn('Failed to show interstitial ad:'

üìÑ lib/ads/gating.ts:
   Line 18: "NetInfo not available:"
   Context: {
  console.debug('NetInfo not available:', error);
}

   Line 89: "Web navigator not available:"
   Context: {
      console.debug('Web navigator not available:', error);
    }

   Line 100: "NetInfo not available, assuming online"
   Context: {
    if (!NetInfo) {
      console.debug('NetInfo not available, assuming online');
      return {
        isOnline: true,
        connectionType: null
      }

   Line 114: "Failed to get network state:"
   Context: {
    console.warn('Failed to get network state:', error);
    return {
      isOnline: true, // Assume online if we can't check
      connectionType: null
    }

   Line 130: "Failed to get session count:"
   Context: {
    console.warn('Failed to get session count:', error);
    return 0;
  }

   Line 145: "Failed to increment session count:"
   Context: {
    console.warn('Failed to increment session count:', error);
    return 1;
  }

   Line 258: "Failed to check app state:"
   Context: {
    console.warn('Failed to check app state:', error);
    return true;
  }

   Line 295: "Failed to get ad consent:"
   Context: {
    console.warn('Failed to get ad consent:', error);
    return false; // Default to non-personalized ads
  }

   Line 307: "Failed to set ad consent:"
   Context: {
    console.warn('Failed to set ad consent:', error);
  }

   Line 115: "Failed to get network state:"
   Context: console.warn('Failed to get network state:'

   Line 131: "Failed to get session count:"
   Context: console.warn('Failed to get session count:'

   Line 146: "Failed to increment session count:"
   Context: console.warn('Failed to increment session count:'

   Line 259: "Failed to check app state:"
   Context: console.warn('Failed to check app state:'

   Line 296: "Failed to get ad consent:"
   Context: console.warn('Failed to get ad consent:'

   Line 308: "Failed to set ad consent:"
   Context: console.warn('Failed to set ad consent:'

üìÑ lib/ads/placements.ts:
   Line 10: "banner_parent_dashboard_bottom"
   Context: {
  // Banner ad at the bottom of parent dashboard
  banner_parent_dashboard_bottom: {
    key: 'banner_parent_dashboard_bottom',
    type: 'banner',
    screen: 'parent_dashboard',
    position: 'dashboard_bottom',
    adUnitEnvVar: 'EXPO_PUBLIC_ADMOB_ADUNIT_BANNER_PARENT_DASHBOARD',
    frequencyPolicy: {
      minInterval: 0, // Banner ads are persistent
      dailyLimit: 1000, // Effectively unlimited for banners
      minSessionsBeforeFirst: 1, // Show after first session
    }

   Line 33: "native_parent_feed_inline"
   Context: {
    key: 'native_parent_feed_inline',
    type: 'native',
    screen: 'parent_dashboard',
    position: 'feed_inline',
    adUnitEnvVar: 'EXPO_PUBLIC_ADMOB_ADUNIT_NATIVE_PARENT_FEED',
    frequencyPolicy: {
      minInterval: 300, // 5 minutes between native ads
      dailyLimit: 10, // Max 10 native ads per day
      feedItemInterval: 8, // One native ad every 8 feed items
      minSessionsBeforeFirst: 2, // Wait for 2nd session
    }

   Line 55: "banner_parent_messages"
   Context: {
    key: 'banner_parent_messages',
    type: 'banner',
    screen: 'parent_messages',
    position: 'content_end',
    adUnitEnvVar: 'EXPO_PUBLIC_ADMOB_ADUNIT_BANNER_PARENT_DASHBOARD',
    frequencyPolicy: {
      minInterval: 0,
      dailyLimit: 1000,
      minSessionsBeforeFirst: 1,
    }

   Line 76: "interstitial_parent_navigation"
   Context: {
    key: 'interstitial_parent_navigation',
    type: 'interstitial',
    screen: 'parent_navigation',
    position: 'navigation_break',
    adUnitEnvVar: 'EXPO_PUBLIC_ADMOB_ADUNIT_INTERSTITIAL_PARENT_NAV',
    frequencyPolicy: {
      minInterval: 180, // 3 minutes minimum between interstitials
      dailyLimit: 4, // Max 4 interstitials per day
      minSessionsBeforeFirst: 3, // Never on first or second session
    }

   Line 97: "rewarded_parent_perks"
   Context: {
    key: 'rewarded_parent_perks',
    type: 'rewarded',
    screen: 'parent_dashboard',
    position: 'perk_unlock',
    adUnitEnvVar: 'EXPO_PUBLIC_ADMOB_ADUNIT_REWARDED_PARENT_PERK',
    frequencyPolicy: {
      minInterval: 900, // 15 minutes between rewarded ads
      dailyLimit: 8, // Max 8 rewarded ads per day
      userInitiated: true, // Always user-initiated
      minSessionsBeforeFirst: 1,
    }

   Line 119: "native_parent_list_middle"
   Context: {
    key: 'native_parent_list_middle',
    type: 'native',
    screen: 'parent_lists',
    position: 'list_middle',
    adUnitEnvVar: 'EXPO_PUBLIC_ADMOB_ADUNIT_NATIVE_PARENT_FEED',
    frequencyPolicy: {
      minInterval: 600, // 10 minutes between native ads in lists
      dailyLimit: 6, // Max 6 native ads per day in lists
      feedItemInterval: 12, // One native ad every 12 list items
      minSessionsBeforeFirst: 2,
    }

   Line 28: "Bottom banner on parent dashboard main screen"
   Context: 'Bottom banner on parent dashboard main screen'

   Line 50: "Native ads within scrollable content feeds"
   Context: 'Native ads within scrollable content feeds'

   Line 71: "Banner on parent messages and communication screens"
   Context: 'Banner on parent messages and communication screens'

   Line 92: "Interstitial during natural navigation breaks"
   Context: 'Interstitial during natural navigation breaks'

   Line 114: "Rewarded video to unlock premium perks"
   Context: 'Rewarded video to unlock premium perks'

   Line 136: "Native ads in middle of long lists"
   Context: 'Native ads in middle of long lists'

üìÑ lib/ai-gateway/claude-service.ts:
   Line 255: "edudash.ai.claude.request_failed"
   Context: {
      const processingTime = Date.now() - startTime;
      
      // Track error
      track('edudash.ai.claude.request_failed', {
        service_type: request.serviceType,
        user_id: request.userId,
        error: error instanceof Error ? error.message : 'Unknown error',
        processing_time_ms: processingTime,
      }

   Line 267: "Unknown error"
   Context: {
        request_id: request.id,
        service_type: request.serviceType,
        error: error instanceof Error ? error.message : 'Unknown error',
      }

   Line 404: "rate limit"
   Context: {
    if (error instanceof Error) {
      // Parse Claude API error responses
      if (error.message.includes('rate limit')) {
        return {
          code: 'RATE_LIMITED',
          message: 'Rate limit exceeded. Please try again later.',
          retryable: true,
          retryAfter: 60, // seconds
        }

   Line 460: "Failed to get auth token:"
   Context: {
      console.warn('Failed to get auth token:', error);
      return '';
    }

   Line 474: "Failed to get user ID:"
   Context: {
      console.warn('Failed to get user ID:', error);
      return '';
    }

   Line 513: "test-"
   Context: {
    try {
      const testRequest: AIRequest = {
        id: 'test-' + Date.now(),
        userId: 'test-user',
        serviceType: 'homework_help',
        provider: 'claude',
        prompt: 'Hello, this is a test message.',
        requestedAt: new Date(),
      }

   Line 461: "Failed to get auth token:"
   Context: console.warn('Failed to get auth token:'

   Line 475: "Failed to get user ID:"
   Context: console.warn('Failed to get user ID:'

   Line 262: "Unknown error"
   Context: 'Unknown error'

   Line 262: "Unknown error"
   Context: 'Unknown error'

üìÑ lib/ai-gateway/request-queue.ts:
   Line 117: "Queue cleared"
   Context: {
    const clearedCount = this.queue.length;
    this.queue.forEach(req => {
      req.reject(new Error('Queue cleared'));
    }

   Line 136: "Request timeout"
   Context: {
    return new Promise((_, reject) => {
      setTimeout(() => reject(new Error('Request timeout')), ms);
    }

   Line 7: "Too Many Requests"
   Context: "Too Many Requests"

   Line 76: "Request timeout in queue"
   Context: 'Request timeout in queue'

   Line 120: "Queue cleared"
   Context: 'Queue cleared'

   Line 138: "Request timeout"
   Context: 'Request timeout'

   Line 76: "Request timeout in queue"
   Context: new Error('Request timeout in queue'

   Line 120: "Queue cleared"
   Context: new Error('Queue cleared'

   Line 138: "Request timeout"
   Context: new Error('Request timeout'

üìÑ lib/ai/allocation-direct.ts:
   Line 64: "School not found or no active subscription:"
   Context: {
      console.warn('School not found or no active subscription:', schoolError);
      // Fallback - try to get school without subscription join
      const { data: fallbackSchool, error: fallbackError }

   Line 73: "School completely not found:"
   Context: {
        console.warn('School completely not found:', fallbackError);
        return null;
      }

   Line 144: "Unknown error"
   Context: {
    reportError(error instanceof Error ? error : new Error('Unknown error'), {
      context: 'getSchoolAISubscriptionDirect',
      preschool_id: preschoolId,
    }

   Line 167: "Failed to fetch teacher allocations:"
   Context: {
      console.warn('Failed to fetch teacher allocations:', error);
      return [];
    }

   Line 208: "Unknown error"
   Context: {
    reportError(error instanceof Error ? error : new Error('Unknown error'), {
      context: 'getTeacherAllocationsDirect',
      preschool_id: preschoolId,
    }

   Line 231: "User profile not found:"
   Context: {
      console.warn('User profile not found:', error);
      return false;
    }

   Line 236: "User not in the specified preschool"
   Context: {
      console.warn('User not in the specified preschool');
      return false;
    }

   Line 246: "Error checking allocation permissions:"
   Context: {
    console.warn('Error checking allocation permissions:', error);
    return false;
  }

   Line 264: "Missing required parameters"
   Context: {
  try {
    const client = assertSupabase();
    
    // Validate inputs
    if (!preschoolId || !teacherId) {
      return { success: false, error: 'Missing required parameters' }

   Line 275: "Authentication required"
   Context: {
      return { success: false, error: 'Authentication required' }

   Line 286: "Teacher not found"
   Context: {
      return { success: false, error: 'Teacher not found' }

   Line 314: "Updated by admin"
   Context: {
          allocated_quotas: dbQuotas,
          allocated_by: user.id,
          allocated_at: new Date().toISOString(),
          allocation_reason: options.reason || 'Updated by admin',
          auto_renew: options.auto_renew || false,
          priority_level: options.priority_level || 'normal',
          updated_at: new Date().toISOString(),
        }

   Line 327: "Failed to update allocation: "
   Context: {
        return { success: false, error: 'Failed to update allocation: ' + updateError.message }

   Line 357: "Failed to create allocation: "
   Context: {
        return { success: false, error: 'Failed to create allocation: ' + createError.message }

   Line 413: "Error in allocateAIQuotasDirect:"
   Context: {
    console.error('Error in allocateAIQuotasDirect:', error);
    return { 
      success: false, 
      error: error instanceof Error ? error.message : 'Unknown error' 
    }

   Line 485: "high"
   Context: {
        priority = 'high';
        reasoning = 'High usage detected - increase allocation to prevent limits';
      }

   Line 488: "low"
   Context: {
        priority = 'low';
        reasoning = 'Low usage detected - consider reducing allocation';
        // For low usage, suggest reducing by 20%
        suggested.lesson_generation = Math.max(5, Math.ceil((allocated.lesson_generation || 0) * 0.8));
        suggested.grading_assistance = Math.max(5, Math.ceil((allocated.grading_assistance || 0) * 0.8));
        suggested.homework_help = Math.max(10, Math.ceil((allocated.homework_help || 0) * 0.8));
      }

   Line 547: "Unknown error"
   Context: {
    reportError(error instanceof Error ? error : new Error('Unknown error'), {
      context: 'getOptimalAllocationSuggestionsDirect',
      preschool_id: preschoolId,
    }

   Line 644: "User not found for allocation creation:"
   Context: {
      console.warn('User not found for allocation creation:', userId);
      return null;
    }

   Line 680: "Failed to create teacher allocation:"
   Context: {
      console.error('Failed to create teacher allocation:', error);
      return null;
    }

   Line 716: "Error ensuring teacher allocation:"
   Context: {
    console.error('Error ensuring teacher allocation:', error);
    return null;
  }

   Line 65: "School not found or no active subscription:"
   Context: console.warn('School not found or no active subscription:'

   Line 74: "School completely not found:"
   Context: console.warn('School completely not found:'

   Line 168: "Failed to fetch teacher allocations:"
   Context: console.warn('Failed to fetch teacher allocations:'

   Line 232: "User profile not found:"
   Context: console.warn('User profile not found:'

   Line 237: "User not in the specified preschool"
   Context: console.warn('User not in the specified preschool'

   Line 247: "Error checking allocation permissions:"
   Context: console.warn('Error checking allocation permissions:'

   Line 414: "Error in allocateAIQuotasDirect:"
   Context: console.error('Error in allocateAIQuotasDirect:'

   Line 645: "User not found for allocation creation:"
   Context: console.warn('User not found for allocation creation:'

   Line 681: "Failed to create teacher allocation:"
   Context: console.error('Failed to create teacher allocation:'

   Line 717: "Error ensuring teacher allocation:"
   Context: console.error('Error ensuring teacher allocation:'

   Line 145: "Unknown error"
   Context: 'Unknown error'

   Line 145: "Unknown error"
   Context: 'Unknown error'

   Line 237: "User not in the specified preschool"
   Context: 'User not in the specified preschool'

   Line 270: "Missing required parameters"
   Context: 'Missing required parameters'

   Line 276: "Authentication required"
   Context: 'Authentication required'

   Line 287: "Teacher not found"
   Context: 'Teacher not found'

   Line 290: "Unknown Teacher"
   Context: 'Unknown Teacher'

   Line 318: "Updated by admin"
   Context: 'Updated by admin'

   Line 348: "Allocated by admin"
   Context: 'Allocated by admin'

   Line 145: "Unknown error"
   Context: 'Unknown error'

   Line 483: "Optimized allocation based on usage patterns"
   Context: 'Optimized allocation based on usage patterns'

   Line 145: "Unknown error"
   Context: 'Unknown error'

   Line 145: "Unknown error"
   Context: new Error('Unknown error'

   Line 145: "Unknown error"
   Context: new Error('Unknown error'

   Line 145: "Unknown error"
   Context: new Error('Unknown error'

üìÑ lib/ai/allocation.ts:
   Line 158: "Both function and direct approaches failed, trying direct as final fallback"
   Context: {
    console.warn('Both function and direct approaches failed, trying direct as final fallback');
    try {
      return await getSchoolAISubscriptionDirect(preschoolId);
    }

   Line 162: "Unknown error"
   Context: {
      reportError(error instanceof Error ? error : new Error('Unknown error'), {
        context: 'getSchoolAISubscription',
        preschool_id: preschoolId,
      }

   Line 198: "Teacher allocations function failed, trying direct fallback"
   Context: {
    console.warn('Teacher allocations function failed, trying direct fallback');
    try {
      return await getTeacherAllocationsDirect(preschoolId);
    }

   Line 202: "Unknown error"
   Context: {
      reportError(error instanceof Error ? error : new Error('Unknown error'), {
        context: 'getTeacherAllocations',
        preschool_id: preschoolId,
      }

   Line 230: "Authentication required"
   Context: {
      throw new Error('Authentication required');
    }

   Line 238: "Insufficient permissions to manage AI allocations"
   Context: {
      throw new Error('Insufficient permissions to manage AI allocations');
    }

   Line 253: "allocate_teacher_quotas"
   Context: {
        body: {
          action: 'allocate_teacher_quotas',
          preschool_id: preschoolId,
          teacher_id: teacherId,
          quotas,
          allocated_by: user.id,
          reason: options.reason || 'Quota allocation by admin',
          auto_renew: options.auto_renew || false,
          priority_level: options.priority_level || 'normal',
        }

   Line 275: "Edge function not available for allocation, using direct fallback"
   Context: {
      console.log('Edge function not available for allocation, using direct fallback');
    }

   Line 301: "Unknown error"
   Context: {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    
    track('edudash.ai.allocation.error', {
      preschool_id: preschoolId,
      teacher_id: teacherId,
      error: errorMessage,
    }

   Line 230: "Authentication required"
   Context: {
      throw new Error('Authentication required');
    }

   Line 337: "Self-allocation not enabled. Please contact your administrator."
   Context: {
      return { 
        success: false, 
        error: 'Self-allocation not enabled. Please contact your administrator.' 
      }

   Line 366: "Unknown error"
   Context: {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    
    reportError(error instanceof Error ? error : new Error(errorMessage), {
      context: 'requestAIQuotas',
      preschool_id: preschoolId,
      request,
    }

   Line 396: "User ID required"
   Context: {
      throw new Error('User ID required');
    }

   Line 413: "Edge function not available for teacher allocation, using direct fallback"
   Context: {
      console.log('Edge function not available for teacher allocation, using direct fallback');
    }

   Line 424: "Failed to get teacher allocation:"
   Context: {
    console.warn('Failed to get teacher allocation:', error);
    return null;
  }

   Line 467: "Both direct and auth_user_id lookups failed:"
   Context: {
        console.warn('Both direct and auth_user_id lookups failed:', { directError, mappingError }

   Line 472: "User profile not found for allocation check:"
   Context: {
      console.warn('User profile not found for allocation check:', { userId, preschoolId }

   Line 479: "School scope mismatch:"
   Context: {
      console.warn('School scope mismatch:', { userSchoolId, preschoolId, userId }

   Line 529: "Failed to fetch allocation history"
   Context: {
      throw new Error(error.message || 'Failed to fetch allocation history');
    }

   Line 535: "Unknown error"
   Context: {
    reportError(error instanceof Error ? error : new Error('Unknown error'), {
      context: 'getAllocationHistory',
      preschool_id: preschoolId,
      options,
    }

   Line 591: "AI insights Edge Function not available, using direct database fallback"
   Context: {
      console.log('AI insights Edge Function not available, using direct database fallback');
    }

   Line 607: "Both function and direct approaches failed for AI insights, trying direct as final fallback"
   Context: {
    console.warn('Both function and direct approaches failed for AI insights, trying direct as final fallback');
    try {
      return await getOptimalAllocationSuggestionsDirect(preschoolId);
    }

   Line 611: "Unknown error"
   Context: {
      reportError(error instanceof Error ? error : new Error('Unknown error'), {
        context: 'getOptimalAllocationSuggestions',
        preschool_id: preschoolId,
      }

   Line 649: "Bulk allocation"
   Context: {
    const result = await allocateAIQuotas(preschoolId, allocation.teacher_id, allocation.quotas, {
      reason: allocation.reason || 'Bulk allocation',
    }

   Line 159: "Both function and direct approaches failed, trying direct as final fallback"
   Context: console.warn('Both function and direct approaches failed, trying direct as final fallback'

   Line 199: "Teacher allocations function failed, trying direct fallback"
   Context: console.warn('Teacher allocations function failed, trying direct fallback'

   Line 276: "Edge function not available for allocation, using direct fallback"
   Context: console.log('Edge function not available for allocation, using direct fallback'

   Line 414: "Edge function not available for teacher allocation, using direct fallback"
   Context: console.log('Edge function not available for teacher allocation, using direct fallback'

   Line 425: "Failed to get teacher allocation:"
   Context: console.warn('Failed to get teacher allocation:'

   Line 468: "Both direct and auth_user_id lookups failed:"
   Context: console.warn('Both direct and auth_user_id lookups failed:'

   Line 473: "User profile not found for allocation check:"
   Context: console.warn('User profile not found for allocation check:'

   Line 480: "School scope mismatch:"
   Context: console.warn('School scope mismatch:'

   Line 592: "AI insights Edge Function not available, using direct database fallback"
   Context: console.log('AI insights Edge Function not available, using direct database fallback'

   Line 608: "Both function and direct approaches failed for AI insights, trying direct as final fallback"
   Context: console.warn('Both function and direct approaches failed for AI insights, trying direct as final fallback'

   Line 163: "Unknown error"
   Context: 'Unknown error'

   Line 163: "Unknown error"
   Context: 'Unknown error'

   Line 231: "Authentication required"
   Context: 'Authentication required'

   Line 239: "Insufficient permissions to manage AI allocations"
   Context: 'Insufficient permissions to manage AI allocations'

   Line 260: "Quota allocation by admin"
   Context: 'Quota allocation by admin'

   Line 163: "Unknown error"
   Context: 'Unknown error'

   Line 231: "Authentication required"
   Context: 'Authentication required'

   Line 163: "Unknown error"
   Context: 'Unknown error'

   Line 397: "User ID required"
   Context: 'User ID required'

   Line 530: "Failed to fetch allocation history"
   Context: 'Failed to fetch allocation history'

   Line 163: "Unknown error"
   Context: 'Unknown error'

   Line 163: "Unknown error"
   Context: 'Unknown error'

   Line 651: "Bulk allocation"
   Context: 'Bulk allocation'

   Line 163: "Unknown error"
   Context: new Error('Unknown error'

   Line 163: "Unknown error"
   Context: new Error('Unknown error'

   Line 231: "Authentication required"
   Context: throw new Error('Authentication required'

   Line 239: "Insufficient permissions to manage AI allocations"
   Context: throw new Error('Insufficient permissions to manage AI allocations'

   Line 231: "Authentication required"
   Context: throw new Error('Authentication required'

   Line 397: "User ID required"
   Context: throw new Error('User ID required'

   Line 163: "Unknown error"
   Context: new Error('Unknown error'

   Line 163: "Unknown error"
   Context: new Error('Unknown error'

üìÑ lib/ai/api.ts:
   Line 121: "Failed to fetch user limits"
   Context: {
      throw new Error(error.message || 'Failed to fetch user limits');
    }

   Line 125: "No data received from limits service"
   Context: {
      throw new Error('No data received from limits service');
    }

   Line 137: "Unknown error"
   Context: {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    
    // Track failed API call
    track('edudash.ai.api.user_limits_failed', {
      user_id: userId,
      error: errorMessage,
      duration_ms: Date.now() - startTime,
    }

   Line 173: "Failed to fetch organization limits"
   Context: {
      throw new Error(error.message || 'Failed to fetch organization limits');
    }

   Line 177: "No data received from org limits service"
   Context: {
      throw new Error('No data received from org limits service');
    }

   Line 188: "Unknown error"
   Context: {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    
    track('edudash.ai.api.org_limits_failed', {
      preschool_id: preschoolId,
      error: errorMessage,
      duration_ms: Date.now() - startTime,
    }

   Line 222: "Failed to fetch school usage summary"
   Context: {
      throw new Error(error.message || 'Failed to fetch school usage summary');
    }

   Line 226: "No data received from school usage service"
   Context: {
      throw new Error('No data received from school usage service');
    }

   Line 237: "Unknown error"
   Context: {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    
    track('edudash.ai.api.school_usage_failed', {
      preschool_id: preschoolId,
      error: errorMessage,
      duration_ms: Date.now() - startTime,
    }

   Line 278: "Failed to fetch recent usage"
   Context: {
      throw new Error(error.message || 'Failed to fetch recent usage');
    }

   Line 282: "No data received from recent usage service"
   Context: {
      throw new Error('No data received from recent usage service');
    }

   Line 296: "Unknown error"
   Context: {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    
    track('edudash.ai.api.recent_usage_failed', {
      error: errorMessage,
      duration_ms: Date.now() - startTime,
      ...params,
    }

   Line 334: "Failed to fetch quota status"
   Context: {
      throw new Error(error.message || 'Failed to fetch quota status');
    }

   Line 338: "No data received from quota service"
   Context: {
      throw new Error('No data received from quota service');
    }

   Line 351: "Unknown error"
   Context: {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    
    track('edudash.ai.api.quota_status_failed', {
      user_id: userId,
      service_type: serviceType,
      error: errorMessage,
      duration_ms: Date.now() - startTime,
    }

   Line 414: "No response from AI service"
   Context: {
      throw new Error('No response from AI service');
    }

   Line 441: "Unknown error"
   Context: {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    
    track('edudash.ai.request.failed', {
      service_type: params.service_type,
      error_code: 'client_error',
      duration_ms: Date.now() - startTime,
      retry_count: 0,
    }

   Line 484: "Failed to fetch AI insights"
   Context: {
      throw new Error(error.message || 'Failed to fetch AI insights');
    }

   Line 488: "No insights received from AI service"
   Context: {
      throw new Error('No insights received from AI service');
    }

   Line 501: "Unknown error"
   Context: {
    const errorMessage = error instanceof Error ? error.message : 'Unknown error';
    
    track('edudash.ai.api.insights_failed', {
      scope,
      error: errorMessage,
      duration_ms: Date.now() - startTime,
    }

   Line 529: "An unexpected error occurred"
   Context: {
  const message = error?.message || 'An unexpected error occurred';
  const code = error?.code || 'unknown_error';
  
  return {
    message,
    code,
    isQuotaExceeded: code === 'quota_exceeded',
    isRateLimited: code === 'rate_limited',
    quotaInfo: error?.quota_info,
  }

   Line 122: "Failed to fetch user limits"
   Context: 'Failed to fetch user limits'

   Line 126: "No data received from limits service"
   Context: 'No data received from limits service'

   Line 138: "Unknown error"
   Context: 'Unknown error'

   Line 174: "Failed to fetch organization limits"
   Context: 'Failed to fetch organization limits'

   Line 178: "No data received from org limits service"
   Context: 'No data received from org limits service'

   Line 138: "Unknown error"
   Context: 'Unknown error'

   Line 223: "Failed to fetch school usage summary"
   Context: 'Failed to fetch school usage summary'

   Line 227: "No data received from school usage service"
   Context: 'No data received from school usage service'

   Line 138: "Unknown error"
   Context: 'Unknown error'

   Line 279: "Failed to fetch recent usage"
   Context: 'Failed to fetch recent usage'

   Line 283: "No data received from recent usage service"
   Context: 'No data received from recent usage service'

   Line 138: "Unknown error"
   Context: 'Unknown error'

   Line 335: "Failed to fetch quota status"
   Context: 'Failed to fetch quota status'

   Line 339: "No data received from quota service"
   Context: 'No data received from quota service'

   Line 138: "Unknown error"
   Context: 'Unknown error'

   Line 411: "AI request failed"
   Context: 'AI request failed'

   Line 415: "No response from AI service"
   Context: 'No response from AI service'

   Line 138: "Unknown error"
   Context: 'Unknown error'

   Line 485: "Failed to fetch AI insights"
   Context: 'Failed to fetch AI insights'

   Line 489: "No insights received from AI service"
   Context: 'No insights received from AI service'

   Line 138: "Unknown error"
   Context: 'Unknown error'

   Line 530: "An unexpected error occurred"
   Context: 'An unexpected error occurred'

   Line 126: "No data received from limits service"
   Context: throw new Error('No data received from limits service'

   Line 178: "No data received from org limits service"
   Context: throw new Error('No data received from org limits service'

   Line 227: "No data received from school usage service"
   Context: throw new Error('No data received from school usage service'

   Line 283: "No data received from recent usage service"
   Context: throw new Error('No data received from recent usage service'

   Line 339: "No data received from quota service"
   Context: throw new Error('No data received from quota service'

   Line 415: "No response from AI service"
   Context: throw new Error('No response from AI service'

   Line 489: "No insights received from AI service"
   Context: throw new Error('No insights received from AI service'

üìÑ lib/ai/capabilities.ts:
   Line 346: "Premium is higher than basic"
   Context: {
 *   console.log('Premium is higher than basic');
 * }

   Line 368: "FeatureGatedError"
   Context: {
  public readonly capability: DashCapability;
  public readonly requiredTier: Tier;
  public readonly currentTier?: Tier;

  constructor(
    message: string,
    capability: DashCapability,
    requiredTier: Tier,
    currentTier?: Tier
  ) {
    super(message);
    this.name = 'FeatureGatedError';
    this.capability = capability;
    this.requiredTier = requiredTier;
    this.currentTier = currentTier;
    
    // Maintains proper stack trace for where error was thrown (V8 only)
    if (Error.captureStackTrace) {
      Error.captureStackTrace(this, FeatureGatedError);
    }

   Line 347: "Premium is higher than basic"
   Context: console.log('Premium is higher than basic'

   Line 347: "Premium is higher than basic"
   Context: 'Premium is higher than basic'

   Line 362: "Image analysis requires Premium subscription"
   Context: 'Image analysis requires Premium subscription'

   Line 380: "FeatureGatedError"
   Context: 'FeatureGatedError'

üìÑ lib/ai/guards.ts:
   Line 316: "Error checking AI quota, assuming allowed:"
   Context: {
    // On error, assume allowed (server-side will handle final enforcement)
    console.warn('Error checking AI quota, assuming allowed:', error);
    return true;
  }

   Line 141: "Quota check failed, proceeding with function execution:"
   Context: console.warn('Quota check failed, proceeding with function execution:'

   Line 318: "Error checking AI quota, assuming allowed:"
   Context: console.warn('Error checking AI quota, assuming allowed:'

üìÑ lib/ai/hooks/useAIAllocation.ts:
   Line 78: "School AI subscription and quota details"
   Context: {
      description: 'School AI subscription and quota details',
    }

   Line 106: "All teacher AI allocations for school"
   Context: {
      description: 'All teacher AI allocations for school',
    }

   Line 135: "Individual teacher AI allocation"
   Context: {
      description: 'Individual teacher AI allocation',
    }

   Line 166: "Server-side canManageAllocations check failed, using client-side result:"
   Context: {
          console.warn('Server-side canManageAllocations check failed, using client-side result:', error);
          return clientSideCanManage;
        }

   Line 177: "User allocation management permissions (client + server)"
   Context: {
      description: 'User allocation management permissions (client + server)',
    }

   Line 209: "AI allocation audit history"
   Context: {
      description: 'AI allocation audit history',
    }

   Line 246: "AI quota optimization suggestions"
   Context: {
      description: 'AI quota optimization suggestions',
    }

   Line 274: "No school context available"
   Context: {
      if (!preschoolId) {
        throw new Error('No school context available');
      }

   Line 286: "Failed to allocate quotas"
   Context: {
        throw new Error(result.error || 'Failed to allocate quotas');
      }

   Line 331: "Allocate AI quotas to teacher"
   Context: {
      description: 'Allocate AI quotas to teacher',
    }

   Line 346: "No school context available"
   Context: {
    mutationFn: async (request: AllocationRequest) => {
      if (!preschoolId) {
        throw new Error('No school context available');
      }

   Line 354: "Failed to request quotas"
   Context: {
        throw new Error(result.error || 'Failed to request quotas');
      }

   Line 390: "Request AI quota allocation"
   Context: {
      description: 'Request AI quota allocation',
    }

   Line 274: "No school context available"
   Context: {
      if (!preschoolId) {
        throw new Error('No school context available');
      }

   Line 417: "Bulk allocation failed"
   Context: {
        throw new Error('Bulk allocation failed');
      }

   Line 468: "Bulk allocate AI quotas to multiple teachers"
   Context: {
      description: 'Bulk allocate AI quotas to multiple teachers',
    }

   Line 167: "Server-side canManageAllocations check failed, using client-side result:"
   Context: console.warn('Server-side canManageAllocations check failed, using client-side result:'

   Line 79: "School AI subscription and quota details"
   Context: 'School AI subscription and quota details'

   Line 107: "All teacher AI allocations for school"
   Context: 'All teacher AI allocations for school'

   Line 136: "Individual teacher AI allocation"
   Context: 'Individual teacher AI allocation'

   Line 210: "AI allocation audit history"
   Context: 'AI allocation audit history'

   Line 247: "AI quota optimization suggestions"
   Context: 'AI quota optimization suggestions'

   Line 276: "No school context available"
   Context: 'No school context available'

   Line 287: "Failed to allocate quotas"
   Context: 'Failed to allocate quotas'

   Line 325: "Allocation failed"
   Context: 'Allocation failed'

   Line 332: "Allocate AI quotas to teacher"
   Context: 'Allocate AI quotas to teacher'

   Line 276: "No school context available"
   Context: 'No school context available'

   Line 355: "Failed to request quotas"
   Context: 'Failed to request quotas'

   Line 385: "Request failed"
   Context: 'Request failed'

   Line 391: "Request AI quota allocation"
   Context: 'Request AI quota allocation'

   Line 276: "No school context available"
   Context: 'No school context available'

   Line 418: "Bulk allocation failed"
   Context: 'Bulk allocation failed'

   Line 418: "Bulk allocation failed"
   Context: 'Bulk allocation failed'

   Line 469: "Bulk allocate AI quotas to multiple teachers"
   Context: 'Bulk allocate AI quotas to multiple teachers'

   Line 276: "No school context available"
   Context: throw new Error('No school context available'

   Line 325: "Allocation failed"
   Context: new Error('Allocation failed'

   Line 276: "No school context available"
   Context: throw new Error('No school context available'

   Line 385: "Request failed"
   Context: new Error('Request failed'

   Line 276: "No school context available"
   Context: throw new Error('No school context available'

   Line 418: "Bulk allocation failed"
   Context: throw new Error('Bulk allocation failed'

   Line 418: "Bulk allocation failed"
   Context: new Error('Bulk allocation failed'

üìÑ lib/ai/lessonGenerator.ts:
   Line 69: "Failed to save lesson"
   Context: {
      return { success: false, error: error?.message || 'Failed to save lesson' }

   Line 70: "Failed to save lesson"
   Context: 'Failed to save lesson'

üìÑ lib/ai/models.ts:
   Line 38: "claude-3-haiku"
   Context: {
  return [
    {
      id: 'claude-3-haiku',
      name: 'Claude 3 Haiku',
      displayName: 'Dash Fast',
      provider: 'claude',
      relativeCost: MODEL_WEIGHTS['claude-3-haiku'],
      minTier: 'free',
      description: 'Lightning-fast responses for quick questions and basic lesson planning',
      notes: 'Available on all plans'
    }

   Line 50: "claude-3-sonnet"
   Context: {
      id: 'claude-3-sonnet',
      name: 'Claude 3 Sonnet',
      displayName: 'Dash Smart',
      provider: 'claude',
      relativeCost: MODEL_WEIGHTS['claude-3-sonnet'],
      minTier: 'starter',
      description: 'Balanced intelligence for comprehensive lesson generation and detailed feedback',
      notes: 'Starter plan and above'
    }

   Line 60: "claude-3-opus"
   Context: {
      id: 'claude-3-opus',
      name: 'Claude 3 Opus',
      displayName: 'Dash Expert',
      provider: 'claude',
      relativeCost: MODEL_WEIGHTS['claude-3-opus'],
      minTier: 'premium',
      description: 'Maximum intelligence for complex educational content and advanced grading',
      notes: 'Premium and Enterprise only'
    }

   Line 43: "Dash Fast"
   Context: 'Dash Fast'

   Line 48: "Available on all plans"
   Context: 'Available on all plans'

   Line 53: "Dash Smart"
   Context: 'Dash Smart'

   Line 57: "Balanced intelligence for comprehensive lesson generation and detailed feedback"
   Context: 'Balanced intelligence for comprehensive lesson generation and detailed feedback'

   Line 58: "Starter plan and above"
   Context: 'Starter plan and above'

   Line 63: "Dash Expert"
   Context: 'Dash Expert'

   Line 67: "Maximum intelligence for complex educational content and advanced grading"
   Context: 'Maximum intelligence for complex educational content and advanced grading'

   Line 68: "Premium and Enterprise only"
   Context: 'Premium and Enterprise only'

üìÑ lib/ai/preferences.ts:
   Line 10: "SecureStore import failed (web or unsupported platform)"
   Context: {
  console.debug('SecureStore import failed (web or unsupported platform)', e);
}

üìÑ lib/ai/subscription-gating.ts:
   Line 67: "Error fetching user subscription context:"
   Context: {
    console.error('Error fetching user subscription context:', error)
    return null
  }

   Line 123: "Error fetching organization tier:"
   Context: {
    console.error('Error fetching organization tier:', error)
    return 'free'
  }

   Line 185: "Error checking model access:"
   Context: {
    console.error('Error checking model access:', error)
    return {
      allowed: false,
      reason: 'unauthorized'
    }

   Line 252: "Error checking quota limits:"
   Context: {
    console.error('Error checking quota limits:', error)
    return { allowed: true }

   Line 270: "Error getting available models for user:"
   Context: {
    console.error('Error getting available models for user:', error)
    return ['claude-3-haiku'] // fallback
  }

   Line 288: "Error getting default model for user:"
   Context: {
    console.error('Error getting default model for user:', error)
    return 'claude-3-haiku' // fallback
  }

   Line 68: "Error fetching user subscription context:"
   Context: console.error('Error fetching user subscription context:'

   Line 124: "Error fetching organization tier:"
   Context: console.error('Error fetching organization tier:'

   Line 186: "Error checking model access:"
   Context: console.error('Error checking model access:'

   Line 253: "Error checking quota limits:"
   Context: console.error('Error checking quota limits:'

   Line 271: "Error getting available models for user:"
   Context: console.error('Error getting available models for user:'

   Line 289: "Error getting default model for user:"
   Context: console.error('Error getting default model for user:'

üìÑ lib/ai/usage.ts:
   Line 10: "SecureStore import failed (web or unsupported platform)"
   Context: {
  console.debug('SecureStore import failed (web or unsupported platform)', e);
}

   Line 405: "Using local usage as fallback - server unavailable:"
   Context: console.warn('Using local usage as fallback - server unavailable:'

üìÑ lib/analytics.ts:
   Line 204: "Failed to track analytics event:"
   Context: {
    console.error('Failed to track analytics event:', error);
    // Don't throw - analytics failures shouldn't break app functionality
  }

   Line 263: "Failed to identify user:"
   Context: {
    console.error('Failed to identify user:', error);
  }

   Line 205: "Failed to track analytics event:"
   Context: console.error('Failed to track analytics event:'

   Line 264: "Failed to identify user:"
   Context: console.error('Failed to identify user:'

üìÑ lib/api/assignments.ts:
   Line 165: "include_submissions"
   Context: {
      try {
        const assignmentId = context.params.id;
        const url = new URL(request.url);
        const includeSubmissions = url.searchParams.get('include_submissions') === 'true';

        const assignmentService = new AssignmentService(supabase);
        const result = await assignmentService.getAssignmentById(
          assignmentId,
          user.id,
          profile.role as UserRole,
          profile.organization_id,
          includeSubmissions
        );

        if (!result.success) {
          const statusMap: Record<string, number> = {
            'ASSIGNMENT_NOT_FOUND': 404,
            'INSUFFICIENT_PERMISSIONS': 403,
            'INTERNAL_ERROR': 500,
          }

   Line 308: "Assignment deleted successfully"
   Context: {
          success: true,
          message: 'Assignment deleted successfully'
        }

   Line 336: "course_id"
   Context: {
      try {
        const url = new URL(request.url);
        const courseId = url.searchParams.get('course_id') || undefined;

        const assignmentService = new AssignmentService(supabase);
        const result = await assignmentService.getAssignmentStats(
          user.id,
          profile.role as UserRole,
          profile.organization_id,
          courseId
        );

        if (!result.success) {
          const statusMap: Record<string, number> = {
            'INSUFFICIENT_PERMISSIONS': 403,
            'FETCH_FAILED': 500,
            'INTERNAL_ERROR': 500,
          }

   Line 407: "Assignment not found"
   Context: {
          return NextResponse.json(
            { error: 'Assignment not found' }

   Line 455: "Assignment duplicated successfully"
   Context: {
          success: true,
          assignment: result.data,
          message: 'Assignment duplicated successfully'
        }

   Line 495: "Validation error"
   Context: {
    return NextResponse.json(
      { 
        error: 'Validation error',
        details: error.errors 
      }

   Line 201: "Internal server error"
   Context: { error: 'Internal server error' }

   Line 86: "Invalid request parameters"
   Context: 'Invalid request parameters'

   Line 142: "Invalid request data"
   Context: 'Invalid request data'

   Line 201: "Internal server error"
   Context: 'Internal server error'

   Line 142: "Invalid request data"
   Context: 'Invalid request data'

   Line 310: "Assignment deleted successfully"
   Context: 'Assignment deleted successfully'

   Line 201: "Internal server error"
   Context: 'Internal server error'

   Line 201: "Internal server error"
   Context: 'Internal server error'

   Line 409: "Assignment not found"
   Context: 'Assignment not found'

   Line 458: "Assignment duplicated successfully"
   Context: 'Assignment duplicated successfully'

   Line 142: "Invalid request data"
   Context: 'Invalid request data'

   Line 495: "ZodError"
   Context: 'ZodError'

   Line 498: "Validation error"
   Context: 'Validation error'

   Line 201: "Internal server error"
   Context: 'Internal server error'

üìÑ lib/api/courses.ts:
   Line 52: "Content-Type"
   Context: {
          status: 400,
          headers: { 'Content-Type': 'application/json' }

   Line 61: "Content-Type"
   Context: {
        headers: { 'Content-Type': 'application/json' }

   Line 65: "List courses error:"
   Context: {
      console.error('List courses error:', error);
      return new Response(JSON.stringify({
        error: 'Internal server error',
      }

   Line 69: "Content-Type"
   Context: {
        status: 500,
        headers: { 'Content-Type': 'application/json' }

   Line 102: "Content-Type"
   Context: {
            status: 400,
            headers: { 'Content-Type': 'application/json' }

   Line 108: "Course created successfully"
   Context: {
          success: true,
          data: result.data,
          message: 'Course created successfully',
        }

   Line 112: "Content-Type"
   Context: {
          status: 201,
          headers: { 'Content-Type': 'application/json' }

   Line 117: "Create course error:"
   Context: {
        console.error('Create course error:', error);
        return new Response(JSON.stringify({
          error: 'Internal server error',
        }

   Line 121: "Content-Type"
   Context: {
          status: 500,
          headers: { 'Content-Type': 'application/json' }

   Line 157: "Content-Type"
   Context: {
          status: statusCode,
          headers: { 'Content-Type': 'application/json' }

   Line 61: "Content-Type"
   Context: {
        headers: { 'Content-Type': 'application/json' }

   Line 170: "Get course error:"
   Context: {
      console.error('Get course error:', error);
      return new Response(JSON.stringify({
        error: 'Internal server error',
      }

   Line 69: "Content-Type"
   Context: {
        status: 500,
        headers: { 'Content-Type': 'application/json' }

   Line 214: "Content-Type"
   Context: {
            status: statusCode,
            headers: { 'Content-Type': 'application/json' }

   Line 220: "Course updated successfully"
   Context: {
          success: true,
          data: result.data,
          message: 'Course updated successfully',
        }

   Line 224: "Content-Type"
   Context: {
          headers: { 'Content-Type': 'application/json' }

   Line 228: "Update course error:"
   Context: {
        console.error('Update course error:', error);
        return new Response(JSON.stringify({
          error: 'Internal server error',
        }

   Line 121: "Content-Type"
   Context: {
          status: 500,
          headers: { 'Content-Type': 'application/json' }

   Line 214: "Content-Type"
   Context: {
            status: statusCode,
            headers: { 'Content-Type': 'application/json' }

   Line 275: "Course deleted successfully"
   Context: {
          success: true,
          message: 'Course deleted successfully',
        }

   Line 224: "Content-Type"
   Context: {
          headers: { 'Content-Type': 'application/json' }

   Line 282: "Delete course error:"
   Context: {
        console.error('Delete course error:', error);
        return new Response(JSON.stringify({
          error: 'Internal server error',
        }

   Line 121: "Content-Type"
   Context: {
          status: 500,
          headers: { 'Content-Type': 'application/json' }

   Line 214: "Content-Type"
   Context: {
            status: statusCode,
            headers: { 'Content-Type': 'application/json' }

   Line 335: "Successfully enrolled in course"
   Context: {
          success: true,
          message: 'Successfully enrolled in course',
        }

   Line 112: "Content-Type"
   Context: {
          status: 201,
          headers: { 'Content-Type': 'application/json' }

   Line 343: "Course enrollment error:"
   Context: {
        console.error('Course enrollment error:', error);
        return new Response(JSON.stringify({
          error: 'Internal server error',
        }

   Line 121: "Content-Type"
   Context: {
          status: 500,
          headers: { 'Content-Type': 'application/json' }

   Line 214: "Content-Type"
   Context: {
            status: statusCode,
            headers: { 'Content-Type': 'application/json' }

   Line 224: "Content-Type"
   Context: {
          headers: { 'Content-Type': 'application/json' }

   Line 396: "Get course roster error:"
   Context: {
        console.error('Get course roster error:', error);
        return new Response(JSON.stringify({
          error: 'Internal server error',
        }

   Line 121: "Content-Type"
   Context: {
          status: 500,
          headers: { 'Content-Type': 'application/json' }

   Line 214: "Content-Type"
   Context: {
            status: statusCode,
            headers: { 'Content-Type': 'application/json' }

   Line 449: "Student removed from course successfully"
   Context: {
          success: true,
          message: 'Student removed from course successfully',
        }

   Line 224: "Content-Type"
   Context: {
          headers: { 'Content-Type': 'application/json' }

   Line 456: "Remove student error:"
   Context: {
        console.error('Remove student error:', error);
        return new Response(JSON.stringify({
          error: 'Internal server error',
        }

   Line 121: "Content-Type"
   Context: {
          status: 500,
          headers: { 'Content-Type': 'application/json' }

   Line 214: "Content-Type"
   Context: {
            status: statusCode,
            headers: { 'Content-Type': 'application/json' }

   Line 503: "Join code regenerated successfully"
   Context: {
          success: true,
          data: result.data,
          message: 'Join code regenerated successfully',
        }

   Line 224: "Content-Type"
   Context: {
          headers: { 'Content-Type': 'application/json' }

   Line 511: "Regenerate join code error:"
   Context: {
        console.error('Regenerate join code error:', error);
        return new Response(JSON.stringify({
          error: 'Internal server error',
        }

   Line 121: "Content-Type"
   Context: {
          status: 500,
          headers: { 'Content-Type': 'application/json' }

   Line 52: "Content-Type"
   Context: {
          status: 400,
          headers: { 'Content-Type': 'application/json' }

   Line 61: "Content-Type"
   Context: {
        headers: { 'Content-Type': 'application/json' }

   Line 554: "Get course stats error:"
   Context: {
      console.error('Get course stats error:', error);
      return new Response(JSON.stringify({
        error: 'Internal server error',
      }

   Line 69: "Content-Type"
   Context: {
        status: 500,
        headers: { 'Content-Type': 'application/json' }

   Line 569: "GET /api/courses"
   Context: {
  // CRUD operations
  'GET /api/courses': listCourses,
  'POST /api/courses': createCourse,
  'GET /api/courses/:courseId': getCourse,
  'PATCH /api/courses/:courseId': updateCourse,
  'DELETE /api/courses/:courseId': deleteCourse,

  // Enrollment operations
  'POST /api/courses/:courseId/enroll': enrollInCourse,
  'GET /api/courses/:courseId/students': getCourseRoster,
  'DELETE /api/courses/:courseId/students/:studentId': removeStudentFromCourse,

  // Course management
  'POST /api/courses/:courseId/join-code/regenerate': regenerateJoinCode,

  // Statistics
  'GET /api/courses/stats': getCourseStats,
}

   Line 66: "List courses error:"
   Context: console.error('List courses error:'

   Line 118: "Create course error:"
   Context: console.error('Create course error:'

   Line 171: "Get course error:"
   Context: console.error('Get course error:'

   Line 229: "Update course error:"
   Context: console.error('Update course error:'

   Line 283: "Delete course error:"
   Context: console.error('Delete course error:'

   Line 344: "Course enrollment error:"
   Context: console.error('Course enrollment error:'

   Line 397: "Get course roster error:"
   Context: console.error('Get course roster error:'

   Line 457: "Remove student error:"
   Context: console.error('Remove student error:'

   Line 512: "Regenerate join code error:"
   Context: console.error('Regenerate join code error:'

   Line 555: "Get course stats error:"
   Context: console.error('Get course stats error:'

   Line 68: "Internal server error"
   Context: 'Internal server error'

   Line 111: "Course created successfully"
   Context: 'Course created successfully'

   Line 68: "Internal server error"
   Context: 'Internal server error'

   Line 68: "Internal server error"
   Context: 'Internal server error'

   Line 223: "Course updated successfully"
   Context: 'Course updated successfully'

   Line 68: "Internal server error"
   Context: 'Internal server error'

   Line 277: "Course deleted successfully"
   Context: 'Course deleted successfully'

   Line 68: "Internal server error"
   Context: 'Internal server error'

   Line 337: "Successfully enrolled in course"
   Context: 'Successfully enrolled in course'

   Line 68: "Internal server error"
   Context: 'Internal server error'

   Line 68: "Internal server error"
   Context: 'Internal server error'

   Line 451: "Student removed from course successfully"
   Context: 'Student removed from course successfully'

   Line 68: "Internal server error"
   Context: 'Internal server error'

   Line 506: "Join code regenerated successfully"
   Context: 'Join code regenerated successfully'

   Line 68: "Internal server error"
   Context: 'Internal server error'

   Line 68: "Internal server error"
   Context: 'Internal server error'

üìÑ lib/api/grades.ts:
   Line 44: "Failed to fetch grades"
   Context: {
      try {
        // Validate parameters
        const validatedParams = GradeListParamsSchema.parse(params);
        
        // Create service and fetch grades
        const gradeService = new GradeService(supabase);
        const result = await gradeService.listGrades(
          validatedParams,
          user.id,
          profile.role as UserRole,
          profile.organization_id
        );

        if (!result.success) {
          throw new Error(result.error || 'Failed to fetch grades');
        }

   Line 128: "Failed to create grade"
   Context: {
      try {
        // Validate grade data
        const validatedData = CreateGradeSchema.parse(gradeData);

        const gradeService = new GradeService(supabase);
        const result = await gradeService.createGrade(
          validatedData,
          user.id,
          profile.role as UserRole,
          profile.organization_id
        );

        if (!result.success) {
          throw new Error(result.error || 'Failed to create grade');
        }

   Line 171: "Failed to update grade"
   Context: {
      try {
        // Validate update data
        const validatedData = UpdateGradeSchema.parse(updateData);

        const gradeService = new GradeService(supabase);
        const result = await gradeService.updateGrade(
          gradeId,
          validatedData,
          user.id,
          profile.role as UserRole,
          profile.organization_id
        );

        if (!result.success) {
          throw new Error(result.error || 'Failed to update grade');
        }

   Line 211: "Failed to delete grade"
   Context: {
      try {
        const gradeService = new GradeService(supabase);
        const result = await gradeService.deleteGrade(
          gradeId,
          user.id,
          profile.role as UserRole,
          profile.organization_id
        );

        if (!result.success) {
          throw new Error(result.error || 'Failed to delete grade');
        }

   Line 247: "Failed to create bulk grades"
   Context: {
      try {
        // Validate bulk data
        const validatedData = BulkGradeSchema.parse(bulkData);

        const gradeService = new GradeService(supabase);
        const result = await gradeService.createBulkGrades(
          validatedData,
          user.id,
          profile.role as UserRole,
          profile.organization_id
        );

        if (!result.success) {
          throw new Error(result.error || 'Failed to create bulk grades');
        }

   Line 290: "Grade IDs array is required"
   Context: {
      try {
        if (!Array.isArray(gradeIds) || gradeIds.length === 0) {
          throw new Error('Grade IDs array is required');
        }

   Line 296: "Cannot process more than 100 grades at once"
   Context: {
          throw new Error('Cannot process more than 100 grades at once');
        }

   Line 309: "Failed to bulk publish grades"
   Context: {
          throw new Error(result.error || 'Failed to bulk publish grades');
        }

   Line 362: "Failed to fetch assignment grades"
   Context: {
          throw new Error(gradesResult.error || 'Failed to fetch assignment grades');
        }

   Line 366: "Failed to fetch assignment stats"
   Context: {
          throw new Error(statsResult.error || 'Failed to fetch assignment stats');
        }

   Line 399: "Failed to fetch student grades"
   Context: {
      try {
        const gradeService = new GradeService(supabase);
        const result = await gradeService.getStudentGradeReport(
          studentId,
          user.id,
          profile.role as UserRole,
          profile.organization_id,
          params
        );

        if (!result.success) {
          throw new Error(result.error || 'Failed to fetch student grades');
        }

   Line 436: "Failed to fetch course stats"
   Context: {
      try {
        const gradeService = new GradeService(supabase);
        const result = await gradeService.getCourseStats(
          courseId,
          user.id,
          profile.role as UserRole,
          profile.organization_id
        );

        if (!result.success) {
          throw new Error(result.error || 'Failed to fetch course stats');
        }

   Line 476: "Student ID is required"
   Context: {
      try {
        // If no studentId provided and user is a student, use current user
        const targetStudentId = studentId || 
          (profile.role === UserRole.STUDENT ? user.id : null);

        if (!targetStudentId) {
          throw new Error('Student ID is required');
        }

   Line 495: "Failed to fetch student course progress"
   Context: {
          throw new Error(result.error || 'Failed to fetch student course progress');
        }

   Line 59: "Failed to fetch grades"
   Context: 'Failed to fetch grades'

   Line 59: "Failed to fetch grades"
   Context: 'Failed to fetch grades'

   Line 103: "Failed to fetch grade"
   Context: 'Failed to fetch grade'

   Line 103: "Failed to fetch grade"
   Context: 'Failed to fetch grade'

   Line 142: "Failed to create grade"
   Context: 'Failed to create grade'

   Line 142: "Failed to create grade"
   Context: 'Failed to create grade'

   Line 186: "Failed to update grade"
   Context: 'Failed to update grade'

   Line 186: "Failed to update grade"
   Context: 'Failed to update grade'

   Line 222: "Failed to delete grade"
   Context: 'Failed to delete grade'

   Line 222: "Failed to delete grade"
   Context: 'Failed to delete grade'

   Line 261: "Failed to create bulk grades"
   Context: 'Failed to create bulk grades'

   Line 261: "Failed to create bulk grades"
   Context: 'Failed to create bulk grades'

   Line 293: "Grade IDs array is required"
   Context: 'Grade IDs array is required'

   Line 310: "Failed to bulk publish grades"
   Context: 'Failed to bulk publish grades'

   Line 310: "Failed to bulk publish grades"
   Context: 'Failed to bulk publish grades'

   Line 363: "Failed to fetch assignment grades"
   Context: 'Failed to fetch assignment grades'

   Line 367: "Failed to fetch assignment stats"
   Context: 'Failed to fetch assignment stats'

   Line 363: "Failed to fetch assignment grades"
   Context: 'Failed to fetch assignment grades'

   Line 411: "Failed to fetch student grades"
   Context: 'Failed to fetch student grades'

   Line 411: "Failed to fetch student grades"
   Context: 'Failed to fetch student grades'

   Line 447: "Failed to fetch course stats"
   Context: 'Failed to fetch course stats'

   Line 454: "Failed to fetch course grade stats"
   Context: 'Failed to fetch course grade stats'

   Line 483: "Student ID is required"
   Context: 'Student ID is required'

   Line 496: "Failed to fetch student course progress"
   Context: 'Failed to fetch student course progress'

   Line 496: "Failed to fetch student course progress"
   Context: 'Failed to fetch student course progress'

   Line 66: "Failed to fetch grades"
   Context: new Error('Failed to fetch grades'

   Line 110: "Failed to fetch grade"
   Context: new Error('Failed to fetch grade'

   Line 149: "Failed to create grade"
   Context: new Error('Failed to create grade'

   Line 193: "Failed to update grade"
   Context: new Error('Failed to update grade'

   Line 229: "Failed to delete grade"
   Context: new Error('Failed to delete grade'

   Line 268: "Failed to create bulk grades"
   Context: new Error('Failed to create bulk grades'

   Line 293: "Grade IDs array is required"
   Context: throw new Error('Grade IDs array is required'

   Line 297: "Cannot process more than 100 grades at once"
   Context: throw new Error('Cannot process more than 100 grades at once'

   Line 317: "Failed to bulk publish grades"
   Context: new Error('Failed to bulk publish grades'

   Line 377: "Failed to fetch assignment grades"
   Context: new Error('Failed to fetch assignment grades'

   Line 418: "Failed to fetch student grades"
   Context: new Error('Failed to fetch student grades'

   Line 454: "Failed to fetch course grade stats"
   Context: new Error('Failed to fetch course grade stats'

   Line 483: "Student ID is required"
   Context: throw new Error('Student ID is required'

   Line 503: "Failed to fetch student course progress"
   Context: new Error('Failed to fetch student course progress'

üìÑ lib/api/submissions.ts:
   Line 49: "true"
   Context: {
      try {
        // Validate query parameters
        const url = new URL(request.url);
        const rawParams = Object.fromEntries(url.searchParams.entries());
        
        // Convert boolean and numeric strings
        if (rawParams.is_late) rawParams.is_late = rawParams.is_late === 'true' as any;
        if (rawParams.is_draft) rawParams.is_draft = rawParams.is_draft === 'true' as any;
        if (rawParams.has_grade) rawParams.has_grade = rawParams.has_grade === 'true' as any;
        if (rawParams.page) rawParams.page = parseInt(rawParams.page) as any;
        if (rawParams.limit) rawParams.limit = parseInt(rawParams.limit) as any;
        
        const params = SubmissionListParamsSchema.parse(rawParams);
        
        // Create service and fetch submissions
        const submissionService = new SubmissionService(supabase);
        const result = await submissionService.listSubmissions(
          params,
          user.id,
          profile.role as UserRole,
          profile.organization_id
        );

        if (!result.success) {
          const statusMap: Record<string, number> = {
            'INSUFFICIENT_PERMISSIONS': 403,
            'FETCH_FAILED': 500,
            'INTERNAL_ERROR': 500,
          }

   Line 176: "include_grade"
   Context: {
      try {
        const submissionId = context.params.id;
        const url = new URL(request.url);
        const includeGrade = url.searchParams.get('include_grade') === 'true';

        const submissionService = new SubmissionService(supabase);
        const result = await submissionService.getSubmissionById(
          submissionId,
          user.id,
          profile.role as UserRole,
          profile.organization_id,
          includeGrade
        );

        if (!result.success) {
          const statusMap: Record<string, number> = {
            'SUBMISSION_NOT_FOUND': 404,
            'INSUFFICIENT_PERMISSIONS': 403,
            'INTERNAL_ERROR': 500,
          }

   Line 321: "Submission deleted successfully"
   Context: {
          success: true,
          message: 'Submission deleted successfully'
        }

   Line 350: "course_id"
   Context: {
      try {
        const url = new URL(request.url);
        const courseId = url.searchParams.get('course_id') || undefined;
        const assignmentId = url.searchParams.get('assignment_id') || undefined;

        const submissionService = new SubmissionService(supabase);
        const result = await submissionService.getSubmissionStats(
          user.id,
          profile.role as UserRole,
          profile.organization_id,
          courseId,
          assignmentId
        );

        if (!result.success) {
          const statusMap: Record<string, number> = {
            'INSUFFICIENT_PERMISSIONS': 403,
            'FETCH_FAILED': 500,
            'INTERNAL_ERROR': 500,
          }

   Line 499: "Submission finalized successfully"
   Context: {
          success: true,
          submission: result.data,
          message: 'Submission finalized successfully'
        }

   Line 535: "Can only view your own submissions"
   Context: {
          return NextResponse.json(
            { error: 'Can only view your own submissions' }

   Line 548: "No submission found"
   Context: {
          return NextResponse.json(
            { error: 'No submission found' }

   Line 610: "Validation error"
   Context: {
    return NextResponse.json(
      { 
        error: 'Validation error',
        details: error.errors 
      }

   Line 212: "Internal server error"
   Context: { error: 'Internal server error' }

   Line 94: "Invalid request parameters"
   Context: 'Invalid request parameters'

   Line 153: "Invalid request data"
   Context: 'Invalid request data'

   Line 212: "Internal server error"
   Context: 'Internal server error'

   Line 153: "Invalid request data"
   Context: 'Invalid request data'

   Line 323: "Submission deleted successfully"
   Context: 'Submission deleted successfully'

   Line 212: "Internal server error"
   Context: 'Internal server error'

   Line 212: "Internal server error"
   Context: 'Internal server error'

   Line 212: "Internal server error"
   Context: 'Internal server error'

   Line 502: "Submission finalized successfully"
   Context: 'Submission finalized successfully'

   Line 212: "Internal server error"
   Context: 'Internal server error'

   Line 537: "Can only view your own submissions"
   Context: 'Can only view your own submissions'

   Line 550: "No submission found"
   Context: 'No submission found'

   Line 212: "Internal server error"
   Context: 'Internal server error'

   Line 610: "ZodError"
   Context: 'ZodError'

   Line 613: "Validation error"
   Context: 'Validation error'

   Line 212: "Internal server error"
   Context: 'Internal server error'

üìÑ lib/auth/AuthAPI.ts:
   Line 56: "Registration endpoint error:"
   Context: {
      console.error('Registration endpoint error:', error);
      return {
        status: 500,
        error: 'Internal server error',
      }

   Line 73: "Email and password are required"
   Context: {
    try {
      // Validate required fields
      if (!credentials.email || !credentials.password) {
        return {
          status: 400,
          error: 'Email and password are required',
        }

   Line 113: "Login endpoint error:"
   Context: {
      console.error('Login endpoint error:', error);
      return {
        status: 500,
        error: 'Internal server error',
      }

   Line 141: "Logout successful"
   Context: {
        status: 200,
        data: {
          message: 'Logout successful',
        }

   Line 147: "Logout endpoint error:"
   Context: {
      console.error('Logout endpoint error:', error);
      return {
        status: 500,
        error: 'Internal server error',
      }

   Line 180: "Creator ID is required"
   Context: {
        return {
          status: 400,
          error: 'Creator ID is required',
        }

   Line 207: "Instructor creation endpoint error:"
   Context: {
      console.error('Instructor creation endpoint error:', error);
      return {
        status: 500,
        error: 'Internal server error',
      }

   Line 224: "Not authenticated"
   Context: {
    try {
      if (!authService.isAuthenticated()) {
        return {
          status: 401,
          error: 'Not authenticated',
        }

   Line 255: "Get current user endpoint error:"
   Context: {
      console.error('Get current user endpoint error:', error);
      return {
        status: 500,
        error: 'Internal server error',
      }

   Line 294: "Token refresh endpoint error:"
   Context: {
      console.error('Token refresh endpoint error:', error);
      return {
        status: 500,
        error: 'Internal server error',
      }

   Line 311: "Session invalid or expired"
   Context: {
    try {
      const isAuthenticated = authService.isAuthenticated();
      const profile = authService.getCurrentProfile();
      
      if (!isAuthenticated || !profile) {
        return {
          status: 401,
          error: 'Session invalid or expired',
        }

   Line 332: "Session check endpoint error:"
   Context: {
      console.error('Session check endpoint error:', error);
      return {
        status: 500,
        error: 'Internal server error',
      }

   Line 350: "No authorization header provided"
   Context: {
    try {
      if (!authHeader) {
        return {
          authenticated: false,
          error: 'No authorization header provided',
        }

   Line 361: "Invalid authorization header format"
   Context: {
        return {
          authenticated: false,
          error: 'Invalid authorization header format',
        }

   Line 372: "Invalid or expired token"
   Context: {
        return {
          authenticated: false,
          error: 'Invalid or expired token',
        }

   Line 384: "Request authentication error:"
   Context: {
      console.error('Request authentication error:', error);
      return {
        authenticated: false,
        error: 'Authentication failed',
      }

   Line 57: "Registration endpoint error:"
   Context: console.error('Registration endpoint error:'

   Line 114: "Login endpoint error:"
   Context: console.error('Login endpoint error:'

   Line 148: "Logout endpoint error:"
   Context: console.error('Logout endpoint error:'

   Line 208: "Instructor creation endpoint error:"
   Context: console.error('Instructor creation endpoint error:'

   Line 256: "Get current user endpoint error:"
   Context: console.error('Get current user endpoint error:'

   Line 295: "Token refresh endpoint error:"
   Context: console.error('Token refresh endpoint error:'

   Line 333: "Session check endpoint error:"
   Context: console.error('Session check endpoint error:'

   Line 385: "Request authentication error:"
   Context: console.error('Request authentication error:'

   Line 60: "Internal server error"
   Context: 'Internal server error'

   Line 79: "Email and password are required"
   Context: 'Email and password are required'

   Line 110: "Login successful"
   Context: 'Login successful'

   Line 60: "Internal server error"
   Context: 'Internal server error'

   Line 144: "Logout successful"
   Context: 'Logout successful'

   Line 60: "Internal server error"
   Context: 'Internal server error'

   Line 183: "Creator ID is required"
   Context: 'Creator ID is required'

   Line 204: "Instructor account created successfully"
   Context: 'Instructor account created successfully'

   Line 60: "Internal server error"
   Context: 'Internal server error'

   Line 229: "Not authenticated"
   Context: 'Not authenticated'

   Line 60: "Internal server error"
   Context: 'Internal server error'

   Line 291: "Token refreshed successfully"
   Context: 'Token refreshed successfully'

   Line 60: "Internal server error"
   Context: 'Internal server error'

   Line 319: "Session invalid or expired"
   Context: 'Session invalid or expired'

   Line 60: "Internal server error"
   Context: 'Internal server error'

   Line 355: "No authorization header provided"
   Context: 'No authorization header provided'

   Line 360: "Bearer "
   Context: 'Bearer '

   Line 364: "Invalid authorization header format"
   Context: 'Invalid authorization header format'

   Line 375: "Invalid or expired token"
   Context: 'Invalid or expired token'

   Line 388: "Authentication failed"
   Context: 'Authentication failed'

   Line 60: "Internal server error"
   Context: 'Internal server error'

üìÑ lib/auth/AuthService.ts:
   Line 90: "Failed to get session:"
   Context: {
        console.error('Failed to get session:', error);
      }

   Line 113: "[AuthService] Auth state changed:"
   Context: {
        console.log('[AuthService] Auth state changed:', event);
        
        if (event === 'SIGNED_IN' && session) {
          const profile = await this.loadUserProfile(session.user.id);
          this.updateState({
            user: session.user,
            session,
            profile,
            loading: false,
            initialized: true,
          }

   Line 140: "Auth initialization failed:"
   Context: {
      console.error('Auth initialization failed:', error);
      this.updateState({
        user: null,
        session: null,
        profile: null,
        loading: false,
        initialized: true,
      }

   Line 200: "Please enter a valid email address"
   Context: {
        return {
          success: false,
          error: 'Please enter a valid email address',
        }

   Line 214: "An account with this email already exists"
   Context: {
        return {
          success: false,
          error: 'An account with this email already exists',
        }

   Line 244: "Registration failed - user not created"
   Context: {
        return {
          success: false,
          error: 'Registration failed - user not created',
        }

   Line 274: "Profile creation failed:"
   Context: {
        console.error('Profile creation failed:', profileError);
        // Don't return error as user is created, profile can be fixed later
      }

   Line 291: "Registration error:"
   Context: {
      console.error('Registration error:', error);
      return {
        success: false,
        error: 'Registration failed due to an unexpected error',
      }

   Line 322: "Login failed - invalid response"
   Context: {
        return {
          success: false,
          error: 'Login failed - invalid response',
        }

   Line 337: "Login error:"
   Context: {
      console.error('Login error:', error);
      return {
        success: false,
        error: 'Login failed due to an unexpected error',
      }

   Line 352: "admin"
   Context: {
    try {
      // Validate that creator is admin
      const creatorProfile = await this.loadUserProfile(createdBy);
      if (!creatorProfile || creatorProfile.role !== 'admin') {
        return {
          success: false,
          error: 'Unauthorized - only administrators can create instructor accounts',
        }

   Line 214: "An account with this email already exists"
   Context: {
        return {
          success: false,
          error: 'An account with this email already exists',
        }

   Line 407: "Account creation failed - user not created"
   Context: {
        return {
          success: false,
          error: 'Account creation failed - user not created',
        }

   Line 440: "Instructor profile creation failed:"
   Context: {
        console.error('Instructor profile creation failed:', profileError);
      }

   Line 454: "Instructor creation error:"
   Context: {
      console.error('Instructor creation error:', error);
      return {
        success: false,
        error: 'Account creation failed due to an unexpected error',
      }

   Line 480: "logout"
   Context: {
        this.recordSecurityEvent(currentUserId, 'logout', 'User logged out');
      }

   Line 488: "Logout error:"
   Context: {
      console.error('Logout error:', error);
      return {
        success: false,
        error: 'Logout failed due to an unexpected error',
      }

   Line 508: "Failed to load user profile:"
   Context: {
        console.error('Failed to load user profile:', error);
        return null;
      }

   Line 514: "Profile loading error:"
   Context: {
      console.error('Profile loading error:', error);
      return null;
    }

   Line 523: "Password is required"
   Context: {
    if (!password) {
      return { valid: false, error: 'Password is required' }

   Line 528: "Password must be at least 12 characters long"
   Context: {
      return { valid: false, error: 'Password must be at least 12 characters long' }

   Line 537: "Password must contain at least one lowercase letter"
   Context: {-~]/.test(password);

    if (!hasLowerCase) {
      return { valid: false, error: 'Password must contain at least one lowercase letter' }

   Line 543: "Password must contain at least one uppercase letter"
   Context: {
      return { valid: false, error: 'Password must contain at least one uppercase letter' }

   Line 547: "Password must contain at least one number"
   Context: {
      return { valid: false, error: 'Password must contain at least one number' }

   Line 551: "Password must contain at least one symbol"
   Context: {
      return { valid: false, error: 'Password must contain at least one symbol' }

   Line 569: "Invalid login credentials"
   Context: {
    switch (error.message) {
      case 'Invalid login credentials':
        return 'Invalid email or password. Please check your credentials and try again.';
      case 'Email not confirmed':
        return 'Please check your email and click the confirmation link before signing in.';
      case 'User already registered':
        return 'An account with this email already exists. Try signing in instead.';
      case 'Password should be at least 6 characters':
        return 'Password must be at least 12 characters long for security.';
      default:
        return error.message || 'An unexpected error occurred. Please try again.';
    }

   Line 611: "Failed to record security event:"
   Context: {
        console.error('Failed to record security event:', error);
      }

   Line 614: "Security event recording skipped:"
   Context: {
      // Silently fail - security events are nice to have but not critical
      console.debug('Security event recording skipped:', error);
    }

   Line 638: "Session refresh error:"
   Context: {
      console.error('Session refresh error:', error);
      return {
        success: false,
        error: 'Failed to refresh session',
      }

   Line 91: "Failed to get session:"
   Context: console.error('Failed to get session:'

   Line 141: "Auth initialization failed:"
   Context: console.error('Auth initialization failed:'

   Line 275: "Profile creation failed:"
   Context: console.error('Profile creation failed:'

   Line 292: "Registration error:"
   Context: console.error('Registration error:'

   Line 338: "Login error:"
   Context: console.error('Login error:'

   Line 441: "Instructor profile creation failed:"
   Context: console.error('Instructor profile creation failed:'

   Line 455: "Instructor creation error:"
   Context: console.error('Instructor creation error:'

   Line 489: "Logout error:"
   Context: console.error('Logout error:'

   Line 509: "Failed to load user profile:"
   Context: console.error('Failed to load user profile:'

   Line 515: "Profile loading error:"
   Context: console.error('Profile loading error:'

   Line 612: "Failed to record security event:"
   Context: console.error('Failed to record security event:'

   Line 639: "Session refresh error:"
   Context: console.error('Session refresh error:'

   Line 127: "Authentication successful"
   Context: 'Authentication successful'

   Line 203: "Please enter a valid email address"
   Context: 'Please enter a valid email address'

   Line 217: "An account with this email already exists"
   Context: 'An account with this email already exists'

   Line 280: "Student account created"
   Context: 'Student account created'

   Line 295: "Registration failed due to an unexpected error"
   Context: 'Registration failed due to an unexpected error'

   Line 341: "Login failed due to an unexpected error"
   Context: 'Login failed due to an unexpected error'

   Line 217: "An account with this email already exists"
   Context: 'An account with this email already exists'

   Line 458: "Account creation failed due to an unexpected error"
   Context: 'Account creation failed due to an unexpected error'

   Line 481: "User logged out"
   Context: 'User logged out'

   Line 492: "Logout failed due to an unexpected error"
   Context: 'Logout failed due to an unexpected error'

   Line 525: "Password is required"
   Context: 'Password is required'

   Line 540: "Password must contain at least one lowercase letter"
   Context: 'Password must contain at least one lowercase letter'

   Line 544: "Password must contain at least one uppercase letter"
   Context: 'Password must contain at least one uppercase letter'

   Line 548: "Password must contain at least one number"
   Context: 'Password must contain at least one number'

   Line 552: "Password must contain at least one symbol"
   Context: 'Password must contain at least one symbol'

   Line 571: "Invalid login credentials"
   Context: 'Invalid login credentials'

   Line 573: "Email not confirmed"
   Context: 'Email not confirmed'

   Line 575: "User already registered"
   Context: 'User already registered'

   Line 642: "Failed to refresh session"
   Context: 'Failed to refresh session'

üìÑ lib/auth/AuthValidation.ts:
   Line 51: "Please enter a valid email address"
   Context: {
      errors.push('Please enter a valid email address');
    }

   Line 55: "Email address is too long"
   Context: {
      errors.push('Email address is too long');
    }

   Line 66: "Disposable email addresses are not allowed"
   Context: {
      errors.push('Disposable email addresses are not allowed');
    }

   Line 95: "Password is required"
   Context: {
      errors.push('Password is required');
      return {
        isValid: false,
        errors,
        strength: 'weak',
        score: 0,
        requirements,
        feedback: ['Password is required']
      }

   Line 111: "Password must be at least 8 characters long"
   Context: {
      errors.push('Password must be at least 8 characters long');
      feedback.push('Use at least 8 characters');
    }

   Line 116: "Great length!"
   Context: {
      score += 10;
      feedback.push('Great length!');
    }

   Line 125: "Password must contain at least one uppercase letter"
   Context: {
      errors.push('Password must contain at least one uppercase letter');
      feedback.push('Add uppercase letters');
    }

   Line 133: "Password must contain at least one lowercase letter"
   Context: {
      errors.push('Password must contain at least one lowercase letter');
      feedback.push('Add lowercase letters');
    }

   Line 141: "Password must contain at least one number"
   Context: {
      errors.push('Password must contain at least one number');
      feedback.push('Add numbers');
    }

   Line 151: "Password must contain at least one special character"
   Context: {
      errors.push('Password must contain at least one special character');
      feedback.push('Add special characters (!@#$%^&*)');
    }

   Line 157: "This password is too common"
   Context: {
      requirements.notCommon = false;
      errors.push('This password is too common');
      feedback.push('Avoid common passwords');
      score = Math.max(0, score - 30);
    }

   Line 186: "Good character variety!"
   Context: {
      score += 10;
      feedback.push('Good character variety!');
    }

   Line 195: "Avoid sequences like 123 or abc"
   Context: {
      score = Math.max(0, score - 10);
      feedback.push('Avoid sequences like 123 or abc');
    }

   Line 200: "Avoid repeating characters like aaa"
   Context: {
      score = Math.max(0, score - 10);
      feedback.push('Avoid repeating characters like aaa');
    }

   Line 207: "excellent"
   Context: {
      strength = 'excellent';
      feedback.push('Excellent password strength!');
    }

   Line 210: "strong"
   Context: {
      strength = 'strong';
      feedback.push('Strong password!');
    }

   Line 213: "good"
   Context: {
      strength = 'good';
      feedback.push('Good password');
    }

   Line 216: "fair"
   Context: {
      strength = 'fair';
      feedback.push('Password strength is fair');
    }

   Line 219: "weak"
   Context: {
      strength = 'weak';
      feedback.push('Password is too weak');
    }

   Line 292: "Phone number must have at least 10 digits"
   Context: {
      errors.push('Phone number must have at least 10 digits');
    }

   Line 296: "Phone number is too long"
   Context: {
      errors.push('Phone number is too long');
    }

   Line 303: "Please enter a valid phone number"
   Context: {
      errors.push('Please enter a valid phone number');
    }

   Line 314: "Please enter a valid phone number"
   Context: {
      if (pattern.test(digitsOnly)) {
        errors.push('Please enter a valid phone number');
        break;
      }

   Line 342: "Organization name must be at least 3 characters long"
   Context: {
      errors.push('Organization name must be at least 3 characters long');
    }

   Line 344: "Organization name must be less than 100 characters long"
   Context: {
      errors.push('Organization name must be less than 100 characters long');
    }

   Line 353: "Please select a valid organization type"
   Context: {
      errors.push('Please select a valid organization type');
    }

   Line 358: "Street address is required"
   Context: {
      errors.push('Street address is required');
    }

   Line 362: "City is required"
   Context: {
      errors.push('City is required');
    }

   Line 366: "State is required"
   Context: {
      errors.push('State is required');
    }

   Line 370: "ZIP code is required"
   Context: {
      errors.push('ZIP code is required');
    }

   Line 375: "Please enter a valid ZIP code"
   Context: {
        errors.push('Please enter a valid ZIP code');
      }

   Line 380: "Country is required"
   Context: {
      errors.push('Country is required');
    }

   Line 386: "Organization phone number is required"
   Context: {
      errors.push('Organization phone number is required');
    }

   Line 417: "Date of birth cannot be in the future"
   Context: {
      errors.push('Date of birth cannot be in the future');
    }

   Line 421: "Student must be at least 3 years old"
   Context: {
      errors.push('Student must be at least 3 years old');
    }

   Line 425: "Please enter a valid date of birth"
   Context: {
      errors.push('Please enter a valid date of birth');
    }

   Line 439: "Please confirm your password"
   Context: {
    const errors: string[] = [];
    
    if (!confirmPassword) {
      errors.push('Please confirm your password');
    }

   Line 444: "Passwords do not match"
   Context: {
      errors.push('Passwords do not match');
    }

   Line 458: "You must accept the terms and conditions"
   Context: {
    const errors: string[] = [];
    
    if (!accepted) {
      errors.push('You must accept the terms and conditions');
    }

   Line 527: "email"
   Context: {
    switch (fieldName) {
      case 'email':
        return this.validateEmail(value);
      case 'password':
        return this.validatePassword(value, extraData?.userInfo);
      case 'confirmPassword':
        return this.validateConfirmPassword(extraData?.password, value);
      case 'firstName':
        return this.validateName(value, 'First name');
      case 'lastName':
        return this.validateName(value, 'Last name');
      case 'phone':
        return this.validatePhone(value);
      case 'dateOfBirth':
        return this.validateDateOfBirth(value);
      case 'acceptTerms':
        return this.validateTermsAcceptance(value);
      default:
        return { isValid: true, errors: [] }

   Line 42: "Email is required"
   Context: 'Email is required'

   Line 52: "Please enter a valid email address"
   Context: 'Please enter a valid email address'

   Line 56: "Email address is too long"
   Context: 'Email address is too long'

   Line 67: "Disposable email addresses are not allowed"
   Context: 'Disposable email addresses are not allowed'

   Line 96: "Password is required"
   Context: 'Password is required'

   Line 96: "Password is required"
   Context: 'Password is required'

   Line 126: "Password must contain at least one uppercase letter"
   Context: 'Password must contain at least one uppercase letter'

   Line 127: "Add uppercase letters"
   Context: 'Add uppercase letters'

   Line 134: "Password must contain at least one lowercase letter"
   Context: 'Password must contain at least one lowercase letter'

   Line 135: "Add lowercase letters"
   Context: 'Add lowercase letters'

   Line 142: "Password must contain at least one number"
   Context: 'Password must contain at least one number'

   Line 143: "Add numbers"
   Context: 'Add numbers'

   Line 152: "Password must contain at least one special character"
   Context: 'Password must contain at least one special character'

   Line 159: "This password is too common"
   Context: 'This password is too common'

   Line 160: "Avoid common passwords"
   Context: 'Avoid common passwords'

   Line 176: "Password should not contain your personal information"
   Context: 'Password should not contain your personal information'

   Line 177: "Avoid using your name or email in the password"
   Context: 'Avoid using your name or email in the password'

   Line 202: "Avoid repeating characters like aaa"
   Context: 'Avoid repeating characters like aaa'

   Line 215: "Good password"
   Context: 'Good password'

   Line 218: "Password strength is fair"
   Context: 'Password strength is fair'

   Line 221: "Password is too weak"
   Context: 'Password is too weak'

   Line 297: "Phone number is too long"
   Context: 'Phone number is too long'

   Line 304: "Please enter a valid phone number"
   Context: 'Please enter a valid phone number'

   Line 304: "Please enter a valid phone number"
   Context: 'Please enter a valid phone number'

   Line 341: "Organization name is required"
   Context: 'Organization name is required'

   Line 354: "Please select a valid organization type"
   Context: 'Please select a valid organization type'

   Line 359: "Street address is required"
   Context: 'Street address is required'

   Line 363: "City is required"
   Context: 'City is required'

   Line 367: "State is required"
   Context: 'State is required'

   Line 371: "ZIP code is required"
   Context: 'ZIP code is required'

   Line 376: "Please enter a valid ZIP code"
   Context: 'Please enter a valid ZIP code'

   Line 381: "Country is required"
   Context: 'Country is required'

   Line 387: "Organization phone number is required"
   Context: 'Organization phone number is required'

   Line 418: "Date of birth cannot be in the future"
   Context: 'Date of birth cannot be in the future'

   Line 426: "Please enter a valid date of birth"
   Context: 'Please enter a valid date of birth'

   Line 443: "Please confirm your password"
   Context: 'Please confirm your password'

   Line 445: "Passwords do not match"
   Context: 'Passwords do not match'

   Line 462: "You must accept the terms and conditions"
   Context: 'You must accept the terms and conditions'

   Line 536: "First name"
   Context: 'First name'

   Line 538: "Last name"
   Context: 'Last name'

üìÑ lib/auth/PasswordPolicy.ts:
   Line 103: "This password has been found in data breaches and is not secure"
   Context: {
      policyErrors.push('This password has been found in data breaches and is not secure');
      policyFeedback.push('This password is compromised - please choose a different one');
      policyScore = Math.max(0, policyScore - 50);
    }

   Line 117: "Avoid using personal information in your password"
   Context: {
      const userInfoViolations = this.detectUserInfoInPassword(password, userInfo);
      if (userInfoViolations.length > 0) {
        policyErrors.push(...userInfoViolations);
        policyFeedback.push('Avoid using personal information in your password');
        policyScore = Math.max(0, policyScore - (userInfoViolations.length * 15));
      }

   Line 136: "Consider using less common words or mix words with numbers/symbols"
   Context: {
      policyFeedback.push('Consider using less common words or mix words with numbers/symbols');
    }

   Line 170: "012345|123456"
   Context: {
    const violations: string[] = [];

    for (const pattern of DANGEROUS_PATTERNS) {
      if (pattern.test(password)) {
        if (pattern.source.includes('012345|123456')) {
          violations.push('Avoid sequential numbers like 123456');
        }

   Line 177: "Avoid sequential letters like abcdef"
   Context: {
          violations.push('Avoid sequential letters like abcdef');
        }

   Line 179: "Avoid keyboard patterns like qwerty"
   Context: {
          violations.push('Avoid keyboard patterns like qwerty');
        }

   Line 181: "Avoid repetitive patterns like abab"
   Context: {
          violations.push('Avoid repetitive patterns like abab');
        }

   Line 183: "Avoid repeating the same character multiple times"
   Context: {
          violations.push('Avoid repeating the same character multiple times');
        }

   Line 185: "Avoid common password variations with substitutions"
   Context: {
          violations.push('Avoid common password variations with substitutions');
        }

   Line 218: "Password contains your email domain"
   Context: {
        violations.push('Password contains your email domain');
      }

   Line 229: "Password contains your name"
   Context: {
      if (name && name.length > 2 && passwordLower.includes(name.toLowerCase())) {
        violations.push('Password contains your name');
        break;
      }

   Line 245: "Password contains your birth date"
   Context: {
        violations.push('Password contains your birth date');
      }

   Line 256: "Password contains part of your phone number"
   Context: {
        violations.push('Password contains part of your phone number');
      }

   Line 265: "Password contains common personal information terms"
   Context: {
      if (pattern.test(passwordLower)) {
        violations.push('Password contains common personal information terms');
        break;
      }

   Line 352: "At least one uppercase letter (A-Z)"
   Context: {
      requirements.push('At least one uppercase letter (A-Z)');
    }

   Line 356: "At least one lowercase letter (a-z)"
   Context: {
      requirements.push('At least one lowercase letter (a-z)');
    }

   Line 360: "At least one number (0-9)"
   Context: {
      requirements.push('At least one number (0-9)');
    }

   Line 368: "Cannot be a commonly used password"
   Context: {
      requirements.push('Cannot be a commonly used password');
    }

   Line 372: "Cannot contain your personal information"
   Context: {
      requirements.push('Cannot contain your personal information');
    }

   Line 403: "Make your password longer - add more characters"
   Context: {
    const suggestions: string[] = [];

    if (!validation.requirements.minLength) {
      suggestions.push('Make your password longer - add more characters');
    }

   Line 410: "Add some uppercase letters (A-Z)"
   Context: {
      suggestions.push('Add some uppercase letters (A-Z)');
    }

   Line 414: "Add some lowercase letters (a-z)"
   Context: {
      suggestions.push('Add some lowercase letters (a-z)');
    }

   Line 418: "Include some numbers (0-9)"
   Context: {
      suggestions.push('Include some numbers (0-9)');
    }

   Line 422: "Add special characters like !@#$%^&*"
   Context: {
      suggestions.push('Add special characters like !@#$%^&*');
    }

   Line 426: "Create a more unique password - avoid common passwords"
   Context: {
      suggestions.push('Create a more unique password - avoid common passwords');
    }

   Line 430: "Remove personal information from your password"
   Context: {
      suggestions.push('Remove personal information from your password');
    }

   Line 434: "Consider using a passphrase - multiple words with numbers and symbols"
   Context: {
      suggestions.push('Consider using a passphrase - multiple words with numbers and symbols');
      suggestions.push('Try combining unrelated words with numbers and special characters');
    }

   Line 476: "abcdefghijklmnopqrstuvwxyz"
   Context: {
  /**
   * Generate a secure password that meets policy requirements
   */
  generateSecurePassword(length: number = 16): string {
    const lowercase = 'abcdefghijklmnopqrstuvwxyz';
    const uppercase = 'ABCDEFGHIJKLMNOPQRSTUVWXYZ';
    const numbers = '0123456789';
    const symbols = '!@#$%^&*()_+-=[]{}

   Line 515: "Less than a minute"
   Context: {
    const entropy = PasswordUtils.calculateEntropy(password);
    const possibleCombinations = Math.pow(2, entropy);
    const secondsToHalf = possibleCombinations / (2 * guessesPerSecond);
    
    if (secondsToHalf < 60) return 'Less than a minute';
    if (secondsToHalf < 3600) return `${Math.round(secondsToHalf / 60)}

   Line 104: "This password has been found in data breaches and is not secure"
   Context: 'This password has been found in data breaches and is not secure'

   Line 121: "Avoid using personal information in your password"
   Context: 'Avoid using personal information in your password'

   Line 178: "Avoid sequential letters like abcdef"
   Context: 'Avoid sequential letters like abcdef'

   Line 180: "Avoid keyboard patterns like qwerty"
   Context: 'Avoid keyboard patterns like qwerty'

   Line 182: "Avoid repetitive patterns like abab"
   Context: 'Avoid repetitive patterns like abab'

   Line 184: "Avoid repeating the same character multiple times"
   Context: 'Avoid repeating the same character multiple times'

   Line 186: "Avoid common password variations with substitutions"
   Context: 'Avoid common password variations with substitutions'

   Line 212: "Password contains parts of your email address"
   Context: 'Password contains parts of your email address'

   Line 219: "Password contains your email domain"
   Context: 'Password contains your email domain'

   Line 231: "Password contains your name"
   Context: 'Password contains your name'

   Line 243: "Password contains your birth year"
   Context: 'Password contains your birth year'

   Line 246: "Password contains your birth date"
   Context: 'Password contains your birth date'

   Line 257: "Password contains part of your phone number"
   Context: 'Password contains part of your phone number'

   Line 257: "Password contains part of your phone number"
   Context: 'Password contains part of your phone number'

   Line 267: "Password contains common personal information terms"
   Context: 'Password contains common personal information terms'

   Line 369: "Cannot be a commonly used password"
   Context: 'Cannot be a commonly used password'

   Line 373: "Cannot contain your personal information"
   Context: 'Cannot contain your personal information'

   Line 380: "Should not appear in known data breaches"
   Context: 'Should not appear in known data breaches'

   Line 381: "Avoid keyboard patterns and repetitive sequences"
   Context: 'Avoid keyboard patterns and repetitive sequences'

   Line 431: "Remove personal information from your password"
   Context: 'Remove personal information from your password'

   Line 436: "Try combining unrelated words with numbers and special characters"
   Context: 'Try combining unrelated words with numbers and special characters'

   Line 520: "Less than a minute"
   Context: 'Less than a minute'

üìÑ lib/auth/SecurityEventLogger.ts:
   Line 217: "rate_limit_exceeded"
   Context: {
      const blockDuration = this.calculateBlockDuration(identifier, action);
      rateLimit.blockedUntil = new Date(now.getTime() + blockDuration);
      
      // Log rate limit violation
      this.logEvent('rate_limit_exceeded', {
        ipAddress: identifier,
        userAgent: 'Unknown',
        metadata: {
          action,
          attempts: rateLimit.attempts,
          limit: config.limit,
          windowMs: config.windowMs,
          blockedUntil: rateLimit.blockedUntil
        }

   Line 253: "rate_limit_exceeded"
   Context: {
    const result = this.checkRateLimit(identifier, action);
    
    if (!result.allowed && !success) {
      // Additional logging for blocked attempts
      this.logEvent('rate_limit_exceeded', {
        ipAddress: identifier,
        userAgent: 'Unknown',
        success: false,
        metadata: {
          action,
          blocked: true,
          resetTime: result.resetTime
        }

   Line 531: "login_failure"
   Context: {
    const recentFailures = this.events.filter(e => 
      e.type === 'login_failure' &&
      e.ipAddress === event.ipAddress &&
      e.timestamp.getTime() > Date.now() - (15 * 60 * 1000) // Last 15 minutes
    );

    if (recentFailures.length >= this.config.alertThresholds.failedLogins) {
      await this.createAlert({
        type: 'authentication',
        severity: 'high',
        title: 'Multiple Failed Login Attempts',
        description: `${recentFailures.length}

   Line 561: "suspicious_activity"
   Context: {
    await this.createAlert({
      type: 'suspicious_activity',
      severity: 'critical',
      title: 'Suspicious Activity Detected',
      description: `Critical security event: ${event.type}

   Line 581: "rate_limit_exceeded"
   Context: {
    const recentViolations = this.events.filter(e => 
      e.type === 'rate_limit_exceeded' &&
      e.ipAddress === event.ipAddress &&
      e.timestamp.getTime() > Date.now() - (60 * 60 * 1000) // Last hour
    );

    if (recentViolations.length >= this.config.alertThresholds.rateLimitViolations) {
      await this.createAlert({
        type: 'rate_limit',
        severity: 'medium',
        title: 'Excessive Rate Limit Violations',
        description: `${recentViolations.length}

   Line 665: "High login failure rate detected - consider implementing CAPTCHA or additional security measures"
   Context: {
    const recommendations: string[] = [];

    // Check for high failure rates
    const totalLogins = metrics.eventsByType.login_attempt;
    const failedLogins = metrics.eventsByType.login_failure;
    if (totalLogins > 0 && (failedLogins / totalLogins) > 0.3) {
      recommendations.push('High login failure rate detected - consider implementing CAPTCHA or additional security measures');
    }

   Line 676: "Frequent rate limit violations - review and potentially adjust rate limiting policies"
   Context: {
      recommendations.push('Frequent rate limit violations - review and potentially adjust rate limiting policies');
    }

   Line 681: "Suspicious activity detected - conduct security audit and review access logs"
   Context: {
      recommendations.push('Suspicious activity detected - conduct security audit and review access logs');
    }

   Line 691: "Security posture appears stable - continue monitoring"
   Context: {
      recommendations.push('Security posture appears stable - continue monitoring');
      recommendations.push('Consider regular security audits and penetration testing');
    }

   Line 726: "Frequent logins outside normal business hours"
   Context: {
        riskScore += 20;
        anomalies.push('Frequent logins outside normal business hours');
        recommendations.push('Review login times and consider time-based access controls');
      }

   Line 735: "Access from multiple IP addresses"
   Context: {
      riskScore += 15;
      anomalies.push('Access from multiple IP addresses');
      recommendations.push('Implement IP address monitoring and alerts');
    }

   Line 743: "Multiple failed authentication attempts"
   Context: {
      riskScore += 25;
      anomalies.push('Multiple failed authentication attempts');
      recommendations.push('Consider enforcing stronger authentication requirements');
    }

   Line 542: "Multiple Failed Login Attempts"
   Context: 'Multiple Failed Login Attempts'

   Line 548: "Monitor IP address"
   Context: 'Monitor IP address'

   Line 549: "Consider IP blocking"
   Context: 'Consider IP blocking'

   Line 550: "Review access logs"
   Context: 'Review access logs'

   Line 565: "Suspicious Activity Detected"
   Context: 'Suspicious Activity Detected'

   Line 571: "Immediate investigation required"
   Context: 'Immediate investigation required'

   Line 572: "Review user activity"
   Context: 'Review user activity'

   Line 573: "Check for account compromise"
   Context: 'Check for account compromise'

   Line 592: "Excessive Rate Limit Violations"
   Context: 'Excessive Rate Limit Violations'

   Line 596: "Review IP activity"
   Context: 'Review IP activity'

   Line 597: "Consider extending block duration"
   Context: 'Consider extending block duration'

   Line 598: "Investigate potential abuse"
   Context: 'Investigate potential abuse'

   Line 693: "Consider regular security audits and penetration testing"
   Context: 'Consider regular security audits and penetration testing'

   Line 728: "Frequent logins outside normal business hours"
   Context: 'Frequent logins outside normal business hours'

   Line 737: "Access from multiple IP addresses"
   Context: 'Access from multiple IP addresses'

   Line 738: "Implement IP address monitoring and alerts"
   Context: 'Implement IP address monitoring and alerts'

   Line 745: "Multiple failed authentication attempts"
   Context: 'Multiple failed authentication attempts'

   Line 746: "Consider enforcing stronger authentication requirements"
   Context: 'Consider enforcing stronger authentication requirements'

üìÑ lib/auth/index.ts:
   Line 70: "Content-Type"
   Context: {
 *   const credentials = await request.json();
 *   const result = await AuthAPI.login(credentials);
 *   
 *   return new Response(JSON.stringify(result.data), {
 *     status: result.status,
 *     headers: { 'Content-Type': 'application/json' }

üìÑ lib/auth/useAuth.ts:
   Line 75: "Login failed"
   Context: {
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const login = useCallback(async (credentials: LoginCredentials) => {
    setIsLoading(true);
    setError(null);

    try {
      const result = await authService.login(credentials);
      
      if (!result.success) {
        setError(result.error || 'Login failed');
        return { success: false, error: result.error }

   Line 92: "Login failed due to an unexpected error"
   Context: {
      const errorMessage = 'Login failed due to an unexpected error';
      setError(errorMessage);
      return { success: false, error: errorMessage }

   Line 117: "Registration failed"
   Context: {
  const [isLoading, setIsLoading] = useState(false);
  const [error, setError] = useState<string | null>(null);

  const register = useCallback(async (credentials: RegisterCredentials) => {
    setIsLoading(true);
    setError(null);

    try {
      const result = await authService.registerStudent(credentials);
      
      if (!result.success) {
        setError(result.error || 'Registration failed');
        return { success: false, error: result.error }

   Line 138: "Registration failed due to an unexpected error"
   Context: {
      const errorMessage = 'Registration failed due to an unexpected error';
      setError(errorMessage);
      return { success: false, error: errorMessage }

   Line 313: "Auto refresh failed:"
   Context: {
          console.error('Auto refresh failed:', error);
        }

   Line 314: "Auto refresh failed:"
   Context: console.error('Auto refresh failed:'

   Line 87: "Login failed"
   Context: 'Login failed'

   Line 93: "Login failed due to an unexpected error"
   Context: 'Login failed due to an unexpected error'

   Line 129: "Registration failed"
   Context: 'Registration failed'

   Line 139: "Registration failed due to an unexpected error"
   Context: 'Registration failed due to an unexpected error'

üìÑ lib/auth/useProfile.ts:
   Line 146: "Unknown error"
   Context: {
    reportError(error instanceof Error ? error : new Error('Unknown error'), {
      context: 'fetchUserProfile',
    }

   Line 157: "t retry on auth errors
      if (error?.message?.includes("
   Context: {
  const query = useQuery({
    queryKey: PROFILE_QUERY_KEY,
    queryFn: fetchUserProfile,
    staleTime: 5 * 60 * 1000, // 5 minutes
    gcTime: 15 * 60 * 1000, // 15 minutes
    retry: (failureCount, error) => {
      // Don't retry on auth errors
      if (error?.message?.includes('JWT') || error?.message?.includes('auth')) {
        return false;
      }

   Line 170: "User profile and preschool details"
   Context: {
      description: 'User profile and preschool details',
    }

   Line 147: "Unknown error"
   Context: 'Unknown error'

   Line 171: "User profile and preschool details"
   Context: 'User profile and preschool details'

   Line 147: "Unknown error"
   Context: new Error('Unknown error'

üìÑ lib/biometrics.ts:
   Line 9: "Using cached biometric capabilities:"
   Context: {
  const now = Date.now();

  // Return cached result if still valid
  if (capabilityCache && now - capabilityCache.timestamp < CACHE_DURATION) {
    console.log('Using cached biometric capabilities:', capabilityCache);
    return {
      isAvailable: capabilityCache.isAvailable,
      isEnrolled: capabilityCache.isEnrolled,
    }

   Line 30: "Failed to check biometric capabilities:"
   Context: {
    console.warn("Failed to check biometric capabilities:", error);
    return { isAvailable: false, isEnrolled: false }

   Line 67: "Biometric authentication error:"
   Context: {
    console.error("Biometric authentication error:", error);
    if (error instanceof Error) {
      console.error("Error details:", {
        name: error.name,
        message: error.message,
        stack: error.stack,
      }

   Line 87: "Error in promptIfEnabled:"
   Context: {
    console.warn("Error in promptIfEnabled:", error);
    return true; // Default to allowing access if there's an error
  }

   Line 126: "Error getting biometric info:"
   Context: {
    console.warn("Error getting biometric info:", error);
    return {
      isAvailable: false,
      isEnrolled: false,
      supportedTypes: [],
      securityLevel: null,
    }

   Line 14: "Using cached biometric capabilities:"
   Context: console.log('Using cached biometric capabilities:'

   Line 31: "Failed to check biometric capabilities:"
   Context: console.warn("Failed to check biometric capabilities:"

   Line 68: "Biometric authentication error:"
   Context: console.error("Biometric authentication error:"

   Line 70: "Error details:"
   Context: console.error("Error details:"

   Line 88: "Error in promptIfEnabled:"
   Context: console.warn("Error in promptIfEnabled:"

   Line 127: "Error getting biometric info:"
   Context: console.warn("Error getting biometric info:"

   Line 60: "Unlock EduDash Pro"
   Context: "Unlock EduDash Pro"

üìÑ lib/config/index.ts:
   Line 127: "EXPO_PUBLIC_ENVIRONMENT must be development, staging, or production"
   Context: {
      errors.push('EXPO_PUBLIC_ENVIRONMENT must be development, staging, or production');
    }

   Line 132: "EXPO_PUBLIC_FROM_EMAIL must be a valid email address"
   Context: {
      errors.push('EXPO_PUBLIC_FROM_EMAIL must be a valid email address');
    }

   Line 137: "Warning: EXPO_PUBLIC_SENTRY_DSN not set in production environment"
   Context: {
      if (!this.config.sentryDsn) {
        console.warn('Warning: EXPO_PUBLIC_SENTRY_DSN not set in production environment');
      }

   Line 142: "Warning: Debug mode enabled in production"
   Context: {
        console.warn('Warning: Debug mode enabled in production');
      }

   Line 146: "Warning: Test AdMob IDs enabled in production"
   Context: {
        console.warn('Warning: Test AdMob IDs enabled in production');
      }

   Line 139: "Warning: EXPO_PUBLIC_SENTRY_DSN not set in production environment"
   Context: console.warn('Warning: EXPO_PUBLIC_SENTRY_DSN not set in production environment'

   Line 143: "Warning: Debug mode enabled in production"
   Context: console.warn('Warning: Debug mode enabled in production'

   Line 147: "Warning: Test AdMob IDs enabled in production"
   Context: console.warn('Warning: Test AdMob IDs enabled in production'

üìÑ lib/config/pdfConfig.ts:
   Line 6: "legacy"
   Context: {
  // Feature flags
  enableEnhancedPDFGeneration: boolean;
  enableTemplatePreview: boolean;
  enablePDFHistory: boolean;
  enableBulkGeneration: boolean;
  
  // Engine selection
  pdfEngine: 'legacy' | 'enhanced' | 'auto';
  
  // Size and performance constraints
  maxPDFSizeBytes: number;
  maxImageSizeBytes: number;
  maxImagesPerDocument: number;
  generationTimeoutMs: number;
  
  // Quality settings
  imageQuality: number; // 0-1
  enablePageNumbers: boolean;
  enableWatermark: boolean;
  defaultTheme: 'professional' | 'colorful' | 'minimalist';
  
  // Template defaults
  defaultPaperSize: 'A4' | 'Letter';
  defaultOrientation: 'portrait' | 'landscape';
  defaultFontFamily: string;
  
  // AI generation settings
  aiConfidenceThreshold: number; // 0-1, threshold for auto-generation
  enableStructuredOutput: boolean;
  enableContentValidation: boolean;
  
  // Storage and history
  maxHistoryItems: number;
  enableLocalStorage: boolean;
  enableCloudBackup: boolean;
}

   Line 45: "enhanced"
   Context: {
  // Feature flags - start with enhanced features enabled
  enableEnhancedPDFGeneration: true,
  enableTemplatePreview: true,
  enablePDFHistory: true,
  enableBulkGeneration: false, // Will enable in Phase 4
  
  // Engine selection
  pdfEngine: 'enhanced', // Can toggle to 'legacy' if issues arise
  
  // Size constraints (5MB budget)
  maxPDFSizeBytes: 5 * 1024 * 1024, // 5MB
  maxImageSizeBytes: 500 * 1024, // 500KB per image
  maxImagesPerDocument: 10,
  generationTimeoutMs: 30000, // 30 seconds
  
  // Quality
  imageQuality: 0.8,
  enablePageNumbers: true,
  enableWatermark: false,
  defaultTheme: 'professional',
  
  // Template defaults
  defaultPaperSize: 'A4',
  defaultOrientation: 'portrait',
  defaultFontFamily: 'Arial, sans-serif',
  
  // AI settings
  aiConfidenceThreshold: 0.7,
  enableStructuredOutput: true,
  enableContentValidation: true,
  
  // Storage
  maxHistoryItems: 50,
  enableLocalStorage: true,
  enableCloudBackup: false,
}

   Line 193: "EduDash Pro"
   Context: {
  organizationName: 'EduDash Pro',
  primaryColor: '#1565c0',
  accentColor: '#42a5f5',
  footerText: 'Generated by Dash AI ‚Ä¢ EduDash Pro',
}

   Line 194: "EduDash Pro"
   Context: 'EduDash Pro'

üìÑ lib/constants/aiResponses.ts:
   Line 23: "Hi {firstName}, how can I help today?"
   Context: {
  // Only used once per session when user first engages
  greetNewSession: [
    "Hi {firstName}, how can I help today?",
    "Hello {firstName}

   Line 45: "Could you clarify what you mean by "
   Context: "Could you clarify what you mean by '

   Line 48: "Can you tell me more about "
   Context: "Can you tell me more about '

   Line 91: "I couldn"
   Context: "I couldn'

   Line 97: "Hi John"
   Context: "Hi John"

üìÑ lib/constants/edudash-features.ts:
   Line 27: "attendance"
   Context: {
  attendance: {
    id: 'attendance',
    name: 'Attendance Tracking',
    description: 'Mark and track student attendance with quick mark all, notes, and historical reports',
    roles: ['teacher', 'principal'],
    tiers: ['starter', 'premium', 'enterprise'],
    riskLevel: 'medium',
    triggers: ['morning', '8:00-9:30', 'class start', 'daily', 'Monday', 'week start'],
    utterances: [
      'mark attendance',
      'take attendance',
      'who is absent',
      'attendance report',
      'check who is present',
      'attendance register'
    ],
    relatedScreens: ['/(parent)/attendance', '/screens/attendance'],
    relatedTables: ['attendance', 'students', 'classes']
  }

   Line 48: "lesson_planning"
   Context: {
    id: 'lesson_planning',
    name: 'Lesson Planning',
    description: 'Create, organize, and share lesson plans with CAPS alignment',
    roles: ['teacher', 'principal'],
    tiers: ['premium', 'enterprise'],
    riskLevel: 'low',
    triggers: ['Sunday', 'weekend', 'week start', 'planning time', 'curriculum'],
    utterances: [
      'create lesson plan',
      'plan lessons',
      'view lesson plans',
      'share lesson plan',
      'CAPS aligned lessons',
      'activity ideas'
    ],
    relatedScreens: ['/screens/lesson-plans', '/screens/ai-lesson-generator'],
    relatedTables: ['lesson_plans']
  }

   Line 68: "grading"
   Context: {
    id: 'grading',
    name: 'Student Grading',
    description: 'Record assessments, track progress, generate report cards',
    roles: ['teacher', 'principal'],
    tiers: ['starter', 'premium', 'enterprise'],
    riskLevel: 'high',
    triggers: ['end of term', 'Friday', 'afternoon', 'assessment', 'grading time'],
    utterances: [
      'add grades',
      'record assessment',
      'update marks',
      'generate report card',
      'view student progress',
      'mark work'
    ],
    relatedScreens: ['/screens/grades'],
    relatedTables: ['grades', 'assessments', 'students']
  }

   Line 88: "parent_communication"
   Context: {
    id: 'parent_communication',
    name: 'Parent Communication',
    description: 'In-app messaging, notifications, and parent portal access',
    roles: ['teacher', 'principal', 'parent'],
    tiers: ['starter', 'premium', 'enterprise'],
    riskLevel: 'low',
    triggers: ['incident', 'achievement', 'reminder needed', 'update'],
    utterances: [
      'message parents',
      'send note to parent',
      'parent communication',
      'notify parent',
      'view parent messages',
      'contact guardian'
    ],
    relatedScreens: ['/(parent)/home', '/screens/messages', '/screens/teacher-messages'],
    relatedTables: ['messages', 'users']
  }

   Line 108: "financial_dashboard"
   Context: {
    id: 'financial_dashboard',
    name: 'Financial Dashboard',
    description: 'Track fees, expenses, generate financial reports',
    roles: ['principal', 'super_admin'],
    tiers: ['premium', 'enterprise'],
    riskLevel: 'high',
    triggers: ['month end', 'week end', 'morning', 'fee due', 'payment'],
    utterances: [
      'view finances',
      'check fees',
      'fee collection',
      'financial report',
      'outstanding payments',
      'revenue report'
    ],
    relatedScreens: ['/screens/financial-dashboard'],
    relatedTables: ['fees', 'transactions', 'students']
  }

   Line 128: "worksheet_generation"
   Context: {
    id: 'worksheet_generation',
    name: 'Worksheet Generator',
    description: 'Generate educational worksheets for practice and assessment',
    roles: ['teacher', 'principal'],
    tiers: ['starter', 'premium', 'enterprise'],
    riskLevel: 'low',
    triggers: ['homework needed', 'practice needed', 'assessment prep', 'activity'],
    utterances: [
      'Create worksheet',
      'Generate math worksheet',
      'Practice activities',
      'Homework sheet',
      'Activity worksheet',
      'Print worksheet'
    ],
    relatedScreens: ['/screens/worksheet-demo'],
    relatedTables: []
  }

   Line 148: "student_profiles"
   Context: {
    id: 'student_profiles',
    name: 'Student Profiles',
    description: 'Manage student information, medical info, emergency contacts',
    roles: ['teacher', 'principal', 'parent'],
    tiers: ['starter', 'premium', 'enterprise'],
    riskLevel: 'medium',
    triggers: ['enrollment', 'new student', 'update needed', 'student info'],
    utterances: [
      'view student profile',
      'student information',
      'update student details',
      'medical information',
      'emergency contacts',
      'student records'
    ],
    relatedScreens: ['/(parent)/students', '/screens/student-profile', '/screens/student-management'],
    relatedTables: ['students', 'medical_info', 'emergency_contacts']
  }

   Line 168: "reports"
   Context: {
    id: 'reports',
    name: 'Reports & Analytics',
    description: 'Generate attendance, academic, financial, and custom reports',
    roles: ['principal', 'teacher'],
    tiers: ['premium', 'enterprise'],
    riskLevel: 'low',
    triggers: ['end of week', 'end of month', 'Friday', 'quarter end'],
    utterances: [
      'generate report',
      'view reports',
      'attendance report',
      'academic report',
      'export report',
      'class analytics'
    ],
    relatedScreens: ['/screens/reports', '/screens/teacher-reports'],
    relatedTables: ['attendance', 'grades', 'students', 'fees']
  }

   Line 188: "whatsapp_integration"
   Context: {
    id: 'whatsapp_integration',
    name: 'WhatsApp Integration',
    description: 'Connect and broadcast messages via WhatsApp',
    roles: ['principal', 'teacher'],
    tiers: ['premium', 'enterprise'],
    riskLevel: 'medium',
    triggers: ['urgent', 'broadcast needed', 'bulk message', 'emergency'],
    utterances: [
      'send WhatsApp',
      'broadcast to parents',
      'WhatsApp message',
      'connect WhatsApp',
      'bulk message',
      'emergency alert'
    ],
    relatedScreens: ['/screens/whatsapp-connector'],
    relatedTables: ['messages']
  }

   Line 208: "voice_notes"
   Context: {
    id: 'voice_notes',
    name: 'Voice Notes',
    description: 'Record, transcribe, and organize voice notes with AI summaries',
    roles: ['teacher', 'principal'],
    tiers: ['premium', 'enterprise'],
    riskLevel: 'low',
    triggers: ['voice message', 'quick note', 'hands-free', 'recording'],
    utterances: [
      'record voice note',
      'voice memo',
      'transcribe audio',
      'view voice notes',
      'audio notes',
      'talk to type'
    ],
    relatedScreens: ['/screens/voice-notes'],
    relatedTables: ['voice_notes']
  }

   Line 228: "class_management"
   Context: {
    id: 'class_management',
    name: 'Class Management',
    description: 'Organize classes, assign teachers, manage schedules',
    roles: ['principal'],
    tiers: ['starter', 'premium', 'enterprise'],
    riskLevel: 'medium',
    triggers: ['new term', 'class setup', 'schedule', 'organization'],
    utterances: [
      'manage classes',
      'assign teacher',
      'class schedule',
      'view classes',
      'create class',
      'class roster'
    ],
    relatedScreens: ['/screens/classes'],
    relatedTables: ['classes', 'teachers', 'students']
  }

   Line 248: "announcement_system"
   Context: {
    id: 'announcement_system',
    name: 'Announcement System',
    description: 'Create and send announcements to parents, teachers, or entire preschool',
    roles: ['principal', 'teacher'],
    tiers: ['starter', 'premium', 'enterprise'],
    riskLevel: 'medium',
    triggers: ['important news', 'school event', 'update needed', 'broadcast'],
    utterances: [
      'send announcement',
      'create announcement',
      'notify parents',
      'broadcast message',
      'school announcement',
      'important notice'
    ],
    relatedScreens: ['/screens/announcements', '/screens/principal-announcement'],
    relatedTables: ['announcements', 'users']
  }

   Line 268: "ai_assistant"
   Context: {
    id: 'ai_assistant',
    name: 'Dash AI Assistant',
    description: 'Conversational AI assistant with voice support and context awareness',
    roles: ['teacher', 'principal', 'parent'],
    tiers: ['premium', 'enterprise'],
    riskLevel: 'low',
    triggers: [],
    utterances: [
      'ask dash',
      'help me with',
      'dash can you',
      'voice command',
      'ai help',
      'assistant'
    ],
    relatedScreens: ['/(parent)/dash', '/screens/dash-assistant'],
    relatedTables: ['ai_usage_logs', 'conversation_history']
  }

   Line 288: "document_management"
   Context: {
    id: 'document_management',
    name: 'Document Management',
    description: 'Upload, organize, and share documents with OCR and search',
    roles: ['teacher', 'principal'],
    tiers: ['premium', 'enterprise'],
    riskLevel: 'low',
    triggers: [],
    utterances: [
      'upload document',
      'view documents',
      'search documents',
      'share file',
      'document library',
      'file management'
    ],
    relatedScreens: ['/screens/documents'],
    relatedTables: ['documents']
  }

   Line 308: "activity_feed"
   Context: {
    id: 'activity_feed',
    name: 'Activity Feed',
    description: 'Real-time feed of preschool activities, announcements, and updates',
    roles: ['teacher', 'principal', 'parent'],
    tiers: ['starter', 'premium', 'enterprise'],
    riskLevel: 'low',
    triggers: [],
    utterances: [
      'view activity feed',
      'recent activities',
      'what\'s new',
      'school updates',
      'activity timeline',
      'recent events'
    ],
    relatedScreens: ['/(parent)/home'],
    relatedTables: ['activities', 'announcements']
  }

   Line 328: "worksheet_generation"
   Context: {
    id: 'worksheet_generation',
    name: 'Worksheet Generator',
    description: 'Generate educational worksheets for practice and assessment',
    roles: ['teacher', 'principal'],
    tiers: ['starter', 'premium', 'enterprise'],
    riskLevel: 'low',
    triggers: ['homework needed', 'practice needed', 'assessment prep'],
    utterances: [
      'create worksheet',
      'generate math worksheet',
      'practice activities',
      'homework sheet',
      'activity worksheet',
      'print worksheet'
    ],
    relatedScreens: ['/screens/worksheet-demo'],
    relatedTables: []
  }

   Line 357: "preschools"
   Context: {
  preschools: {
    table: 'preschools',
    purpose: 'Multi-tenant organization root - each preschool is isolated',
    keyCols: ['id', 'name', 'subscription_tier', 'owner_id'],
    rlsRequired: true,
    roles: ['super_admin', 'principal']
  }

   Line 366: "users"
   Context: {
    table: 'users',
    purpose: 'User accounts with role and preschool association',
    keyCols: ['id', 'email', 'role', 'preschool_id', 'full_name'],
    rlsRequired: true,
    roles: ['teacher', 'principal', 'parent', 'super_admin']
  }

   Line 374: "students"
   Context: {
    table: 'students',
    purpose: 'Student records with demographic and enrollment data',
    keyCols: ['id', 'first_name', 'last_name', 'preschool_id', 'class_id', 'date_of_birth'],
    rlsRequired: true,
    roles: ['teacher', 'principal', 'parent']
  }

   Line 382: "classes"
   Context: {
    table: 'classes',
    purpose: 'Class/grade groupings with teacher assignments',
    keyCols: ['id', 'name', 'preschool_id', 'teacher_id', 'age_group'],
    rlsRequired: true,
    roles: ['teacher', 'principal']
  }

   Line 390: "attendance"
   Context: {
    table: 'attendance',
    purpose: 'Daily attendance records with status and notes',
    keyCols: ['id', 'student_id', 'date', 'status', 'preschool_id'],
    rlsRequired: true,
    roles: ['teacher', 'principal']
  }

   Line 398: "grades"
   Context: {
    table: 'grades',
    purpose: 'Assessment results and student performance tracking',
    keyCols: ['id', 'student_id', 'assessment_id', 'score', 'preschool_id'],
    rlsRequired: true,
    roles: ['teacher', 'principal']
  }

   Line 406: "assessments"
   Context: {
    table: 'assessments',
    purpose: 'Assessment definitions with CAPS alignment',
    keyCols: ['id', 'name', 'class_id', 'preschool_id', 'total_marks', 'caps_code'],
    rlsRequired: true,
    roles: ['teacher', 'principal']
  }

   Line 414: "lesson_plans"
   Context: {
    table: 'lesson_plans',
    purpose: 'Structured lesson plans with CAPS curriculum alignment',
    keyCols: ['id', 'title', 'class_id', 'preschool_id', 'caps_aligned', 'date'],
    rlsRequired: true,
    roles: ['teacher', 'principal']
  }

   Line 422: "announcements"
   Context: {
    table: 'announcements',
    purpose: 'Preschool-wide or targeted announcements',
    keyCols: ['id', 'title', 'preschool_id', 'author_id', 'target_roles', 'created_at'],
    rlsRequired: true,
    roles: ['teacher', 'principal', 'parent']
  }

   Line 430: "fees"
   Context: {
    table: 'fees',
    purpose: 'Fee structures and payment tracking',
    keyCols: ['id', 'student_id', 'preschool_id', 'amount', 'due_date', 'status'],
    rlsRequired: true,
    roles: ['principal', 'parent']
  }

   Line 438: "transactions"
   Context: {
    table: 'transactions',
    purpose: 'Financial transaction records',
    keyCols: ['id', 'preschool_id', 'type', 'amount', 'date', 'student_id'],
    rlsRequired: true,
    roles: ['principal']
  }

   Line 446: "documents"
   Context: {
    table: 'documents',
    purpose: 'File storage with metadata and OCR text',
    keyCols: ['id', 'preschool_id', 'uploader_id', 'file_path', 'ocr_text'],
    rlsRequired: true,
    roles: ['teacher', 'principal']
  }

   Line 454: "voice_notes"
   Context: {
    table: 'voice_notes',
    purpose: 'Voice recordings with transcriptions',
    keyCols: ['id', 'preschool_id', 'user_id', 'audio_url', 'transcription'],
    rlsRequired: true,
    roles: ['teacher', 'principal']
  }

   Line 462: "messages"
   Context: {
    table: 'messages',
    purpose: 'In-app messaging between users',
    keyCols: ['id', 'preschool_id', 'sender_id', 'recipient_id', 'content'],
    rlsRequired: true,
    roles: ['teacher', 'principal', 'parent']
  }

   Line 470: "ai_usage_logs"
   Context: {
    table: 'ai_usage_logs',
    purpose: 'Track AI requests for billing and rate limiting',
    keyCols: ['id', 'preschool_id', 'user_id', 'model', 'tokens', 'timestamp'],
    rlsRequired: true,
    roles: ['super_admin']
  }

   Line 478: "conversation_history"
   Context: {
    table: 'conversation_history',
    purpose: 'Chat history for Dash AI assistant',
    keyCols: ['id', 'preschool_id', 'user_id', 'messages', 'context'],
    rlsRequired: true,
    roles: ['teacher', 'principal', 'parent']
  }

   Line 486: "activities"
   Context: {
    table: 'activities',
    purpose: 'Activity feed items for real-time updates',
    keyCols: ['id', 'preschool_id', 'type', 'actor_id', 'data', 'timestamp'],
    rlsRequired: true,
    roles: ['teacher', 'principal', 'parent']
  }

   Line 494: "medical_info"
   Context: {
    table: 'medical_info',
    purpose: 'Student medical information and allergies',
    keyCols: ['id', 'student_id', 'preschool_id', 'conditions', 'allergies'],
    rlsRequired: true,
    roles: ['teacher', 'principal', 'parent']
  }

   Line 502: "emergency_contacts"
   Context: {
    table: 'emergency_contacts',
    purpose: 'Student emergency contact information',
    keyCols: ['id', 'student_id', 'preschool_id', 'name', 'phone', 'relationship'],
    rlsRequired: true,
    roles: ['teacher', 'principal', 'parent']
  }

   Line 520: "/(parent)/home"
   Context: {
  parent_home: {
    route: '/(parent)/home',
    title: 'Home',
    description: 'Parent dashboard with activity feed, quick actions, and notifications',
    roles: ['parent'],
    quickActions: ['View Attendance', 'Check Fees', 'Send Message', 'View Announcements'],
    relatedFeatures: ['activity_feed', 'parent_communication', 'attendance']
  }

   Line 530: "/(parent)/students"
   Context: {
    route: '/(parent)/students',
    title: 'My Children',
    description: 'View and manage children profiles, attendance, grades',
    roles: ['parent'],
    quickActions: ['View Profile', 'Check Attendance', 'View Grades', 'Medical Info'],
    relatedFeatures: ['student_profiles', 'attendance', 'grading']
  }

   Line 539: "/(parent)/attendance"
   Context: {
    route: '/(parent)/attendance',
    title: 'Attendance',
    description: 'View children attendance history and patterns',
    roles: ['parent'],
    relatedFeatures: ['attendance']
  }

   Line 547: "/(parent)/dash"
   Context: {
    route: '/(parent)/dash',
    title: 'Dash AI',
    description: 'AI assistant for questions, help, and automation',
    roles: ['parent', 'teacher', 'principal'],
    quickActions: ['Voice Input', 'Ask Question', 'Quick Commands'],
    relatedFeatures: ['ai_assistant']
  }

   Line 556: "/screens/attendance"
   Context: {
    route: '/screens/attendance',
    title: 'Mark Attendance',
    description: 'Take attendance for classes with quick mark all',
    roles: ['teacher', 'principal'],
    quickActions: ['Mark All Present', 'Mark All Absent', 'Add Note', 'View Report'],
    relatedFeatures: ['attendance']
  }

   Line 565: "/screens/grades"
   Context: {
    route: '/screens/grades',
    title: 'Grades & Assessments',
    description: 'Record grades, create assessments, generate reports',
    roles: ['teacher', 'principal'],
    quickActions: ['Add Grade', 'Create Assessment', 'Generate Report Card'],
    relatedFeatures: ['grading']
  }

   Line 574: "/screens/lesson-plans"
   Context: {
    route: '/screens/lesson-plans',
    title: 'Lesson Plans',
    description: 'Create and manage CAPS-aligned lesson plans',
    roles: ['teacher', 'principal'],
    quickActions: ['New Lesson', 'View Plans', 'Share Plan', 'CAPS Search'],
    relatedFeatures: ['lesson_planning']
  }

   Line 583: "/screens/ai-lesson-generator"
   Context: {
    route: '/screens/ai-lesson-generator',
    title: 'AI Lesson Generator',
    description: 'Generate CAPS-aligned lessons with AI',
    roles: ['teacher', 'principal'],
    quickActions: ['Generate Lesson', 'View Templates', 'Save Draft'],
    relatedFeatures: ['lesson_planning', 'ai_assistant']
  }

   Line 592: "/screens/financial-dashboard"
   Context: {
    route: '/screens/financial-dashboard',
    title: 'Financial Dashboard',
    description: 'Fee tracking, expenses, financial reports',
    roles: ['principal'],
    quickActions: ['View Fees', 'Add Expense', 'Generate Report', 'Outstanding Payments'],
    relatedFeatures: ['financial_dashboard']
  }

   Line 601: "/screens/reports"
   Context: {
    route: '/screens/reports',
    title: 'Reports & Analytics',
    description: 'Generate and export various reports',
    roles: ['principal', 'teacher'],
    quickActions: ['Attendance Report', 'Financial Report', 'Academic Report', 'Custom Report'],
    relatedFeatures: ['reports']
  }

   Line 610: "/screens/teacher-reports"
   Context: {
    route: '/screens/teacher-reports',
    title: 'Teacher Reports',
    description: 'Student progress and analytics',
    roles: ['teacher', 'principal'],
    quickActions: ['Generate Report', 'View Analytics', 'Export Data'],
    relatedFeatures: ['reports']
  }

   Line 619: "/screens/announcements"
   Context: {
    route: '/screens/announcements',
    title: 'Announcements',
    description: 'Create and manage preschool announcements',
    roles: ['principal', 'teacher'],
    quickActions: ['New Announcement', 'View Sent', 'Schedule Announcement'],
    relatedFeatures: ['announcement_system']
  }

   Line 628: "/screens/principal-announcement"
   Context: {
    route: '/screens/principal-announcement',
    title: 'Principal Announcements',
    description: 'Create school-wide announcements',
    roles: ['principal'],
    quickActions: ['New Announcement', 'View History', 'Schedule'],
    relatedFeatures: ['announcement_system']
  }

   Line 637: "/screens/classes"
   Context: {
    route: '/screens/classes',
    title: 'Class Management',
    description: 'Manage classes, assign teachers, organize students',
    roles: ['principal'],
    quickActions: ['Create Class', 'Assign Teacher', 'View Students', 'Edit Schedule'],
    relatedFeatures: ['class_management']
  }

   Line 646: "/screens/documents"
   Context: {
    route: '/screens/documents',
    title: 'Documents',
    description: 'Upload, organize, and search documents',
    roles: ['teacher', 'principal'],
    quickActions: ['Upload Document', 'Search', 'Create Folder', 'Share'],
    relatedFeatures: ['document_management']
  }

   Line 655: "/screens/voice-notes"
   Context: {
    route: '/screens/voice-notes',
    title: 'Voice Notes',
    description: 'Record and manage voice notes with transcriptions',
    roles: ['teacher', 'principal'],
    quickActions: ['Record Note', 'View All', 'Search Transcriptions'],
    relatedFeatures: ['voice_notes']
  }

   Line 664: "/screens/messages"
   Context: {
    route: '/screens/messages',
    title: 'Messages',
    description: 'In-app messaging with parents and staff',
    roles: ['teacher', 'principal', 'parent'],
    quickActions: ['New Message', 'View Inbox', 'Mark Read'],
    relatedFeatures: ['parent_communication']
  }

   Line 673: "/screens/teacher-messages"
   Context: {
    route: '/screens/teacher-messages',
    title: 'Teacher Messages',
    description: 'Communicate with parents',
    roles: ['teacher', 'principal'],
    quickActions: ['New Message', 'View Inbox', 'Templates'],
    relatedFeatures: ['parent_communication']
  }

   Line 682: "/screens/student-profile"
   Context: {
    route: '/screens/student-profile',
    title: 'Student Profile',
    description: 'Detailed student information and records',
    roles: ['teacher', 'principal', 'parent'],
    quickActions: ['Edit Info', 'View Attendance', 'View Grades', 'Medical Info', 'Emergency Contacts'],
    relatedFeatures: ['student_profiles']
  }

   Line 691: "/screens/student-management"
   Context: {
    route: '/screens/student-management',
    title: 'Student Management',
    description: 'Manage student enrollment and profiles',
    roles: ['teacher', 'principal'],
    quickActions: ['Add Student', 'View Roster', 'Export List'],
    relatedFeatures: ['student_profiles']
  }

   Line 700: "/screens/worksheet-demo"
   Context: {
    route: '/screens/worksheet-demo',
    title: 'Worksheet Generator',
    description: 'Create printable worksheets',
    roles: ['teacher', 'principal'],
    quickActions: ['Generate Worksheet', 'Customize', 'Download PDF'],
    relatedFeatures: ['worksheet_generation']
  }

   Line 709: "/screens/dash-assistant"
   Context: {
    route: '/screens/dash-assistant',
    title: 'Dash AI Assistant',
    description: 'AI-powered educational assistant',
    roles: ['teacher', 'principal', 'parent'],
    quickActions: ['Ask Question', 'Voice Note', 'View History'],
    relatedFeatures: ['ai_assistant']
  }

   Line 718: "/screens/dash-ai-settings"
   Context: {
    route: '/screens/dash-ai-settings',
    title: 'Dash Settings',
    description: 'Configure AI assistant preferences',
    roles: ['teacher', 'principal', 'parent'],
    quickActions: ['Autonomy Level', 'Voice Settings', 'Clear Memory'],
    relatedFeatures: ['ai_assistant']
  }

   Line 727: "/screens/whatsapp-connector"
   Context: {
    route: '/screens/whatsapp-connector',
    title: 'WhatsApp Integration',
    description: 'Connect and manage WhatsApp broadcasting',
    roles: ['principal', 'teacher'],
    quickActions: ['Connect Account', 'Broadcast', 'View History'],
    relatedFeatures: ['whatsapp_integration']
  }

   Line 752: "free"
   Context: {
  free: {
    id: 'free',
    name: 'Free Trial',
    features: ['basic_attendance', 'limited_students'],
    aiLimits: {
      requestsPerHour: 5,
      requestsPerDay: 20,
      modelsAllowed: ['haiku']
    }

   Line 768: "starter"
   Context: {
    id: 'starter',
    name: 'Starter',
    features: [
      'attendance',
      'student_profiles',
      'class_management',
      'announcement_system',
      'parent_communication',
      'activity_feed',
      'worksheet_generation'
    ],
    aiLimits: {
      requestsPerHour: 15,
      requestsPerDay: 100,
      modelsAllowed: ['haiku', 'sonnet']
    }

   Line 791: "premium"
   Context: {
    id: 'premium',
    name: 'Premium',
    features: [
      'all_starter_features',
      'grading',
      'lesson_planning',
      'financial_dashboard',
      'reports',
      'ai_assistant',
      'document_management',
      'voice_notes',
      'whatsapp_integration'
    ],
    aiLimits: {
      requestsPerHour: 50,
      requestsPerDay: 500,
      modelsAllowed: ['haiku', 'sonnet', 'opus']
    }

   Line 816: "enterprise"
   Context: {
    id: 'enterprise',
    name: 'Enterprise',
    features: [
      'all_premium_features',
      'custom_integrations',
      'advanced_analytics',
      'dedicated_support',
      'custom_branding'
    ],
    aiLimits: {
      requestsPerHour: 200,
      requestsPerDay: 2000,
      modelsAllowed: ['haiku', 'sonnet', 'opus']
    }

   Line 838: "ai-proxy"
   Context: {
  ai_proxy: {
    name: 'ai-proxy',
    description: 'Secure AI request proxy with usage tracking and PII redaction',
    endpoint: '/functions/v1/ai-proxy',
    roles: ['teacher', 'principal', 'parent']
  }

   Line 846: "report-generator"
   Context: {
    name: 'report-generator',
    description: 'Generate PDF reports for attendance, grades, financials',
    endpoint: '/functions/v1/report-generator',
    roles: ['teacher', 'principal']
  }

   Line 853: "notification-dispatcher"
   Context: {
    name: 'notification-dispatcher',
    description: 'Send push notifications and emails',
    endpoint: '/functions/v1/notification-dispatcher',
    roles: ['teacher', 'principal']
  }

   Line 860: "data-sync"
   Context: {
    name: 'data-sync',
    description: 'Sync data across devices and handle offline changes',
    endpoint: '/functions/v1/data-sync',
    roles: ['teacher', 'principal', 'parent']
  }

   Line 908: "preschool_id"
   Context: {
  multiTenant: true,
  tenantKey: 'preschool_id',
  rlsEnforced: true,
  notes: [
    'All database queries MUST filter by preschool_id',
    'RLS (Row Level Security) enforced at database level',
    'Never query across tenants - data isolation is critical',
    'PII includes: full_name, date_of_birth, contact information',
    'High-risk operations require explicit approval',
    'Client-side must use Edge Functions for AI calls'
  ],
  piiFields: [
    'full_name',
    'date_of_birth',
    'email',
    'phone_number',
    'address',
    'id_number',
    'parent_name'
  ]
}

   Line 30: "Attendance Tracking"
   Context: 'Attendance Tracking'

   Line 50: "Lesson Planning"
   Context: 'Lesson Planning'

   Line 61: "CAPS aligned lessons"
   Context: 'CAPS aligned lessons'

   Line 70: "Student Grading"
   Context: 'Student Grading'

   Line 90: "Parent Communication"
   Context: 'Parent Communication'

   Line 110: "Financial Dashboard"
   Context: 'Financial Dashboard'

   Line 130: "Worksheet Generator"
   Context: 'Worksheet Generator'

   Line 131: "Generate educational worksheets for practice and assessment"
   Context: 'Generate educational worksheets for practice and assessment'

   Line 137: "Create worksheet"
   Context: 'Create worksheet'

   Line 138: "Generate math worksheet"
   Context: 'Generate math worksheet'

   Line 139: "Practice activities"
   Context: 'Practice activities'

   Line 140: "Homework sheet"
   Context: 'Homework sheet'

   Line 141: "Activity worksheet"
   Context: 'Activity worksheet'

   Line 142: "Print worksheet"
   Context: 'Print worksheet'

   Line 150: "Student Profiles"
   Context: 'Student Profiles'

   Line 190: "WhatsApp Integration"
   Context: 'WhatsApp Integration'

   Line 191: "Connect and broadcast messages via WhatsApp"
   Context: 'Connect and broadcast messages via WhatsApp'

   Line 199: "WhatsApp message"
   Context: 'WhatsApp message'

   Line 210: "Voice Notes"
   Context: 'Voice Notes'

   Line 230: "Class Management"
   Context: 'Class Management'

   Line 250: "Announcement System"
   Context: 'Announcement System'

   Line 270: "Dash AI Assistant"
   Context: 'Dash AI Assistant'

   Line 271: "Conversational AI assistant with voice support and context awareness"
   Context: 'Conversational AI assistant with voice support and context awareness'

   Line 290: "Document Management"
   Context: 'Document Management'

   Line 310: "Activity Feed"
   Context: 'Activity Feed'

   Line 130: "Worksheet Generator"
   Context: 'Worksheet Generator'

   Line 131: "Generate educational worksheets for practice and assessment"
   Context: 'Generate educational worksheets for practice and assessment'

   Line 368: "User accounts with role and preschool association"
   Context: 'User accounts with role and preschool association'

   Line 376: "Student records with demographic and enrollment data"
   Context: 'Student records with demographic and enrollment data'

   Line 392: "Daily attendance records with status and notes"
   Context: 'Daily attendance records with status and notes'

   Line 400: "Assessment results and student performance tracking"
   Context: 'Assessment results and student performance tracking'

   Line 408: "Assessment definitions with CAPS alignment"
   Context: 'Assessment definitions with CAPS alignment'

   Line 416: "Structured lesson plans with CAPS curriculum alignment"
   Context: 'Structured lesson plans with CAPS curriculum alignment'

   Line 432: "Fee structures and payment tracking"
   Context: 'Fee structures and payment tracking'

   Line 440: "Financial transaction records"
   Context: 'Financial transaction records'

   Line 448: "File storage with metadata and OCR text"
   Context: 'File storage with metadata and OCR text'

   Line 456: "Voice recordings with transcriptions"
   Context: 'Voice recordings with transcriptions'

   Line 472: "Track AI requests for billing and rate limiting"
   Context: 'Track AI requests for billing and rate limiting'

   Line 480: "Chat history for Dash AI assistant"
   Context: 'Chat history for Dash AI assistant'

   Line 496: "Student medical information and allergies"
   Context: 'Student medical information and allergies'

   Line 504: "Student emergency contact information"
   Context: 'Student emergency contact information'

   Line 526: "Check Fees"
   Context: 'Check Fees'

   Line 526: "Send Message"
   Context: 'Send Message'

   Line 532: "My Children"
   Context: 'My Children'

   Line 535: "Check Attendance"
   Context: 'Check Attendance'

   Line 535: "Medical Info"
   Context: 'Medical Info'

   Line 549: "Dash AI"
   Context: 'Dash AI'

   Line 552: "Voice Input"
   Context: 'Voice Input'

   Line 552: "Ask Question"
   Context: 'Ask Question'

   Line 552: "Quick Commands"
   Context: 'Quick Commands'

   Line 558: "Mark Attendance"
   Context: 'Mark Attendance'

   Line 559: "Take attendance for classes with quick mark all"
   Context: 'Take attendance for classes with quick mark all'

   Line 561: "Mark All Present"
   Context: 'Mark All Present'

   Line 561: "Mark All Absent"
   Context: 'Mark All Absent'

   Line 561: "Add Note"
   Context: 'Add Note'

   Line 570: "Add Grade"
   Context: 'Add Grade'

   Line 570: "Create Assessment"
   Context: 'Create Assessment'

   Line 570: "Generate Report Card"
   Context: 'Generate Report Card'

   Line 576: "Lesson Plans"
   Context: 'Lesson Plans'

   Line 579: "New Lesson"
   Context: 'New Lesson'

   Line 579: "Share Plan"
   Context: 'Share Plan'

   Line 579: "CAPS Search"
   Context: 'CAPS Search'

   Line 585: "AI Lesson Generator"
   Context: 'AI Lesson Generator'

   Line 588: "Generate Lesson"
   Context: 'Generate Lesson'

   Line 588: "Save Draft"
   Context: 'Save Draft'

   Line 110: "Financial Dashboard"
   Context: 'Financial Dashboard'

   Line 597: "Add Expense"
   Context: 'Add Expense'

   Line 597: "Generate Report"
   Context: 'Generate Report'

   Line 597: "Outstanding Payments"
   Context: 'Outstanding Payments'

   Line 604: "Generate and export various reports"
   Context: 'Generate and export various reports'

   Line 606: "Attendance Report"
   Context: 'Attendance Report'

   Line 606: "Financial Report"
   Context: 'Financial Report'

   Line 606: "Academic Report"
   Context: 'Academic Report'

   Line 606: "Custom Report"
   Context: 'Custom Report'

   Line 612: "Teacher Reports"
   Context: 'Teacher Reports'

   Line 613: "Student progress and analytics"
   Context: 'Student progress and analytics'

   Line 597: "Generate Report"
   Context: 'Generate Report'

   Line 622: "Create and manage preschool announcements"
   Context: 'Create and manage preschool announcements'

   Line 624: "New Announcement"
   Context: 'New Announcement'

   Line 624: "Schedule Announcement"
   Context: 'Schedule Announcement'

   Line 630: "Principal Announcements"
   Context: 'Principal Announcements'

   Line 624: "New Announcement"
   Context: 'New Announcement'

   Line 230: "Class Management"
   Context: 'Class Management'

   Line 642: "Create Class"
   Context: 'Create Class'

   Line 642: "Assign Teacher"
   Context: 'Assign Teacher'

   Line 642: "Edit Schedule"
   Context: 'Edit Schedule'

   Line 651: "Upload Document"
   Context: 'Upload Document'

   Line 651: "Create Folder"
   Context: 'Create Folder'

   Line 210: "Voice Notes"
   Context: 'Voice Notes'

   Line 658: "Record and manage voice notes with transcriptions"
   Context: 'Record and manage voice notes with transcriptions'

   Line 660: "Record Note"
   Context: 'Record Note'

   Line 660: "Search Transcriptions"
   Context: 'Search Transcriptions'

   Line 669: "New Message"
   Context: 'New Message'

   Line 669: "Mark Read"
   Context: 'Mark Read'

   Line 675: "Teacher Messages"
   Context: 'Teacher Messages'

   Line 676: "Communicate with parents"
   Context: 'Communicate with parents'

   Line 669: "New Message"
   Context: 'New Message'

   Line 684: "Student Profile"
   Context: 'Student Profile'

   Line 685: "Detailed student information and records"
   Context: 'Detailed student information and records'

   Line 687: "Edit Info"
   Context: 'Edit Info'

   Line 535: "Medical Info"
   Context: 'Medical Info'

   Line 687: "Emergency Contacts"
   Context: 'Emergency Contacts'

   Line 693: "Student Management"
   Context: 'Student Management'

   Line 694: "Manage student enrollment and profiles"
   Context: 'Manage student enrollment and profiles'

   Line 696: "Add Student"
   Context: 'Add Student'

   Line 130: "Worksheet Generator"
   Context: 'Worksheet Generator'

   Line 703: "Create printable worksheets"
   Context: 'Create printable worksheets'

   Line 705: "Generate Worksheet"
   Context: 'Generate Worksheet'

   Line 705: "Download PDF"
   Context: 'Download PDF'

   Line 270: "Dash AI Assistant"
   Context: 'Dash AI Assistant'

   Line 552: "Ask Question"
   Context: 'Ask Question'

   Line 714: "Voice Note"
   Context: 'Voice Note'

   Line 720: "Dash Settings"
   Context: 'Dash Settings'

   Line 721: "Configure AI assistant preferences"
   Context: 'Configure AI assistant preferences'

   Line 723: "Autonomy Level"
   Context: 'Autonomy Level'

   Line 723: "Voice Settings"
   Context: 'Voice Settings'

   Line 723: "Clear Memory"
   Context: 'Clear Memory'

   Line 190: "WhatsApp Integration"
   Context: 'WhatsApp Integration'

   Line 730: "Connect and manage WhatsApp broadcasting"
   Context: 'Connect and manage WhatsApp broadcasting'

   Line 732: "Connect Account"
   Context: 'Connect Account'

   Line 755: "Free Trial"
   Context: 'Free Trial'

   Line 841: "Secure AI request proxy with usage tracking and PII redaction"
   Context: 'Secure AI request proxy with usage tracking and PII redaction'

   Line 855: "Send push notifications and emails"
   Context: 'Send push notifications and emails'

   Line 862: "Sync data across devices and handle offline changes"
   Context: 'Sync data across devices and handle offline changes'

   Line 871: "South African preschools"
   Context: 'South African preschools'

   Line 873: "Early Childhood Development"
   Context: 'Early Childhood Development'

   Line 873: "Foundation Phase"
   Context: 'Foundation Phase'

   Line 873: "Grade R"
   Context: 'Grade R'

   Line 878: "Culturally appropriate content for South African context"
   Context: 'Culturally appropriate content for South African context'

   Line 898: "Use back button or swipe to go back"
   Context: 'Use back button or swipe to go back'

   Line 900: "Deep linking supported for all screens"
   Context: 'Deep linking supported for all screens'

üìÑ lib/database.types.ts:
   Line 2293: "public"
   Context: {
        Row: {
          contact_email: string
          contact_name: string | null
          country: string | null
          created_at: string
          id: string
          notes: string | null
          organization_name: string | null
          phone: string | null
          plan_interest: string | null
          role: string | null
          school_size: string | null
          status: Database["public"]["Enums"]["lead_status"]
          updated_at: string
        }

   Line 2309: "public"
   Context: {
          contact_email: string
          contact_name?: string | null
          country?: string | null
          created_at?: string
          id?: string
          notes?: string | null
          organization_name?: string | null
          phone?: string | null
          plan_interest?: string | null
          role?: string | null
          school_size?: string | null
          status?: Database["public"]["Enums"]["lead_status"]
          updated_at?: string
        }

   Line 2324: "public"
   Context: {
          contact_email?: string
          contact_name?: string | null
          country?: string | null
          created_at?: string
          id?: string
          notes?: string | null
          organization_name?: string | null
          phone?: string | null
          plan_interest?: string | null
          role?: string | null
          school_size?: string | null
          status?: Database["public"]["Enums"]["lead_status"]
          updated_at?: string
        }

   Line 4386: "public"
   Context: {
        Row: {
          billing_period_end: string
          billing_period_start: string
          created_at: string | null
          currency: string | null
          id: string
          overage_units: number
          paid_at: string | null
          payment_reference: string | null
          payment_url: string | null
          quota_type: string
          status: Database["public"]["Enums"]["overage_billing_status"] | null
          total_amount: number
          unit_price: number
          updated_at: string | null
          usage_tracking_id: string
          user_id: string
        }

   Line 4405: "public"
   Context: {
          billing_period_end: string
          billing_period_start: string
          created_at?: string | null
          currency?: string | null
          id?: string
          overage_units: number
          paid_at?: string | null
          payment_reference?: string | null
          payment_url?: string | null
          quota_type: string
          status?: Database["public"]["Enums"]["overage_billing_status"] | null
          total_amount: number
          unit_price: number
          updated_at?: string | null
          usage_tracking_id: string
          user_id: string
        }

   Line 4423: "public"
   Context: {
          billing_period_end?: string
          billing_period_start?: string
          created_at?: string | null
          currency?: string | null
          id?: string
          overage_units?: number
          paid_at?: string | null
          payment_reference?: string | null
          payment_url?: string | null
          quota_type?: string
          status?: Database["public"]["Enums"]["overage_billing_status"] | null
          total_amount?: number
          unit_price?: number
          updated_at?: string | null
          usage_tracking_id?: string
          user_id?: string
        }

   Line 6076: "public"
   Context: {
        Row: {
          billing_frequency: string
          cancelled_at: string | null
          created_at: string | null
          end_date: string
          id: string
          metadata: Json | null
          next_billing_date: string | null
          owner_type: Database["public"]["Enums"]["subscription_owner_type"]
          payfast_payment_id: string | null
          payfast_token: string | null
          plan_id: string
          school_id: string | null
          seats_total: number
          seats_used: number
          start_date: string
          status: string
          trial_end_date: string | null
          updated_at: string | null
          user_id: string | null
        }

   Line 6098: "public"
   Context: {
          billing_frequency: string
          cancelled_at?: string | null
          created_at?: string | null
          end_date: string
          id?: string
          metadata?: Json | null
          next_billing_date?: string | null
          owner_type?: Database["public"]["Enums"]["subscription_owner_type"]
          payfast_payment_id?: string | null
          payfast_token?: string | null
          plan_id: string
          school_id?: string | null
          seats_total?: number
          seats_used?: number
          start_date: string
          status: string
          trial_end_date?: string | null
          updated_at?: string | null
          user_id?: string | null
        }

   Line 6119: "public"
   Context: {
          billing_frequency?: string
          cancelled_at?: string | null
          created_at?: string | null
          end_date?: string
          id?: string
          metadata?: Json | null
          next_billing_date?: string | null
          owner_type?: Database["public"]["Enums"]["subscription_owner_type"]
          payfast_payment_id?: string | null
          payfast_token?: string | null
          plan_id?: string
          school_id?: string | null
          seats_total?: number
          seats_used?: number
          start_date?: string
          status?: string
          trial_end_date?: string | null
          updated_at?: string | null
          user_id?: string | null
        }

   Line 6412: "public"
   Context: {
        Row: {
          created_at: string | null
          current_usage: number
          id: string
          last_updated: string | null
          overage_amount: number
          overage_status: Database["public"]["Enums"]["overage_status"] | null
          quota_limit: number
          quota_type: string
          usage_period_end: string
          usage_period_start: string
          user_id: string
        }

   Line 6426: "public"
   Context: {
          created_at?: string | null
          current_usage?: number
          id?: string
          last_updated?: string | null
          overage_amount?: number
          overage_status?: Database["public"]["Enums"]["overage_status"] | null
          quota_limit?: number
          quota_type: string
          usage_period_end: string
          usage_period_start: string
          user_id: string
        }

   Line 6439: "public"
   Context: {
          created_at?: string | null
          current_usage?: number
          id?: string
          last_updated?: string | null
          overage_amount?: number
          overage_status?: Database["public"]["Enums"]["overage_status"] | null
          quota_limit?: number
          quota_type?: string
          usage_period_end?: string
          usage_period_start?: string
          user_id?: string
        }

   Line 7585: "CompositeTypes"
   Context: "CompositeTypes"

   Line 7585: "CompositeTypes"
   Context: "CompositeTypes"

   Line 7585: "CompositeTypes"
   Context: "CompositeTypes"

   Line 7585: "CompositeTypes"
   Context: "CompositeTypes"

   Line 7585: "CompositeTypes"
   Context: "CompositeTypes"

üìÑ lib/date-utils.ts:
   Line 90: "PPp"
   Context: {
  return formatDate(date, 'PPp'); // e.g., "Apr 29, 2023, 11:30 AM"
}

   Line 111: "MMM d, yyyy"
   Context: {
  return formatDate(date, 'MMM d, yyyy'); // e.g., "Apr 29, 2023"
}

   Line 245: "Custom range requires start and end dates"
   Context: {
        throw new Error('Custom range requires start and end dates');
      }

   Line 297: "string"
   Context: {
  try {
    const start = typeof startDate === 'string' ? parseISO(startDate) : startDate;
    const end = typeof endDate === 'string' ? parseISO(endDate) : endDate;
    
    if (!isValid(start) || !isValid(end)) return '';
    
    const days = differenceInDays(end, start);
    
    if (days === 0) return 'Same day';
    if (days === 1) return '1 day';
    if (days < 7) return `${days}

   Line 386: "PPPPpppp"
   Context: {
  FULL: 'PPPPpppp',         // e.g., "Friday, April 29th, 2023 at 11:30:00 AM GMT"
  LONG: 'PPPp',             // e.g., "April 29th, 2023 at 11:30 AM"
  MEDIUM: 'PP p',           // e.g., "Apr 29, 2023 11:30 AM"
  SHORT: 'P',               // e.g., "04/29/2023"
  DATE_ONLY: 'PP',          // e.g., "Apr 29, 2023"
  TIME_ONLY: 'p',           // e.g., "11:30 AM"
  ISO: "yyyy-MM-dd'T'HH:mm:ss.SSSxxx",
  FILE_SAFE: 'yyyy-MM-dd_HH-mm-ss',
}

   Line 246: "Custom range requires start and end dates"
   Context: 'Custom range requires start and end dates'

   Line 306: "Same day"
   Context: 'Same day'

   Line 387: "PPPPpppp"
   Context: 'PPPPpppp'

   Line 246: "Custom range requires start and end dates"
   Context: throw new Error('Custom range requires start and end dates'

üìÑ lib/db/pettyCash.ts:
   Line 22: "Amount must be positive"
   Context: {
  amount: z.number().positive('Amount must be positive'),
  type: TransactionType,
  category: z.string().optional(),
  description: z.string().min(1, 'Description is required'),
  reference_number: z.string().optional(),
  occurred_at: z.date().optional(),
  metadata: z.record(z.string(), z.any()).optional(),
}

   Line 170: "Error creating petty cash account:"
   Context: {
        console.error('Error creating petty cash account:', createError);
        throw new Error('Failed to create petty cash account');
      }

   Line 182: "Failed to fetch created account"
   Context: {
        throw new Error('Failed to fetch created account');
      }

   Line 195: "Error in getAccountForSchool:"
   Context: {
    console.error('Error in getAccountForSchool:', error);
    return null;
  }

   Line 214: "Failed to fetch petty cash account:"
   Context: {
      console.warn('Failed to fetch petty cash account:', accountError);
      return 0;
    }

   Line 228: "Failed to fetch transactions for balance calculation:"
   Context: {
      console.warn('Failed to fetch transactions for balance calculation:', txnsError);
      return openingBalance; // Return at least the opening balance
    }

   Line 243: "Error in getBalance:"
   Context: {
    console.error('Error in getBalance:', error);
    return 0;
  }

   Line 272: "RPC function get_petty_cash_summary not available, using fallback:"
   Context: {
      console.warn('RPC function get_petty_cash_summary not available, using fallback:', rpcError);
      summaryError = rpcError;
    }

   Line 285: "Failed to fetch petty cash account for summary:"
   Context: {
      console.warn('Failed to fetch petty cash account for summary:', accountError);
    }

   Line 292: "Using petty cash summary fallback due to:"
   Context: {
      console.debug('Using petty cash summary fallback due to:', summaryError?.message || 'No RPC data');
      
      // Attempt to compute summary via direct queries (limited scope)
      try {
        let txQuery = assertSupabase()
          .from('petty_cash_transactions')
          .select('amount, type, status, created_at')
          .eq('school_id', schoolId);

        if (validatedOptions.from) {
          txQuery = txQuery.gte('created_at', validatedOptions.from.toISOString());
        }

   Line 310: "Error fetching transactions for summary fallback:"
   Context: {
          console.warn('Error fetching transactions for summary fallback:', txErr);
          
          // If it's an RLS policy error or table doesn't exist, return minimal data
          if (txErr.code === 'PGRST301' || txErr.code === 'PGRST116' || txErr.message?.includes('relation') || txErr.message?.includes('policy')) {
            console.debug('Petty cash tables/policies not accessible, returning default summary');
            return {
              total_expenses: 0,
              total_replenishments: 0, 
              total_adjustments: 0,
              transaction_count: 0,
              pending_count: 0,
              current_balance: openingBalance,
              is_low_balance: false,
              low_balance_threshold: lowThreshold,
            }

   Line 351: "Failed to fetch all approved transactions:"
   Context: {
          console.warn('Failed to fetch all approved transactions:', allApprovedError);
        }

   Line 373: "Summary fallback failed:"
   Context: {
        console.error('Summary fallback failed:', fbErr);
        // As a last-resort fallback, compute balance from opening balance only (no estimates)
        return {
          total_expenses: 0,
          total_replenishments: 0,
          total_adjustments: 0,
          transaction_count: 0,
          pending_count: 0,
          current_balance: openingBalance,
          is_low_balance: openingBalance < lowThreshold,
          low_balance_threshold: lowThreshold,
        }

   Line 419: "Error in getSummary:"
   Context: {
    console.error('Error in getSummary:', error);
    return {
      total_expenses: 0,
      total_replenishments: 0,
      total_adjustments: 0,
      transaction_count: 0,
      pending_count: 0,
      current_balance: 0,
      is_low_balance: false,
      low_balance_threshold: 1000,
    }

   Line 480: "Error listing transactions:"
   Context: {
      console.error('Error listing transactions:', error);
      return {
        transactions: [],
        has_more: false,
        total_count: 0,
      }

   Line 513: "Error in listTransactions:"
   Context: {
    console.error('Error in listTransactions:', error);
    return {
      transactions: [],
      has_more: false,
      total_count: 0,
    }

   Line 529: "No petty cash account found for school"
   Context: {
  try {
    const validatedPayload = CreateTransactionSchema.parse(payload);

    // Get account for school
    const account = await getAccountForSchool(schoolId);
    if (!account) {
      throw new Error('No petty cash account found for school');
    }

   Line 541: "User not authenticated"
   Context: {
      throw new Error('User not authenticated');
    }

   Line 565: "Error creating transaction:"
   Context: {
      console.error('Error creating transaction:', error);
      throw new Error('Failed to create transaction');
    }

   Line 579: "Error in createTransaction:"
   Context: {
    console.error('Error in createTransaction:', error);
    throw error;
  }

   Line 588: "principal_admin"
   Context: {
  return withTenantContext(schoolId, async (context) => {
    // Check if user has permission to approve
    if (!['principal_admin', 'finance_admin', 'super_admin'].includes(context.role)) {
      throw new Error('Insufficient permissions to approve transactions');
    }

   Line 610: "Error approving transaction:"
   Context: {
      console.error('Error approving transaction:', error);
      throw new Error('Failed to approve transaction');
    }

   Line 633: "principal_admin"
   Context: {
  return withTenantContext(schoolId, async (context) => {
    // Check if user has permission to reject
    if (!['principal_admin', 'finance_admin', 'super_admin'].includes(context.role)) {
      throw new Error('Insufficient permissions to reject transactions');
    }

   Line 640: "rejected"
   Context: {
      status: 'rejected' as const,
      rejection_reason: reason || 'Transaction rejected',
      approved_by: context.userId, // Track who rejected it
      approved_at: new Date().toISOString(),
    }

   Line 656: "Error rejecting transaction:"
   Context: {
      console.error('Error rejecting transaction:', error);
      throw new Error('Failed to reject transaction');
    }

   Line 691: "Error generating upload path:"
   Context: {
      console.error('Error generating upload path:', pathError);
      throw new Error('Failed to generate upload path');
    }

   Line 752: "Error attaching receipt record:"
   Context: {
      console.error('Error attaching receipt record:', error);
      throw new Error('Failed to attach receipt record');
    }

   Line 779: "Error fetching receipts:"
   Context: {
      console.error('Error fetching receipts:', error);
      throw new Error('Failed to fetch receipts');
    }

   Line 821: "Error fetching receipt for deletion:"
   Context: {
      console.error('Error fetching receipt for deletion:', fetchError);
      throw new Error('Receipt not found');
    }

   Line 832: "Error deleting from storage:"
   Context: {
      console.error('Error deleting from storage:', storageError);
      // Continue with database deletion anyway
    }

   Line 844: "Error deleting receipt record:"
   Context: {
      console.error('Error deleting receipt record:', dbError);
      throw new Error('Failed to delete receipt record');
    }

   Line 171: "Error creating petty cash account:"
   Context: console.error('Error creating petty cash account:'

   Line 196: "Error in getAccountForSchool:"
   Context: console.error('Error in getAccountForSchool:'

   Line 215: "Failed to fetch petty cash account:"
   Context: console.warn('Failed to fetch petty cash account:'

   Line 229: "Failed to fetch transactions for balance calculation:"
   Context: console.warn('Failed to fetch transactions for balance calculation:'

   Line 244: "Error in getBalance:"
   Context: console.error('Error in getBalance:'

   Line 273: "RPC function get_petty_cash_summary not available, using fallback:"
   Context: console.warn('RPC function get_petty_cash_summary not available, using fallback:'

   Line 286: "Failed to fetch petty cash account for summary:"
   Context: console.warn('Failed to fetch petty cash account for summary:'

   Line 311: "Error fetching transactions for summary fallback:"
   Context: console.warn('Error fetching transactions for summary fallback:'

   Line 352: "Failed to fetch all approved transactions:"
   Context: console.warn('Failed to fetch all approved transactions:'

   Line 374: "Summary fallback failed:"
   Context: console.error('Summary fallback failed:'

   Line 420: "Error in getSummary:"
   Context: console.error('Error in getSummary:'

   Line 481: "Error listing transactions:"
   Context: console.error('Error listing transactions:'

   Line 514: "Error in listTransactions:"
   Context: console.error('Error in listTransactions:'

   Line 566: "Error creating transaction:"
   Context: console.error('Error creating transaction:'

   Line 580: "Error in createTransaction:"
   Context: console.error('Error in createTransaction:'

   Line 611: "Error approving transaction:"
   Context: console.error('Error approving transaction:'

   Line 657: "Error rejecting transaction:"
   Context: console.error('Error rejecting transaction:'

   Line 692: "Error generating upload path:"
   Context: console.error('Error generating upload path:'

   Line 753: "Error attaching receipt record:"
   Context: console.error('Error attaching receipt record:'

   Line 780: "Error fetching receipts:"
   Context: console.error('Error fetching receipts:'

   Line 822: "Error fetching receipt for deletion:"
   Context: console.error('Error fetching receipt for deletion:'

   Line 833: "Error deleting from storage:"
   Context: console.error('Error deleting from storage:'

   Line 845: "Error deleting receipt record:"
   Context: console.error('Error deleting receipt record:'

   Line 23: "Amount must be positive"
   Context: 'Amount must be positive'

   Line 26: "Description is required"
   Context: 'Description is required'

   Line 172: "Failed to create petty cash account"
   Context: 'Failed to create petty cash account'

   Line 183: "Failed to fetch created account"
   Context: 'Failed to fetch created account'

   Line 293: "No RPC data"
   Context: 'No RPC data'

   Line 536: "No petty cash account found for school"
   Context: 'No petty cash account found for school'

   Line 542: "User not authenticated"
   Context: 'User not authenticated'

   Line 567: "Failed to create transaction"
   Context: 'Failed to create transaction'

   Line 592: "Insufficient permissions to approve transactions"
   Context: 'Insufficient permissions to approve transactions'

   Line 612: "Failed to approve transaction"
   Context: 'Failed to approve transaction'

   Line 637: "Insufficient permissions to reject transactions"
   Context: 'Insufficient permissions to reject transactions'

   Line 642: "Transaction rejected"
   Context: 'Transaction rejected'

   Line 658: "Failed to reject transaction"
   Context: 'Failed to reject transaction'

   Line 693: "Failed to generate upload path"
   Context: 'Failed to generate upload path'

   Line 754: "Failed to attach receipt record"
   Context: 'Failed to attach receipt record'

   Line 781: "Failed to fetch receipts"
   Context: 'Failed to fetch receipts'

   Line 823: "Receipt not found"
   Context: 'Receipt not found'

   Line 846: "Failed to delete receipt record"
   Context: 'Failed to delete receipt record'

   Line 172: "Failed to create petty cash account"
   Context: throw new Error('Failed to create petty cash account'

   Line 183: "Failed to fetch created account"
   Context: throw new Error('Failed to fetch created account'

   Line 536: "No petty cash account found for school"
   Context: throw new Error('No petty cash account found for school'

   Line 542: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 567: "Failed to create transaction"
   Context: throw new Error('Failed to create transaction'

   Line 592: "Insufficient permissions to approve transactions"
   Context: throw new Error('Insufficient permissions to approve transactions'

   Line 612: "Failed to approve transaction"
   Context: throw new Error('Failed to approve transaction'

   Line 637: "Insufficient permissions to reject transactions"
   Context: throw new Error('Insufficient permissions to reject transactions'

   Line 658: "Failed to reject transaction"
   Context: throw new Error('Failed to reject transaction'

   Line 693: "Failed to generate upload path"
   Context: throw new Error('Failed to generate upload path'

   Line 754: "Failed to attach receipt record"
   Context: throw new Error('Failed to attach receipt record'

   Line 781: "Failed to fetch receipts"
   Context: throw new Error('Failed to fetch receipts'

   Line 823: "Receipt not found"
   Context: throw new Error('Receipt not found'

   Line 846: "Failed to delete receipt record"
   Context: throw new Error('Failed to delete receipt record'

üìÑ lib/featureFlags.ts:
   Line 79: "true"
   Context: {
  // Core features
  ai_gateway_enabled: process.env.EXPO_PUBLIC_AI_GATEWAY_ENABLED === 'true',
  enterprise_tier_enabled: process.env.EXPO_PUBLIC_ENTERPRISE_TIER_ENABLED === 'true',
  principal_hub_enabled: process.env.EXPO_PUBLIC_PRINCIPAL_HUB_ENABLED === 'true',
  homework_v2_enabled: process.env.EXPO_PUBLIC_HOMEWORK_V2_ENABLED === 'true',
  resource_portal_enabled: process.env.EXPO_PUBLIC_RESOURCE_PORTAL_ENABLED === 'true',
  advanced_grading_enabled: process.env.EXPO_PUBLIC_ADVANCED_GRADING_ENABLED === 'true',
  contact_sales_enabled: process.env.EXPO_PUBLIC_CONTACT_SALES_ENABLED === 'true',
  
  // AI Features - default to enabled unless explicitly disabled via env
  ai_lesson_generation: AI_DEFAULT,
  ai_homework_help: AI_DEFAULT,
  ai_grading_assistance: AI_DEFAULT,
  ai_stem_activities: AI_DEFAULT,
  ai_progress_analysis: AI_DEFAULT,
  ai_insights: AI_DEFAULT,
  ai_streaming_enabled: false,
  
  // Collaboration Features
  principal_meeting_rooms: false,
  real_time_whiteboard: false,
  meeting_recordings: false,
  
  // Analytics and Monitoring - premium tier
  advanced_school_metrics: false,
  teacher_performance_analytics: false,
  parent_engagement_tracking: true, // basic tracking enabled
  
  // Subscription Features
  stripe_billing_enabled: false,
  seat_management_enabled: false,
  enterprise_trials: false,
  
  // Platform Features - honor project rules
  android_only_mode: process.env.EXPO_PUBLIC_PLATFORM_TESTING === 'android',
  admob_test_ids: process.env.EXPO_PUBLIC_ADMOB_TEST_IDS_ONLY === 'true',
  production_db_dev_mode: process.env.EXPO_PUBLIC_USE_PRODUCTION_DB_AS_DEV === 'true',
  
  // Language Features
  enableMultilanguageSupport: process.env.EXPO_PUBLIC_ENABLE_MULTILANGUAGE !== 'false',
  
  // Parent Dashboard Features (NEW) - Strategic Roadmap Implementation
  parent_hub_enabled: process.env.EXPO_PUBLIC_PARENT_HUB_ENABLED !== 'false', // enabled by default
  whatsapp_integration: false, // EMERGENCY KILL SWITCH - client credentials exposed
  offline_homework: process.env.EXPO_PUBLIC_OFFLINE_HOMEWORK !== 'false', // beta feature
  voice_notes: true, // core feature enabled
  progress_tracking: true, // core feature enabled
  in_app_messaging: true, // core feature enabled
  school_announcements: true, // core feature enabled
  parent_teacher_chat: true, // core communication feature
  homework_submissions_v2: process.env.EXPO_PUBLIC_HOMEWORK_V2_ENABLED === 'true',
  push_notifications: process.env.EXPO_PUBLIC_PUSH_NOTIFICATIONS !== 'false',
  multilingual_auto_translate: SA_TENANT_DEFAULT, // for SA multi-language support
  parent_engagement_metrics: true, // basic engagement tracking
  
  // WhatsApp Specific Features - SECURITY: DISABLED DUE TO CLIENT-SIDE SECRET EXPOSURE
  whatsapp_opt_in: false, // EMERGENCY KILL SWITCH - client credentials exposed
  whatsapp_webhook: false, // EMERGENCY KILL SWITCH - client credentials exposed
  whatsapp_send_receive: false, // EMERGENCY KILL SWITCH - client credentials exposed
  
  // Offline Features - Strategic "Offline-First" Architecture
  offline_sync_engine: process.env.EXPO_PUBLIC_OFFLINE_SYNC !== 'false', // core offline feature
  offline_media_storage: process.env.EXPO_PUBLIC_OFFLINE_MEDIA !== 'false',
  progressive_sync: process.env.EXPO_PUBLIC_PROGRESSIVE_SYNC !== 'false',
  
  // South African Localization - Strategic "SA-First" Approach
  sa_languages_support: SA_TENANT_DEFAULT, // English, Afrikaans, isiZulu, Sesotho
  caps_curriculum_alignment: SA_TENANT_DEFAULT, // CAPS = Curriculum and Assessment Policy Statement
  sa_payment_methods: SA_TENANT_DEFAULT, // EFT, Ozow, SnapScan
}

   Line 228: "Failed to fetch feature flags from PostHog, using defaults:"
   Context: {
    console.warn('Failed to fetch feature flags from PostHog, using defaults:', error);
    cachedFlags = { ...DEFAULT_FLAGS }

   Line 273: "Failed to identify user for feature flags:"
   Context: {
    console.warn('Failed to identify user for feature flags:', error);
  }

   Line 229: "Failed to fetch feature flags from PostHog, using defaults:"
   Context: console.warn('Failed to fetch feature flags from PostHog, using defaults:'

   Line 274: "Failed to identify user for feature flags:"
   Context: console.warn('Failed to identify user for feature flags:'

üìÑ lib/global-errors.ts:
   Line 14: "undefined"
   Context: {
  // React Native specific global error handling
  if (typeof global !== 'undefined' && global.ErrorUtils) {
    const defaultHandler = global.ErrorUtils.getGlobalHandler?.();

    global.ErrorUtils.setGlobalHandler?.((error, isFatal) => {
      // Always log critical unhandled errors
      logger.forceError('Unhandled JavaScript error', {
        message: error?.message || String(error),
        stack: error?.stack || 'No stack trace available',
        isFatal: Boolean(isFatal),
        timestamp: new Date().toISOString(),
      }

   Line 36: "error"
   Context: {
    window.addEventListener('error', (event) => {
      logger.forceError('Unhandled window error', {
        message: event.error?.message || event.message,
        stack: event.error?.stack,
        filename: event.filename,
        lineno: event.lineno,
        colno: event.colno,
        timestamp: new Date().toISOString(),
      }

   Line 48: "Unhandled promise rejection"
   Context: {
      logger.forceError('Unhandled promise rejection', {
        reason: event.reason?.message || String(event.reason),
        stack: event.reason?.stack,
        timestamp: new Date().toISOString(),
      }

   Line 23: "No stack trace available"
   Context: 'No stack trace available'

   Line 38: "Unhandled window error"
   Context: 'Unhandled window error'

   Line 49: "Unhandled promise rejection"
   Context: 'Unhandled promise rejection'

üìÑ lib/hooks/useProfileSettings.ts:
   Line 49: "Failed to update notification preferences:"
   Context: {
      console.error('Failed to update notification preferences:', error);
    }

   Line 71: "Failed to upload signature:"
   Context: {
      console.error('Failed to upload signature:', error);
    }

   Line 89: "Failed to delete signature:"
   Context: {
      console.error('Failed to delete signature:', error);
    }

   Line 102: "Failed to send test notification:"
   Context: {
  return useMutation({
    mutationFn: (req: TestNotificationRequest) =>
      ProfileSettingsService.sendTestNotification(req),
    onError: (error) => {
      console.error('Failed to send test notification:', error);
    }

   Line 50: "Failed to update notification preferences:"
   Context: console.error('Failed to update notification preferences:'

   Line 72: "Failed to upload signature:"
   Context: console.error('Failed to upload signature:'

   Line 90: "Failed to delete signature:"
   Context: console.error('Failed to delete signature:'

   Line 107: "Failed to send test notification:"
   Context: console.error('Failed to send test notification:'

üìÑ lib/hooks/useSchoolSettings.ts:
   Line 9: "missing"
   Context: {
  return useQuery({
    queryKey: SCHOOL_SETTINGS_KEYS.bySchool(schoolId || 'missing'),
    queryFn: () => {
      if (!schoolId) throw new Error('Missing schoolId');
      return SchoolSettingsService.get(schoolId);
    }

   Line 22: "Missing schoolId"
   Context: {
  const queryClient = useQueryClient();
  return useMutation({
    mutationFn: (updates: Partial<SchoolSettings>) => {
      if (!schoolId) throw new Error('Missing schoolId');
      return SchoolSettingsService.update(schoolId, updates);
    }

   Line 13: "Missing schoolId"
   Context: 'Missing schoolId'

   Line 13: "Missing schoolId"
   Context: 'Missing schoolId'

   Line 13: "Missing schoolId"
   Context: throw new Error('Missing schoolId'

   Line 13: "Missing schoolId"
   Context: throw new Error('Missing schoolId'

üìÑ lib/hooks/useSeatLimits.ts:
   Line 29: "t retry permission errors
      if (error instanceof Error && "
   Context: {
  const queryClient = useQueryClient();

  // Fetch current seat limits
  const limitsQuery = useQuery({
    queryKey: SEAT_QUERY_KEYS.limits,
    queryFn: SeatService.getSeatLimits,
    staleTime: 30 * 1000, // Consider data stale after 30 seconds
    gcTime: 5 * 60 * 1000, // Keep in cache for 5 minutes
    retry: (failureCount, error) => {
      // Don't retry permission errors
      if (error instanceof Error && 'code' in error) {
        const seatError = error as SeatManagementError;
        if (seatError.code === 'PERMISSION_DENIED') {
          return false;
        }

   Line 64: "Assignment Failed"
   Context: {
      let title = 'Assignment Failed';
      let message = 'Failed to assign teacher seat.';
      
      switch (error.code) {
        case 'LIMIT_EXCEEDED':
          title = 'Seat Limit Reached';
          message = 'No teacher seats available for your current plan. Consider upgrading your subscription.';
          break;
        case 'PERMISSION_DENIED':
          title = 'Permission Denied';
          message = 'Only principals can assign teacher seats.';
          break;
        case 'USER_NOT_FOUND':
          title = 'Invalid Teacher';
          message = 'The selected user must be a teacher in your school.';
          break;
        case 'ALREADY_ASSIGNED':
          title = 'Already Assigned';
          message = 'This teacher already has an active seat.';
          break;
        default:
          message = error.message || 'An unexpected error occurred.';
      }

   Line 108: "Revocation Failed"
   Context: {
      let title = 'Revocation Failed';
      let message = 'Failed to revoke teacher seat.';
      
      switch (error.code) {
        case 'PERMISSION_DENIED':
          title = 'Permission Denied';
          message = 'Only principals can revoke teacher seats.';
          break;
        case 'NO_ACTIVE_SEAT':
          title = 'No Active Seat';
          message = 'This teacher does not have an active seat to revoke.';
          break;
        default:
          message = error.message || 'An unexpected error occurred.';
      }

   Line 165: "t retry permission errors
      if (error instanceof Error && "
   Context: {
  const seatsQuery = useQuery({
    queryKey: SEAT_QUERY_KEYS.seats,
    queryFn: SeatService.listTeacherSeats,
    staleTime: 60 * 1000, // Consider data stale after 1 minute
    gcTime: 5 * 60 * 1000, // Keep in cache for 5 minutes
    retry: (failureCount, error) => {
      // Don't retry permission errors
      if (error instanceof Error && 'code' in error) {
        const seatError = error as SeatManagementError;
        if (seatError.code === 'PERMISSION_DENIED') {
          return false;
        }

   Line 90: "Seat assignment error:"
   Context: console.error('Seat assignment error:'

   Line 126: "Seat revocation error:"
   Context: console.error('Seat revocation error:'

   Line 65: "Assignment Failed"
   Context: 'Assignment Failed'

   Line 70: "Seat Limit Reached"
   Context: 'Seat Limit Reached'

   Line 74: "Permission Denied"
   Context: 'Permission Denied'

   Line 78: "Invalid Teacher"
   Context: 'Invalid Teacher'

   Line 82: "Already Assigned"
   Context: 'Already Assigned'

   Line 109: "Revocation Failed"
   Context: 'Revocation Failed'

   Line 74: "Permission Denied"
   Context: 'Permission Denied'

   Line 118: "No Active Seat"
   Context: 'No Active Seat'

üìÑ lib/i18n.ts:
   Line 205: "Failed to change language:"
   Context: {
    console.error('Failed to change language:', error);
  }

   Line 206: "Failed to change language:"
   Context: console.error('Failed to change language:'

   Line 48: "IsiZulu"
   Context: 'IsiZulu'

   Line 54: "IsiXhosa"
   Context: 'IsiXhosa'

   Line 56: "SiSwati"
   Context: 'SiSwati'

   Line 57: "IsiNdebele"
   Context: 'IsiNdebele'

üìÑ lib/i18n/securityMessages.ts:
   Line 37: "Validation failed"
   Context: {
  const fallbacks: Record<string, string> = {
    validation_failed: 'Validation failed',
    content_type_required: 'Content-Type must be application/json',
    request_too_large: options?.maxSize 
      ? `Request too large. Maximum size is ${options.maxSize}

   Line 39: "Validation failed"
   Context: 'Validation failed'

   Line 43: "Request too large"
   Context: 'Request too large'

   Line 46: "Invalid query parameters"
   Context: 'Invalid query parameters'

   Line 47: "Authentication required"
   Context: 'Authentication required'

   Line 48: "Invalid or expired authentication token"
   Context: 'Invalid or expired authentication token'

   Line 49: "Insufficient permissions"
   Context: 'Insufficient permissions'

   Line 55: "Internal security error"
   Context: 'Internal security error'

   Line 58: "Security error occurred"
   Context: 'Security error occurred'

üìÑ lib/lazy-loading.tsx:
   Line 30: "Loading..."
   Context: { 
  message = 'Loading...' 
}

   Line 62: "Failed to load component"
   Context: {error.message || 'Failed to load component'}

   Line 167: "Lazy component error"
   Context: {
    logger.error('Lazy component error', { error, errorInfo }

   Line 239: "financial_dashboard"
   Context: {
    chunkName: 'financial_dashboard',
    fallback: () => <DashLoadingIndicator message="Loading Financial Dashboard..." />,
  }

   Line 248: "petty_cash"
   Context: {
    chunkName: 'petty_cash',
    fallback: () => <DashLoadingIndicator message="Loading Petty Cash..." />,
  }

   Line 257: "ai_homework_grader"
   Context: {
    chunkName: 'ai_homework_grader',
    preload: true, // Pre-load since it's commonly used
    fallback: () => <DashLoadingIndicator message="Loading AI Grader..." />,
  }

   Line 267: "lesson_generator"
   Context: {
    chunkName: 'lesson_generator',
    preload: true,
    fallback: () => <DashLoadingIndicator message="Loading Lesson Generator..." />,
  }

   Line 277: "analytics_dashboard"
   Context: {
    chunkName: 'analytics_dashboard',
    fallback: () => <DashLoadingIndicator message="Loading Analytics..." />,
  }

   Line 241: "Loading Financial Dashboard..."
   Context: message="Loading Financial Dashboard..."

   Line 250: "Loading Petty Cash..."
   Context: message="Loading Petty Cash..."

   Line 260: "Loading AI Grader..."
   Context: message="Loading AI Grader..."

   Line 270: "Loading Lesson Generator..."
   Context: message="Loading Lesson Generator..."

   Line 279: "Loading Analytics..."
   Context: message="Loading Analytics..."

   Line 62: "Failed to load component"
   Context: 'Failed to load component'

   Line 168: "Lazy component error"
   Context: 'Lazy component error'

üìÑ lib/logger.ts:
   Line 99: "Error occurred:"
   Context: {
  if (isDevelopment || isTest) {
    // Development: show detailed error information
    logger.error('Error occurred:', error);
    return error?.message || 'An error occurred';
  }

   Line 104: "Something went wrong. Please try again."
   Context: {
    // Production: show user-friendly message and optionally report to analytics
    const safeMessage = userMessage || 'Something went wrong. Please try again.';
    
    // TODO: Report to crash analytics (Sentry, Crashlytics, etc.)
    // crashlytics().recordError(error);
    
    return safeMessage;
  }

   Line 103: "An error occurred"
   Context: 'An error occurred'

üìÑ lib/models/Assignment.ts:
   Line 204: "Title is required"
   Context: {
  title: z.string()
    .min(1, 'Title is required')
    .max(255, 'Title must be less than 255 characters'),
  
  description: z.string()
    .max(2000, 'Description must be less than 2000 characters')
    .optional(),
  
  instructions: z.string()
    .max(10000, 'Instructions must be less than 10000 characters')
    .optional(),
  
  course_id: z.string().uuid('Invalid course ID'),
  
  assignment_type: AssignmentTypeSchema,
  
  max_points: z.number()
    .min(0, 'Max points must be non-negative')
    .max(10000, 'Max points cannot exceed 10000')
    .default(100),
  
  due_at: z.string()
    .datetime('Invalid due date format')
    .optional(),
  
  available_from: z.string()
    .datetime('Invalid available from date format')
    .default(() => new Date().toISOString()),
  
  available_until: z.string()
    .datetime('Invalid available until date format')
    .optional(),
  
  allow_late_submissions: z.boolean().default(true),
  
  late_penalty_percent: z.number()
    .min(0, 'Late penalty cannot be negative')
    .max(100, 'Late penalty cannot exceed 100%')
    .default(0),
  
  max_attempts: z.number()
    .min(1, 'Must allow at least 1 attempt')
    .max(10, 'Cannot allow more than 10 attempts')
    .default(1),
  
  attachments: z.array(AssignmentAttachmentSchema).default([]),
  
  metadata: z.record(z.string(), z.any()).default({}

   Line 262: "Due date must be after available from date"
   Context: {
  message: 'Due date must be after available from date',
  path: ['due_at']
}

   Line 271: "Available until date must be after available from date"
   Context: {
  message: 'Available until date must be after available from date',
  path: ['available_until']
}

   Line 427: "Total attachment size exceeds 100MB"
   Context: {
    errors.push('Total attachment size exceeds 100MB');
  }

   Line 457: "Due Soon"
   Context: { label: 'Due Soon', color: 'yellow', icon: '‚ö†Ô∏è' }

   Line 206: "Title is required"
   Context: 'Title is required'

   Line 217: "Invalid course ID"
   Context: 'Invalid course ID'

   Line 227: "Invalid due date format"
   Context: 'Invalid due date format'

   Line 231: "Invalid available from date format"
   Context: 'Invalid available from date format'

   Line 235: "Invalid available until date format"
   Context: 'Invalid available until date format'

   Line 241: "Late penalty cannot be negative"
   Context: 'Late penalty cannot be negative'

   Line 263: "Due date must be after available from date"
   Context: 'Due date must be after available from date'

   Line 272: "Available until date must be after available from date"
   Context: 'Available until date must be after available from date'

   Line 442: "Lab Assignment"
   Context: 'Lab Assignment'

   Line 457: "Due Soon"
   Context: 'Due Soon'

üìÑ lib/models/Course.ts:
   Line 154: "Course title is required"
   Context: {
  title: z
    .string()
    .min(1, 'Course title is required')
    .max(255, 'Course title must be less than 255 characters'),
  description: z
    .string()
    .max(2000, 'Description must be less than 2000 characters')
    .optional(),
  course_code: z
    .string()
    .max(20, 'Course code must be less than 20 characters')
    .regex(/^[A-Z0-9-_]*$/, 'Course code can only contain uppercase letters, numbers, hyphens, and underscores')
    .optional(),
  max_students: z
    .number()
    .int()
    .positive('Maximum students must be a positive number')
    .max(1000, 'Maximum students cannot exceed 1000')
    .optional(),
  start_date: z
    .string()
    .regex(/^\d{4}

   Line 189: "End date must be after start date"
   Context: {
  message: 'End date must be after start date',
  path: ['end_date'],
}

   Line 195: "Course title is required"
   Context: {
  title: z
    .string()
    .min(1, 'Course title is required')
    .max(255, 'Course title must be less than 255 characters')
    .optional(),
  description: z
    .string()
    .max(2000, 'Description must be less than 2000 characters')
    .optional()
    .nullable(),
  course_code: z
    .string()
    .max(20, 'Course code must be less than 20 characters')
    .regex(/^[A-Z0-9-_]*$/, 'Course code can only contain uppercase letters, numbers, hyphens, and underscores')
    .optional()
    .nullable(),
  is_active: z.boolean().optional(),
  max_students: z
    .number()
    .int()
    .positive('Maximum students must be a positive number')
    .max(1000, 'Maximum students cannot exceed 1000')
    .optional()
    .nullable(),
  join_code_expires_at: z
    .string()
    .datetime('Invalid datetime format for join code expiry')
    .optional()
    .nullable(),
  start_date: z
    .string()
    .regex(/^\d{4}

   Line 189: "End date must be after start date"
   Context: {
  message: 'End date must be after start date',
  path: ['end_date'],
}

   Line 248: "Join code must be at least 6 characters"
   Context: {
  join_code: z
    .string()
    .min(6, 'Join code must be at least 6 characters')
    .max(12, 'Join code must be less than 12 characters')
    .regex(/^[A-Z0-9]+$/, 'Join code can only contain uppercase letters and numbers'),
}

   Line 257: "Page must be at least 1"
   Context: {
  page: z
    .string()
    .optional()
    .transform((val) => val ? parseInt(val, 10) : 1)
    .refine((val) => val >= 1, { message: 'Page must be at least 1' }

   Line 267: "Limit must be between 1 and 100"
   Context: { 
      message: 'Limit must be between 1 and 100' 
    }

   Line 301: "Invalid course ID format"
   Context: {
  courseId: z.string().uuid('Invalid course ID format'),
}

   Line 306: "Invalid student ID format"
   Context: {
  studentId: z.string().uuid('Invalid student ID format'),
}

   Line 342: "ABCDEFGHIJKLMNPQRSTUVWXYZ123456789"
   Context: {
  const chars = 'ABCDEFGHIJKLMNPQRSTUVWXYZ123456789'; // Removed O, 0 for clarity
  let result = '';
  for (let i = 0; i < 8; i++) {
    result += chars.charAt(Math.floor(Math.random() * chars.length));
  }

   Line 372: "No students"
   Context: {
  if (!course.enrollment_count) return 'No students';
  if (!course.max_students) return `${course.enrollment_count}

   Line 157: "Course title is required"
   Context: 'Course title is required'

   Line 171: "Maximum students must be a positive number"
   Context: 'Maximum students must be a positive number'

   Line 190: "End date must be after start date"
   Context: 'End date must be after start date'

   Line 157: "Course title is required"
   Context: 'Course title is required'

   Line 171: "Maximum students must be a positive number"
   Context: 'Maximum students must be a positive number'

   Line 222: "Invalid datetime format for join code expiry"
   Context: 'Invalid datetime format for join code expiry'

   Line 190: "End date must be after start date"
   Context: 'End date must be after start date'

   Line 253: "Join code can only contain uppercase letters and numbers"
   Context: 'Join code can only contain uppercase letters and numbers'

   Line 280: "Invalid instructor ID format"
   Context: 'Invalid instructor ID format'

   Line 284: "Invalid organization ID format"
   Context: 'Invalid organization ID format'

   Line 302: "Invalid course ID format"
   Context: 'Invalid course ID format'

   Line 307: "Invalid student ID format"
   Context: 'Invalid student ID format'

   Line 373: "No students"
   Context: 'No students'

   Line 378: "Nearly full"
   Context: 'Nearly full'

üìÑ lib/models/Grade.ts:
   Line 208: "A (90-100)"
   Context: {
  total_grades: number;
  published_grades: number;
  draft_grades: number;
  average_percentage: number;
  median_percentage: number;
  grade_distribution: Record<LetterGrade, number>;
  percentage_distribution: {
    'A (90-100)': number;
    'B (80-89)': number;
    'C (70-79)': number;
    'D (60-69)': number;
    'F (0-59)': number;
  }

   Line 293: "Invalid submission ID"
   Context: {
  submission_id: z.string().uuid('Invalid submission ID'),
  
  points_earned: z.number()
    .min(0, 'Points earned must be non-negative'),
  
  points_possible: z.number()
    .min(0.1, 'Points possible must be greater than 0')
    .max(10000, 'Points possible cannot exceed 10000'),
  
  letter_grade: LetterGradeSchema.optional(),
  
  feedback: z.string()
    .max(10000, 'Feedback must be less than 10000 characters')
    .optional(),
  
  rubric_scores: z.record(z.string(), RubricScoreSchema).default({}

   Line 323: "Points earned cannot exceed points possible"
   Context: {
  message: 'Points earned cannot exceed points possible',
  path: ['points_earned']
}

   Line 329: "Points earned must be non-negative"
   Context: {
  points_earned: z.number()
    .min(0, 'Points earned must be non-negative')
    .optional(),
  
  points_possible: z.number()
    .min(0.1, 'Points possible must be greater than 0')
    .max(10000, 'Points possible cannot exceed 10000')
    .optional(),
  
  letter_grade: LetterGradeSchema.optional(),
  
  feedback: z.string()
    .max(10000, 'Feedback must be less than 10000 characters')
    .optional(),
  
  rubric_scores: z.record(z.string(), RubricScoreSchema).optional(),
  
  ai_assistance_used: z.boolean().optional(),
  
  ai_suggestions: z.record(z.string(), z.any()).optional(),
  
  is_final: z.boolean().optional(),
  
  is_published: z.boolean().optional(),
  
  metadata: z.record(z.string(), z.any()).optional(),
}

   Line 323: "Points earned cannot exceed points possible"
   Context: {
  message: 'Points earned cannot exceed points possible',
  path: ['points_earned']
}

   Line 512: "AI Assisted"
   Context: {
    parts.push('AI Assisted');
  }

   Line 541: "Points earned seems unreasonably high"
   Context: {
      errors.push('Points earned seems unreasonably high');
    }

   Line 294: "Invalid submission ID"
   Context: 'Invalid submission ID'

   Line 324: "Points earned cannot exceed points possible"
   Context: 'Points earned cannot exceed points possible'

   Line 324: "Points earned cannot exceed points possible"
   Context: 'Points earned cannot exceed points possible'

   Line 396: "At least one grade is required"
   Context: 'At least one grade is required'

   Line 513: "AI Assisted"
   Context: 'AI Assisted'

   Line 542: "Points earned seems unreasonably high"
   Context: 'Points earned seems unreasonably high'

üìÑ lib/models/Submission.ts:
   Line 207: "Invalid assignment ID"
   Context: {
  assignment_id: z.string().uuid('Invalid assignment ID'),
  
  content: z.string()
    .max(50000, 'Content must be less than 50000 characters')
    .optional(),
  
  attachments: z.array(SubmissionAttachmentSchema).default([]),
  
  submission_type: SubmissionTypeSchema,
  
  is_draft: z.boolean().default(false),
  
  ai_assistance_used: z.boolean().default(false),
  
  ai_assistance_details: z.record(z.string(), z.any()).default({}

   Line 236: "Content or attachments required for non-draft submissions"
   Context: {
  message: 'Content or attachments required for non-draft submissions',
  path: ['content']
}

   Line 242: "Content must be less than 50000 characters"
   Context: {
  content: z.string()
    .max(50000, 'Content must be less than 50000 characters')
    .optional(),
  
  attachments: z.array(SubmissionAttachmentSchema).optional(),
  
  submission_type: SubmissionTypeSchema.optional(),
  
  is_draft: z.boolean().optional(),
  
  ai_assistance_used: z.boolean().optional(),
  
  ai_assistance_details: z.record(z.string(), z.any()).optional(),
  
  metadata: z.record(z.string(), z.any()).optional(),
}

   Line 362: "Assignment is no longer accepting submissions"
   Context: {
    const availableUntil = new Date(assignment.available_until);
    if (now > availableUntil) {
      errors.push('Assignment is no longer accepting submissions');
    }

   Line 370: "Late submissions are not allowed for this assignment"
   Context: {
    const dueDate = new Date(assignment.due_at);
    if (now > dueDate) {
      errors.push('Late submissions are not allowed for this assignment');
    }

   Line 462: "Total attachment size exceeds 500MB"
   Context: {
    errors.push('Total attachment size exceeds 500MB');
  }

   Line 494: "AI Assisted"
   Context: {
    parts.push('AI Assisted');
  }

   Line 509: "0 Bytes"
   Context: {
  if (bytes === 0) return '0 Bytes';
  
  const k = 1024;
  const sizes = ['Bytes', 'KB', 'MB', 'GB'];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  
  return parseFloat((bytes / Math.pow(k, i)).toFixed(2)) + ' ' + sizes[i];
}

   Line 536: "Not Submitted"
   Context: {
  not_submitted: { label: 'Not Submitted', color: 'gray', icon: '‚≠ï' }

   Line 542: "Needs Revision"
   Context: { label: 'Needs Revision', color: 'red', icon: 'üîÑ' }

   Line 208: "Invalid assignment ID"
   Context: 'Invalid assignment ID'

   Line 365: "Assignment is no longer accepting submissions"
   Context: 'Assignment is no longer accepting submissions'

   Line 373: "Late submissions are not allowed for this assignment"
   Context: 'Late submissions are not allowed for this assignment'

   Line 495: "AI Assisted"
   Context: 'AI Assisted'

   Line 524: "File Upload"
   Context: 'File Upload'

   Line 526: "Mixed Content"
   Context: 'Mixed Content'

   Line 537: "Not Submitted"
   Context: 'Not Submitted'

   Line 542: "Needs Revision"
   Context: 'Needs Revision'

üìÑ lib/monitoring.ts:
   Line 132: "Monitoring: No Sentry DSN provided, skipping initialization"
   Context: {
  if (started) return;
  started = true;

  const dsn = process.env.EXPO_PUBLIC_SENTRY_DSN;
  if (!dsn) {
    if (__DEV__) {
      console.log('Monitoring: No Sentry DSN provided, skipping initialization');
    }

   Line 157: "Monitoring: Sentry initialized successfully"
   Context: {
      console.log('Monitoring: Sentry initialized successfully');
    }

   Line 160: "Monitoring: Failed to initialize Sentry"
   Context: {
    console.warn('Monitoring: Failed to initialize Sentry', error);
  }

   Line 165: "android"
   Context: {
  if (started) return;
  started = true;

  // Only start monitoring on Android during testing phase
  const flags = getFeatureFlagsSync();
  if (flags.android_only_mode && Platform.OS !== 'android') {
    console.log('Monitoring disabled: Android-only mode active, current platform:', Platform.OS);
    return;
  }

   Line 197: "true"
   Context: {
      // Keep quiet unless debug mode is explicitly enabled
      if (process.env.EXPO_PUBLIC_DEBUG_MODE === 'true') {
        console.warn('Sentry initialization skipped or failed:', error);
      }

   Line 203: "true"
   Context: {
    if (process.env.EXPO_PUBLIC_DEBUG_MODE === 'true') {
      console.log('Sentry disabled (missing DSN or disabled by env).');
    }

   Line 227: "Failed to initialize PostHog:"
   Context: {
      console.error('Failed to initialize PostHog:', error);
    }

   Line 276: "true"
   Context: {
    if (process.env.EXPO_PUBLIC_DEBUG_MODE === 'true') {
      console.error('Failed to report error:', reportingError);
    }

   Line 321: "true"
   Context: {
    if (process.env.EXPO_PUBLIC_DEBUG_MODE === 'true') {
      console.error('Failed to track performance:', error);
    }

   Line 139: "Monitoring: No Sentry DSN provided, skipping initialization"
   Context: console.log('Monitoring: No Sentry DSN provided, skipping initialization'

   Line 158: "Monitoring: Sentry initialized successfully"
   Context: console.log('Monitoring: Sentry initialized successfully'

   Line 161: "Monitoring: Failed to initialize Sentry"
   Context: console.warn('Monitoring: Failed to initialize Sentry'

   Line 196: "Sentry initialized"
   Context: console.log('Sentry initialized'

   Line 200: "Sentry initialization skipped or failed:"
   Context: console.warn('Sentry initialization skipped or failed:'

   Line 205: "Sentry disabled (missing DSN or disabled by env)."
   Context: console.log('Sentry disabled (missing DSN or disabled by env).'

   Line 228: "Failed to initialize PostHog:"
   Context: console.error('Failed to initialize PostHog:'

   Line 278: "Failed to report error:"
   Context: console.error('Failed to report error:'

   Line 323: "Failed to track performance:"
   Context: console.error('Failed to track performance:'

   Line 196: "Sentry initialized"
   Context: 'Sentry initialized'

üìÑ lib/navigation.ts:
   Line 31: "Navigation back failed:"
   Context: {
    console.error('Navigation back failed:', error);
    // Last resort - go to root
    router.replace('/');
  }

   Line 45: "Navigation to main dashboard failed:"
   Context: {
    console.error('Navigation to main dashboard failed:', error);
    // Try alternative approach
    if (typeof window !== 'undefined') {
      window.location.href = '/';
    }

   Line 177: "s an error checking canGoBack, assume we can"
   Context: {
    // If there's an error checking canGoBack, assume we can't
    console.debug('Error checking canGoBack:', error);
    canGoBack = false;
  }

   Line 32: "Navigation back failed:"
   Context: console.error('Navigation back failed:'

   Line 46: "Navigation to main dashboard failed:"
   Context: console.error('Navigation to main dashboard failed:'

üìÑ lib/navigation/debugRouter.ts:
   Line 3: "Unmatched Route"
   Context: "Unmatched Route"

üìÑ lib/navigation/navigationInterceptor.ts:
   Line 95: "Could not determine user context for fallback:"
   Context: {
    console.debug('Could not determine user context for fallback:', error);
  }

   Line 4: "Unmatched Route"
   Context: "Unmatched Route"

üìÑ lib/navigation/safeRouter.ts:
   Line 3: "Unmatched Route"
   Context: "Unmatched Route"

üìÑ lib/notifications.ts:
   Line 31: "t support notifications should return null
  if (Platform.OS === "
   Context: {
  // Web or emulators/devices that don't support notifications should return null
  if (Platform.OS === 'web' || !Device.isDevice) return null

  // Android 8+ requires channel configuration for predictable behavior
  if (Platform.OS === 'android') {
    await Notifications.setNotificationChannelAsync('default', {
      name: 'General',
      importance: Notifications.AndroidImportance.DEFAULT,
      vibrationPattern: [0, 250, 250, 250],
      lightColor: '#FF231F7C',
    }

   Line 58: "FirebaseApp"
   Context: {
    // Firebase/FCM not configured - gracefully skip in dev mode
    if (error?.message?.includes('FirebaseApp') || error?.message?.includes('FCM')) {
      console.log('[Push Registration] FCM not configured - skipping (dev mode)')
      return null
    }

   Line 110: "[Push Registration] Failed to get push token - permissions denied"
   Context: {
      console.log('[Push Registration] Failed to get push token - permissions denied')
      return { status: 'denied', reason: 'permissions_denied', message: 'Push notifications not permitted' }

   Line 162: "Push device deregistration failed:"
   Context: {
    console.debug('Push device deregistration failed:', error)
  }

   Line 60: "FirebaseApp"
   Context: 'FirebaseApp'

   Line 112: "Push notifications not permitted"
   Context: 'Push notifications not permitted'

üìÑ lib/notify.ts:
   Line 83: "subscription_pending_payment"
   Context: {
  return dispatch('subscription_pending_payment', {
    preschool_id,
    subscription_id,
    custom_payload: { 
      plan_name,
      action_required: 'Complete payment to activate subscription',
      payment_deadline: new Date(Date.now() + 7 * 24 * 60 * 60 * 1000).toISOString() // 7 days
    }

   Line 89: "Complete payment to activate subscription"
   Context: 'Complete payment to activate subscription'

üìÑ lib/payments.ts:
   Line 42: "Failed to start checkout"
   Context: {
      return {
        error: error.message || 'Failed to start checkout'
      }

   Line 48: "No response from checkout service"
   Context: { error: 'No response from checkout service' }

   Line 50: "Failed to start checkout"
   Context: {
    return {
      error: e?.message || 'Failed to start checkout'
    }

   Line 44: "Failed to start checkout"
   Context: 'Failed to start checkout'

   Line 48: "No response from checkout service"
   Context: 'No response from checkout service'

   Line 44: "Failed to start checkout"
   Context: 'Failed to start checkout'

üìÑ lib/popUpload.ts:
   Line 62: "File does not exist"
   Context: {
  try {
    // Get file info
    const fileInfo = await FileSystem.getInfoAsync(fileUri);
    
    if (!fileInfo.exists) {
      return {
        isValid: false,
        errors: ['File does not exist'],
      }

   Line 110: "proof_of_payment"
   Context: {
      if (uploadType === 'proof_of_payment') {
        errors.push('Only PDF and image files (JPG, PNG) are allowed for payment receipts');
      }

   Line 113: "Only image files (JPG, PNG, WebP) are allowed for progress pictures"
   Context: {
        errors.push('Only image files (JPG, PNG, WebP) are allowed for progress pictures');
      }

   Line 128: "Invalid image file"
   Context: {
          errors.push('Invalid image file');
        }

   Line 131: "Invalid or corrupted image file"
   Context: {
        errors.push('Invalid or corrupted image file');
      }

   Line 142: "Failed to validate file"
   Context: {
    return {
      isValid: false,
      errors: ['Failed to validate file'],
    }

   Line 191: "Image compression failed:"
   Context: {
    console.error('Image compression failed:', error);
    return null;
  }

   Line 223: "Starting POP file upload:"
   Context: {
  try {
    console.log('Starting POP file upload:', { uploadType, fileUri, originalFileName }

   Line 241: "image/jpeg"
   Context: {
      const compressed = await compressImageIfNeeded(fileUri, finalFileSize);
      if (compressed) {
        uploadUri = compressed.uri;
        finalFileSize = compressed.fileSize;
        finalFileType = 'image/jpeg'; // Compressed to JPEG
        console.log('Image compressed:', { originalSize: validation.fileSize, newSize: finalFileSize }

   Line 294: "POP upload error:"
   Context: {
    console.error('POP upload error:', error);
    return {
      success: false,
      error: error instanceof Error ? error.message : 'Unknown upload error',
    }

   Line 344: "Failed to delete POP file:"
   Context: {
      console.error('Failed to delete POP file:', error);
      return false;
    }

   Line 350: "Error deleting POP file:"
   Context: {
    console.error('Error deleting POP file:', error);
    return false;
  }

   Line 359: "0 B"
   Context: {
  if (bytes === 0) return '0 B';
  
  const k = 1024;
  const sizes = ['B', 'KB', 'MB', 'GB'];
  const i = Math.floor(Math.log(bytes) / Math.log(k));
  
  return `${parseFloat((bytes / Math.pow(k, i)).toFixed(1))}

   Line 192: "Image compression failed:"
   Context: console.error('Image compression failed:'

   Line 225: "Starting POP file upload:"
   Context: console.log('Starting POP file upload:'

   Line 247: "Image compressed:"
   Context: console.log('Image compressed:'

   Line 285: "POP file uploaded successfully:"
   Context: console.log('POP file uploaded successfully:'

   Line 295: "POP upload error:"
   Context: console.error('POP upload error:'

   Line 345: "Failed to delete POP file:"
   Context: console.error('Failed to delete POP file:'

   Line 351: "Error deleting POP file:"
   Context: console.error('Error deleting POP file:'

   Line 70: "File does not exist"
   Context: 'File does not exist'

   Line 129: "Invalid image file"
   Context: 'Invalid image file'

   Line 132: "Invalid or corrupted image file"
   Context: 'Invalid or corrupted image file'

   Line 145: "Failed to validate file"
   Context: 'Failed to validate file'

   Line 298: "Unknown upload error"
   Context: 'Unknown upload error'

üìÑ lib/rbac.ts:
   Line 17: "parent"
   Context: {
  parent: { level: 1, name: 'parent', display: 'Parent' }

   Line 19: "teacher"
   Context: { level: 2, name: 'teacher', display: 'Teacher' }

   Line 20: "principal"
   Context: { level: 3, name: 'principal', display: 'Principal' }

   Line 21: "principal_admin"
   Context: { level: 3, name: 'principal_admin', display: 'Principal/Admin' }

   Line 22: "super_admin"
   Context: { level: 4, name: 'super_admin', display: 'Super Admin' }

   Line 600: "Attempting to fetch profile for authenticated user:"
   Context: {
  try {
    log('Attempting to fetch profile for authenticated user:', userId);
    
    // SECURITY: Validate the requester identity as best as possible
    // Try multiple sources for current authenticated identity
    let session: any = null;
    let sessionUserId: string | null = null;
    let storedSession: import('@/lib/sessionManager').UserSession | null = null;
    
    // Try stored session first (faster and more reliable after sign-in)
    log('[Profile] Checking stored session first...');
    try {
      storedSession = await getCurrentSession();
      if (storedSession?.user_id) {
        sessionUserId = storedSession.user_id;
        log('[Profile] Stored session result: SUCCESS, user:', sessionUserId);
        // Construct a minimal session object from stored data
        session = {
          user: { id: storedSession.user_id, email: storedSession.email }

   Line 650: "[Profile] Trying getSession() as last resort..."
   Context: {
      log('[Profile] Trying getSession() as last resort...');
      try {
        const sessionPromise = assertSupabase().auth.getSession();
        const timeoutPromise = new Promise((_, reject) => 
          setTimeout(() => reject(new Error('Session fetch timeout')), 3000)
        );
        const result = await Promise.race([sessionPromise, timeoutPromise]) as any;
        session = result?.data?.session;
        sessionUserId = session?.user?.id ?? null;
        log('[Profile] getSession() result:', sessionUserId ? 'SUCCESS' : 'FAILED');
      }

   Line 667: "User ID mismatch - cannot fetch profile for different user"
   Context: {
      logError('User ID mismatch - cannot fetch profile for different user');
      reportError(new Error('Profile fetch attempted for different user'), {
        requestedUserId: userId,
        sessionUserId,
      }

   Line 704: "RPC get_my_profile succeeded"
   Context: {
      profile = rpcProfile as any;
      debug('RPC get_my_profile succeeded');
    }

   Line 707: "RPC get_my_profile failed or returned null"
   Context: {
      profileError = rpcError;
      debug('RPC get_my_profile failed or returned null');
      
      // Try the direct bypass function as a test
      try {
        const { data: directProfile }

   Line 717: "Using direct profile as fallback"
   Context: {
          profile = directProfile as any;
          debug('Using direct profile as fallback');
        }

   Line 721: "Direct profile fetch failed:"
   Context: {
        debug('Direct profile fetch failed:', directError);
      }

   Line 726: "s not the common "
   Context: {
      // Only log an error if it's not the common "no rows" case
      if (!(profileError && (profileError as any).code === 'PGRST116')) {
        logError('Failed to fetch basic user profile:', profileError);
      }

   Line 735: "SECURITY: Fallback profile not allowed - returning null"
   Context: {
        logError('SECURITY: Fallback profile not allowed - returning null');
        return null;
      }

   Line 748: "unknown@example.com"
   Context: {
        id: session.user.id, // Use actual authenticated user ID
        email: session.user.email || 'unknown@example.com', // Use actual email
        role: 'parent' as any, // DEFAULT TO LOWEST PRIVILEGE ROLE
        first_name: 'User',
        last_name: '',
        avatar_url: undefined,
        organization_id: undefined,
        organization_name: undefined,
        seat_status: 'inactive' as any, // INACTIVE by default for security
        capabilities: [], // NO CAPABILITIES by default
        created_at: new Date().toISOString(),
        last_login_at: new Date().toISOString(),
      }

   Line 863: "Organization resolution failed:"
   Context: {
        warn('Organization resolution failed:', e);
      }

   Line 952: "Error in fetchEnhancedUserProfile:"
   Context: {
    logError('Error in fetchEnhancedUserProfile:', error);
    reportError(new Error('Failed to fetch enhanced user profile'), {
      userId,
      error,
    }

   Line 974: "Authentication validation failed in error handler"
   Context: {
      logError('Authentication validation failed in error handler');
      return null; // No fallback for unauthenticated users
    }

   Line 983: "unknown@example.com"
   Context: {
      id: session.user.id,
      email: session.user.email || 'unknown@example.com',
      role: 'parent' as any, // LOWEST PRIVILEGE ROLE
      first_name: 'User',
      last_name: '',
      avatar_url: undefined,
      organization_id: undefined,
      organization_name: undefined,
      seat_status: 'inactive' as any, // INACTIVE for security
      capabilities: [], // NO CAPABILITIES
      created_at: new Date().toISOString(),
      last_login_at: new Date().toISOString(),
    }

   Line 1014: "Unknown error"
   Context: {
      user_id: sessionUserId,
      email: session?.user?.email || storedSession?.email,
      error: error instanceof Error ? error.message : 'Unknown error',
      timestamp: new Date().toISOString(),
    }

   Line 1045: "Failed to audit permission change"
   Context: {
    reportError(new Error('Failed to audit permission change'), {
      userId,
      action,
      details,
      error,
    }

   Line 1074: "Cannot create secure database without valid user profile"
   Context: {
  const context = createSecurityContext(profile);
  if (!context) {
    throw new Error('Cannot create secure database without valid user profile');
  }

   Line 1021: "SECURITY: Using error fallback profile with minimal permissions"
   Context: console.warn('SECURITY: Using error fallback profile with minimal permissions'

   Line 22: "Super Admin"
   Context: 'Super Admin'

   Line 655: "Session fetch timeout"
   Context: 'Session fetch timeout'

   Line 669: "Profile fetch attempted for different user"
   Context: 'Profile fetch attempted for different user'

   Line 696: "RPC timeout"
   Context: 'RPC timeout'

   Line 716: "Direct profile fetch completed"
   Context: 'Direct profile fetch completed'

   Line 719: "Using direct profile as fallback"
   Context: 'Using direct profile as fallback'

   Line 784: "Successfully fetched profile"
   Context: 'Successfully fetched profile'

   Line 954: "Failed to fetch enhanced user profile"
   Context: 'Failed to fetch enhanced user profile'

   Line 975: "Authentication validation failed in error handler"
   Context: 'Authentication validation failed in error handler'

   Line 1017: "Unknown error"
   Context: 'Unknown error'

   Line 1046: "Failed to audit permission change"
   Context: 'Failed to audit permission change'

   Line 1077: "Cannot create secure database without valid user profile"
   Context: 'Cannot create secure database without valid user profile'

   Line 655: "Session fetch timeout"
   Context: new Error('Session fetch timeout'

   Line 669: "Profile fetch attempted for different user"
   Context: new Error('Profile fetch attempted for different user'

   Line 696: "RPC timeout"
   Context: new Error('RPC timeout'

   Line 954: "Failed to fetch enhanced user profile"
   Context: new Error('Failed to fetch enhanced user profile'

   Line 1046: "Failed to audit permission change"
   Context: new Error('Failed to audit permission change'

   Line 1077: "Cannot create secure database without valid user profile"
   Context: throw new Error('Cannot create secure database without valid user profile'

üìÑ lib/rbac/types.ts:
   Line 160: "Dynamic loading not available"
   Context: 'Dynamic loading not available'

   Line 160: "Dynamic loading not available"
   Context: throw new Error('Dynamic loading not available'

üìÑ lib/rbac/validate.ts:
   Line 39: "Metadata has version"
   Context: {
    const meta = RolesPermissions.metadata;
    
    this.check(
      !!meta.version,
      'Metadata has version',
      { version: meta.version }

   Line 61: "Has exactly 3 roles (admin, instructor, student)"
   Context: {
    const roles = getAllRoles();
    
    this.check(
      roles.length === 3,
      'Has exactly 3 roles (admin, instructor, student)',
      { roles, count: roles.length }

   Line 131: "Has sufficient permissions defined"
   Context: {
    const permissions = getAllPermissions();
    const summary = getPermissionsSummary();
    
    this.check(
      permissions.length > 20,
      'Has sufficient permissions defined',
      { count: permissions.length }

   Line 172: "admin"
   Context: {
    // Admin should have manage_users (admin-only)
    this.check(
      roleHasPermission('admin', 'manage_users'),
      'Admin has manage_users permission'
    );

    this.check(
      !roleHasPermission('instructor', 'manage_users'),
      'Instructor does NOT have manage_users permission'
    );

    this.check(
      !roleHasPermission('student', 'manage_users'),
      'Student does NOT have manage_users permission'
    );

    // Both Admin and Instructor should have manage_courses
    this.check(
      roleHasPermission('admin', 'manage_courses'),
      'Admin has manage_courses permission'
    );

    this.check(
      roleHasPermission('instructor', 'manage_courses'),
      'Instructor has manage_courses permission'
    );

    this.check(
      !roleHasPermission('student', 'manage_courses'),
      'Student does NOT have manage_courses permission'
    );

    // All roles should have view_courses
    this.check(
      roleHasPermission('admin', 'view_courses'),
      'Admin has view_courses permission'
    );

    this.check(
      roleHasPermission('instructor', 'view_courses'),
      'Instructor has view_courses permission'
    );

    this.check(
      roleHasPermission('student', 'view_courses'),
      'Student has view_courses permission'
    );

    // Only students should have submit_assignments
    this.check(
      !roleHasPermission('admin', 'submit_assignments'),
      'Admin does NOT have submit_assignments permission'
    );

    this.check(
      !roleHasPermission('instructor', 'submit_assignments'),
      'Instructor does NOT have submit_assignments permission'
    );

    this.check(
      roleHasPermission('student', 'submit_assignments'),
      'Student has submit_assignments permission'
    );
  }

   Line 44: "Metadata has version"
   Context: 'Metadata has version'

   Line 50: "Metadata has description"
   Context: 'Metadata has description'

   Line 56: "Metadata has current date"
   Context: 'Metadata has current date'

   Line 72: "Has admin role"
   Context: 'Has admin role'

   Line 78: "Has instructor role"
   Context: 'Has instructor role'

   Line 84: "Has student role"
   Context: 'Has student role'

   Line 114: "Admin has global scope"
   Context: 'Admin has global scope'

   Line 120: "Instructor has organization scope"
   Context: 'Instructor has organization scope'

   Line 126: "Student has self scope"
   Context: 'Student has self scope'

   Line 137: "Has sufficient permissions defined"
   Context: 'Has sufficient permissions defined'

   Line 161: "Admin has more permissions than Instructor"
   Context: 'Admin has more permissions than Instructor'

   Line 167: "Instructor has more permissions than Student"
   Context: 'Instructor has more permissions than Student'

üìÑ lib/revenuecat/RevenueCatProvider.tsx:
   Line 30: "RevenueCat Provider: Initialized successfully"
   Context: {
    const initialize = async () => {
      try {
        setIsLoading(true);
        setError(null);
        
        await initializeRevenueCat();
        setInitialized(true);
        
        console.log('RevenueCat Provider: Initialized successfully');
      }

   Line 40: "RevenueCat Provider: Failed to initialize:"
   Context: {
        console.error('RevenueCat Provider: Failed to initialize:', err);
        setError(err.message || 'Failed to initialize RevenueCat');
      }

   Line 69: "RevenueCat Provider: Auth handling error:"
   Context: {
        console.error('RevenueCat Provider: Auth handling error:', err);
        setError(err.message || 'Auth handling error');
      }

   Line 79: "RevenueCat Provider: Customer info updated"
   Context: {
    if (!initialized) return;

    Purchases.addCustomerInfoUpdateListener((info) => {
      console.log('RevenueCat Provider: Customer info updated');
      setCustomerInfo(info);
    }

   Line 97: "RevenueCat Provider: Failed to refresh customer info:"
   Context: {
      console.error('RevenueCat Provider: Failed to refresh customer info:', err);
      setError(err.message || 'Failed to refresh customer info');
    }

   Line 39: "RevenueCat Provider: Initialized successfully"
   Context: console.log('RevenueCat Provider: Initialized successfully'

   Line 41: "RevenueCat Provider: Failed to initialize:"
   Context: console.error('RevenueCat Provider: Failed to initialize:'

   Line 70: "RevenueCat Provider: Auth handling error:"
   Context: console.error('RevenueCat Provider: Auth handling error:'

   Line 83: "RevenueCat Provider: Customer info updated"
   Context: console.log('RevenueCat Provider: Customer info updated'

   Line 98: "RevenueCat Provider: Failed to refresh customer info:"
   Context: console.error('RevenueCat Provider: Failed to refresh customer info:'

   Line 42: "Failed to initialize RevenueCat"
   Context: 'Failed to initialize RevenueCat'

   Line 71: "Auth handling error"
   Context: 'Auth handling error'

   Line 99: "Failed to refresh customer info"
   Context: 'Failed to refresh customer info'

üìÑ lib/revenuecat/config.ts:
   Line 60: "Failed to initialize RevenueCat:"
   Context: {
    console.error('Failed to initialize RevenueCat:', error);
  }

   Line 80: "Failed to identify RevenueCat user:"
   Context: {
    console.error('Failed to identify RevenueCat user:', error);
  }

   Line 88: "RevenueCat user logged out"
   Context: {
  try {
    await Purchases.logOut();
    console.log('RevenueCat user logged out');
  }

   Line 92: "Failed to logout RevenueCat user:"
   Context: {
    console.error('Failed to logout RevenueCat user:', error);
  }

   Line 104: "Failed to get customer info:"
   Context: {
    console.error('Failed to get customer info:', error);
    return null;
  }

   Line 122: "Failed to check feature access:"
   Context: {
    console.error('Failed to check feature access:', error);
    return false;
  }

   Line 145: "Failed to get active subscription tier:"
   Context: {
    console.error('Failed to get active subscription tier:', error);
    return 'free';
  }

   Line 158: "Failed to get available products:"
   Context: {
    console.error('Failed to get available products:', error);
    return null;
  }

   Line 178: "Purchase failed:"
   Context: {
    console.error('Purchase failed:', error);
    
    // Handle different error types
    if (error.userCancelled) {
      return {
        success: false,
        error: 'Purchase cancelled by user',
      }

   Line 189: "Purchase failed"
   Context: {
      success: false,
      error: error.message || 'Purchase failed',
    }

   Line 210: "Restore purchases failed:"
   Context: {
    console.error('Restore purchases failed:', error);
    return {
      success: false,
      error: error.message || 'Failed to restore purchases',
    }

   Line 249: "Failed to fetch customer info"
   Context: {
        if (isMounted) {
          setError(err.message || 'Failed to fetch customer info');
        }

   Line 59: "RevenueCat initialized successfully"
   Context: console.log('RevenueCat initialized successfully'

   Line 61: "Failed to initialize RevenueCat:"
   Context: console.error('Failed to initialize RevenueCat:'

   Line 79: "RevenueCat user identified:"
   Context: console.log('RevenueCat user identified:'

   Line 81: "Failed to identify RevenueCat user:"
   Context: console.error('Failed to identify RevenueCat user:'

   Line 91: "RevenueCat user logged out"
   Context: console.log('RevenueCat user logged out'

   Line 93: "Failed to logout RevenueCat user:"
   Context: console.error('Failed to logout RevenueCat user:'

   Line 105: "Failed to get customer info:"
   Context: console.error('Failed to get customer info:'

   Line 123: "Failed to check feature access:"
   Context: console.error('Failed to check feature access:'

   Line 146: "Failed to get active subscription tier:"
   Context: console.error('Failed to get active subscription tier:'

   Line 159: "Failed to get available products:"
   Context: console.error('Failed to get available products:'

   Line 179: "Purchase failed:"
   Context: console.error('Purchase failed:'

   Line 211: "Restore purchases failed:"
   Context: console.error('Restore purchases failed:'

   Line 59: "RevenueCat initialized successfully"
   Context: 'RevenueCat initialized successfully'

   Line 91: "RevenueCat user logged out"
   Context: 'RevenueCat user logged out'

   Line 185: "Purchase cancelled by user"
   Context: 'Purchase cancelled by user'

   Line 191: "Purchase failed"
   Context: 'Purchase failed'

   Line 214: "Failed to restore purchases"
   Context: 'Failed to restore purchases'

   Line 251: "Failed to fetch customer info"
   Context: 'Failed to fetch customer info'

üìÑ lib/roleUtils.ts:
   Line 60: "Super Admin"
   Context: 'Super Admin'

   Line 64: "Principal Admin"
   Context: 'Principal Admin'

üìÑ lib/routeAfterLogin.ts:
   Line 60: "Fallback #1 (profiles table) lookup failed"
   Context: {
      console.debug('Fallback #1 (profiles table) lookup failed', e);
    }

   Line 78: "No user ID provided for post-login routing"
   Context: {
  try {
    const userId = user?.id;
    if (!userId) {
      console.error('No user ID provided for post-login routing');
      router.replace('/(auth)/sign-in');
      return;
    }

   Line 90: "[ROUTE DEBUG] Fetching enhanced profile for user:"
   Context: {
      console.log('[ROUTE DEBUG] Fetching enhanced profile for user:', userId);
      
      // Add timeout protection to prevent infinite hanging
      const fetchPromise = fetchEnhancedUserProfile(userId);
      const timeoutPromise = new Promise((_, reject) => 
        setTimeout(() => reject(new Error('Profile fetch timeout')), 10000)
      );
      
      try {
        enhancedProfile = await Promise.race([fetchPromise, timeoutPromise]) as any;
        console.log('[ROUTE DEBUG] fetchEnhancedUserProfile result:', enhancedProfile ? 'SUCCESS' : 'NULL');
        if (enhancedProfile) {
          console.log('[ROUTE DEBUG] Profile role:', enhancedProfile.role);
          console.log('[ROUTE DEBUG] Profile org_id:', enhancedProfile.organization_id);
        }

   Line 112: "Failed to fetch user profile for routing - routing to profiles-gate for setup"
   Context: {
      console.error('Failed to fetch user profile for routing - routing to profiles-gate for setup');
      track('edudash.auth.route_failed', {
        user_id: userId,
        reason: 'no_profile',
      }

   Line 176: "Navigation failed, falling back to profiles-gate:"
   Context: {
      console.error('Navigation failed, falling back to profiles-gate:', navigationError);
      // Fallback to profile gate to ensure user can access the app
      router.replace('/profiles-gate');
    }

   Line 181: "Post-login routing failed"
   Context: {
    reportError(new Error('Post-login routing failed'), {
      userId: user?.id,
      error,
    }

   Line 195: "[ROUTE DEBUG] ==> Determining route for user"
   Context: {
  let role = normalizeRole(profile.role);
  
  console.log('[ROUTE DEBUG] ==> Determining route for user');
  console.log('[ROUTE DEBUG] Original role:', profile.role, '-> normalized:', role);
  console.log('[ROUTE DEBUG] Profile organization_id:', profile.organization_id);
  console.log('[ROUTE DEBUG] Profile seat_status:', profile.seat_status);
  console.log('[ROUTE DEBUG] Profile capabilities:', profile.capabilities);
  console.log('[ROUTE DEBUG] Profile hasCapability(access_mobile_app):', profile.hasCapability('access_mobile_app'));
  
  // Tenant kind detection (best-effort)
  const orgKind = (profile as any)?.organization_membership?.organization_kind
    || (profile as any)?.organization_kind
    || (profile as any)?.tenant_kind
    || 'school'; // default
  const isSkillsLike = ['skills', 'tertiary', 'org'].includes(String(orgKind).toLowerCase());
  
  // Safeguard: If role is null/undefined, route to sign-in/profile setup
  if (!role || role === null) {
    console.warn('User role is null, routing to sign-in');
    return { path: '/(auth)/sign-in' }

   Line 268: "No user profile found"
   Context: {
  if (!profile) {
    return {
      hasAccess: false,
      reason: 'No user profile found',
      suggestedAction: 'Complete your profile setup',
    }

   Line 277: "Mobile app access not enabled"
   Context: {
    return {
      hasAccess: false,
      reason: 'Mobile app access not enabled',
      suggestedAction: 'Contact your administrator',
    }

   Line 28: "Unrecognized role:"
   Context: console.warn('Unrecognized role:'

   Line 82: "No user ID provided for post-login routing"
   Context: console.error('No user ID provided for post-login routing'

   Line 113: "Failed to fetch user profile for routing - routing to profiles-gate for setup"
   Context: console.error('Failed to fetch user profile for routing - routing to profiles-gate for setup'

   Line 169: "Navigating to route:"
   Context: console.log('Navigating to route:'

   Line 177: "Navigation failed, falling back to profiles-gate:"
   Context: console.error('Navigation failed, falling back to profiles-gate:'

   Line 214: "User role is null, routing to sign-in"
   Context: console.warn('User role is null, routing to sign-in'

   Line 96: "Profile fetch timeout"
   Context: 'Profile fetch timeout'

   Line 272: "No user profile found"
   Context: 'No user profile found'

   Line 273: "Complete your profile setup"
   Context: 'Complete your profile setup'

   Line 280: "Mobile app access not enabled"
   Context: 'Mobile app access not enabled'

   Line 281: "Contact your administrator"
   Context: 'Contact your administrator'

   Line 96: "Profile fetch timeout"
   Context: new Error('Profile fetch timeout'

   Line 182: "Post-login routing failed"
   Context: new Error('Post-login routing failed'

üìÑ lib/security-config.ts:
   Line 29: "SECURITY: Maximum fallback usage exceeded for session"
   Context: {
    console.error('SECURITY: Maximum fallback usage exceeded for session');
    return false;
  }

   Line 30: "SECURITY: Maximum fallback usage exceeded for session"
   Context: console.error('SECURITY: Maximum fallback usage exceeded for session'

üìÑ lib/security.ts:
   Line 458: "Access denied: insufficient permissions"
   Context: {
  ACCESS_DENIED: 'Access denied: insufficient permissions',
  INVALID_ORG: 'Access denied: resource not in your organization',
  INACTIVE_SEAT: 'Access denied: seat not active',
  INVALID_ROLE: 'Access denied: invalid role for this operation',
  EXPIRED_SESSION: 'Access denied: session expired',
  RATE_LIMITED: 'Access denied: too many requests',
}

üìÑ lib/security/middleware.ts:
   Line 29: "X-Content-Type-Options"
   Context: {
  'X-Content-Type-Options': 'nosniff',
  'X-Frame-Options': 'DENY',
  'X-XSS-Protection': '1; mode=block',
  'Referrer-Policy': 'strict-origin-when-cross-origin',
  'Permissions-Policy': 'camera=(), microphone=(), geolocation=()',
  'Strict-Transport-Security': 'max-age=31536000; includeSubDomains',
}

   Line 41: "Too many authentication attempts, please try again later."
   Context: {
  auth: {
    windowMs: 15 * 60 * 1000, // 15 minutes
    maxRequests: 5, // 5 attempts per window
    message: 'Too many authentication attempts, please try again later.',
  }

   Line 47: "AI request rate limit exceeded. Please wait before making another request."
   Context: {
    windowMs: 60 * 1000, // 1 minute
    maxRequests: 10, // 10 AI requests per minute
    message: 'AI request rate limit exceeded. Please wait before making another request.',
  }

   Line 82: "Access-Control-Allow-Origin"
   Context: {
    'Access-Control-Allow-Origin': isOriginAllowed ? origin : 'null',
    'Access-Control-Allow-Methods': 'GET, POST, PUT, DELETE, OPTIONS',
    'Access-Control-Allow-Headers': 'Content-Type, Authorization, X-Requested-With',
    'Access-Control-Allow-Credentials': 'true',
    'Access-Control-Max-Age': '86400', // 24 hours
    ...SECURITY_HEADERS,
  }

   Line 108: "Content-Type"
   Context: {
      status,
      headers: {
        'Content-Type': 'application/json',
        ...createCORSHeaders(origin, environment),
        ...additionalHeaders,
      }

   Line 128: "Content-Type"
   Context: {
  return new Response(
    JSON.stringify(data),
    {
      status,
      headers: {
        'Content-Type': 'application/json',
        ...createCORSHeaders(origin, environment),
        ...additionalHeaders,
      }

üìÑ lib/security/rateLimiting.ts:
   Line 243: "X-RateLimit-Limit"
   Context: {
        'X-RateLimit-Limit': config.maxRequests.toString(),
        'X-RateLimit-Remaining': '0',
        'X-RateLimit-Reset': new Date(result.resetTime).toISOString(),
      }

   Line 249: "Retry-After"
   Context: {
        headers['Retry-After'] = result.retryAfter.toString();
      }

   Line 266: "X-RateLimit-Limit"
   Context: {
      success: true,
      headers: {
        'X-RateLimit-Limit': config.maxRequests.toString(),
        'X-RateLimit-Remaining': result.remaining.toString(),
        'X-RateLimit-Reset': new Date(result.resetTime).toISOString(),
      }

   Line 402: "Too many authentication attempts. Please try again later."
   Context: {
  // Authentication endpoints
  auth: createRateLimitMiddleware({
    windowMs: 15 * 60 * 1000, // 15 minutes
    maxRequests: 10,
    message: 'Too many authentication attempts. Please try again later.',
    progressivePenalty: true,
  }

   Line 412: "AI request rate limit exceeded. Please slow down your requests."
   Context: {
    windowMs: 60 * 1000, // 1 minute
    maxRequests: 20,
    message: 'AI request rate limit exceeded. Please slow down your requests.',
    progressivePenalty: false,
  }

   Line 428: "Upload rate limit exceeded. Please wait before uploading again."
   Context: {
    windowMs: 5 * 60 * 1000, // 5 minutes
    maxRequests: 10,
    message: 'Upload rate limit exceeded. Please wait before uploading again.',
    progressivePenalty: true,
  }

   Line 436: "Too many password reset attempts. Please try again later."
   Context: {
    windowMs: 60 * 60 * 1000, // 1 hour
    maxRequests: 3,
    message: 'Too many password reset attempts. Please try again later.',
    progressivePenalty: true,
  }

   Line 450: "X-RateLimit-Limit"
   Context: {
  return {
    ...headers,
    'X-RateLimit-Limit': '100', // Default, should be overridden
    'X-RateLimit-Remaining': result.remaining.toString(),
    'X-RateLimit-Reset': new Date(result.resetTime).toISOString(),
  }

üìÑ lib/security/rbac.ts:
   Line 166: "User not authenticated"
   Context: {
    return {
      allowed: false,
      reason: 'User not authenticated',
    }

   Line 174: "User role not found"
   Context: {
    return {
      allowed: false,
      user,
      profile,
      reason: 'User role not found',
    }

   Line 169: "User not authenticated"
   Context: 'User not authenticated'

   Line 179: "User role not found"
   Context: 'User role not found'

üìÑ lib/security/routeGuards.ts:
   Line 44: "Security validation failed"
   Context: {
        throw new Error('Security validation failed');
      }

   Line 71: "Protected route error:"
   Context: {
      console.error('Protected route error:', error);
      return new Response(JSON.stringify({ 
        error: 'Internal server error' 
      }

   Line 75: "Content-Type"
   Context: {
        status: 500,
        headers: { 'Content-Type': 'application/json' }

   Line 72: "Protected route error:"
   Context: console.error('Protected route error:'

   Line 45: "Security validation failed"
   Context: 'Security validation failed'

   Line 74: "Internal server error"
   Context: 'Internal server error'

   Line 45: "Security validation failed"
   Context: throw new Error('Security validation failed'

üìÑ lib/security/securityMiddleware.ts:
   Line 216: "Security middleware error:"
   Context: {
    console.error('Security middleware error:', error);
    const userLanguage = getUserLanguage(request);
    
    return {
      success: false,
      response: createSecureErrorResponse(
        getSecurityMessage('errors.internalSecurityError', { lng: userLanguage }

   Line 320: "Retry-After"
   Context: { 'Retry-After': loginCheck.retryAfter.toString() }

   Line 453: "Endpoint handler error:"
   Context: {
      console.error('Endpoint handler error:', error);
      const userLanguage = getUserLanguage(request);
      
      return createSecureErrorResponse(
        getSecurityMessage('errors.internalError', { lng: userLanguage }

   Line 217: "Security middleware error:"
   Context: console.error('Security middleware error:'

   Line 454: "Endpoint handler error:"
   Context: console.error('Endpoint handler error:'

üìÑ lib/security/testEndpoints.ts:
   Line 21: "This is a public endpoint"
   Context: {
    return new Response(JSON.stringify({
      success: true,
      message: 'This is a public endpoint',
      timestamp: new Date().toISOString(),
      rateLimit: 'Applied basic rate limiting',
    }

   Line 27: "Content-Type"
   Context: {
      headers: { 'Content-Type': 'application/json' }

   Line 37: "Authenticated user access"
   Context: {
    return new Response(JSON.stringify({
      success: true,
      message: 'Authenticated user access',
      user: {
        id: user?.id,
        email: user?.email,
        role: profile?.role,
      }

   Line 27: "Content-Type"
   Context: {
      headers: { 'Content-Type': 'application/json' }

   Line 57: "Admin access granted"
   Context: {
    return new Response(JSON.stringify({
      success: true,
      message: 'Admin access granted',
      user: {
        id: user?.id,
        role: profile?.role,
        permissions: profile?.capabilities || [],
      }

   Line 27: "Content-Type"
   Context: {
      headers: { 'Content-Type': 'application/json' }

   Line 80: "Instructor/Admin access granted"
   Context: {
    return new Response(
      JSON.stringify({
        success: true,
        message: 'Instructor/Admin access granted',
        user: {
          id: user?.id,
          role: profile?.role,
        }

   Line 95: "Content-Type"
   Context: {
        headers: { 'Content-Type': 'application/json' }

   Line 110: "Course created successfully"
   Context: {
    const courseData = data.body;

    return new Response(
      JSON.stringify({
        success: true,
        message: 'Course created successfully',
        course: {
          ...courseData,
          id: `course-${Date.now()}

   Line 95: "Content-Type"
   Context: {
        headers: { 'Content-Type': 'application/json' }

   Line 139: "AI features access granted"
   Context: {
    return new Response(
      JSON.stringify({
        success: true,
        message: 'AI features access granted',
        user: {
          id: user?.id,
          tier: (profile as any)?.aiTier || 'free',
        }

   Line 95: "Content-Type"
   Context: {
        headers: { 'Content-Type': 'application/json' }

   Line 95: "Content-Type"
   Context: {
        headers: { 'Content-Type': 'application/json' }

   Line 95: "Content-Type"
   Context: {
        headers: { 'Content-Type': 'application/json' }

   Line 95: "Content-Type"
   Context: {
        headers: { 'Content-Type': 'application/json' }

   Line 276: "Complex endpoint access granted"
   Context: {
      const requestData = data.body;

      return new Response(
        JSON.stringify({
          success: true,
          message: 'Complex endpoint access granted',
          request: requestData,
          user: {
            id: user?.id,
            role: profile?.role,
            permissions: (profile as any)?.capabilities || [],
          }

   Line 298: "Content-Type"
   Context: {
          headers: { 'Content-Type': 'application/json' }

   Line 324: "üõ°Ô∏è Security Middleware Demo"
   Context: {
  console.log('üõ°Ô∏è Security Middleware Demo');
  console.log('============================');

  // Test data
  const mockRequest = new Request('http://localhost:3000/api/test', {
    method: 'POST',
    headers: {
      'Content-Type': 'application/json',
      'Accept-Language': 'en-US,en;q=0.9',
    }

   Line 335: "Test Course"
   Context: {
      title: 'Test Course',
      description: 'This is a test course for demo',
      subject: 'Computer Science',
      grade_level: '10',
    }

   Line 343: "\n1. Testing public endpoint..."
   Context: {
    // Test public endpoint
    console.log('\n1. Testing public endpoint...');
    const publicResponse = await testEndpoints.public(mockRequest);
    console.log('Status:', publicResponse.status);
    console.log('Response:', await publicResponse.json());

    // Test authenticated endpoint (should fail without auth)
    console.log('\n2. Testing authenticated endpoint (should fail)...');
    const authResponse = await testEndpoints.authenticated(mockRequest);
    console.log('Status:', authResponse.status);
    console.log('Response:', await authResponse.json());

    console.log('\n‚úÖ Demo completed! Check the responses above.');
    console.log('üìù Note: Some endpoints may fail due to missing authentication.');
  }

   Line 358: "Demo error:"
   Context: {
    console.error('Demo error:', error);
  }

   Line 347: "Status:"
   Context: console.log('Status:'

   Line 348: "Response:"
   Context: console.log('Response:'

   Line 347: "Status:"
   Context: console.log('Status:'

   Line 348: "Response:"
   Context: console.log('Response:'

   Line 359: "Demo error:"
   Context: console.error('Demo error:'

   Line 24: "This is a public endpoint"
   Context: 'This is a public endpoint'

   Line 26: "Applied basic rate limiting"
   Context: 'Applied basic rate limiting'

   Line 40: "Authenticated user access"
   Context: 'Authenticated user access'

   Line 60: "Admin access granted"
   Context: 'Admin access granted'

   Line 116: "Course created successfully"
   Context: 'Course created successfully'

   Line 143: "AI features access granted"
   Context: 'AI features access granted'

   Line 170: "File upload successful"
   Context: 'File upload successful'

   Line 203: "Registration successful"
   Context: 'Registration successful'

   Line 238: "Login successful"
   Context: 'Login successful'

   Line 282: "Complex endpoint access granted"
   Context: 'Complex endpoint access granted'

   Line 336: "Test Course"
   Context: 'Test Course'

   Line 337: "This is a test course for demo"
   Context: 'This is a test course for demo'

   Line 338: "Computer Science"
   Context: 'Computer Science'

üìÑ lib/security/validation.ts:
   Line 74: "Validation failed"
   Context: {
    // Parse request body
    const body = await request.json();
    
    // Validate against schema
    const result = stripUnknown 
      ? (schema as any).strip().safeParse(body) 
      : schema.safeParse(body);
    
    if (!result.success) {
      // Format validation errors
      const formattedErrors = formatZodErrors(result.error);
      
      return {
        valid: false,
        response: createSecureErrorResponse(
          {
            message: 'Validation failed',
            errors: formattedErrors,
          }

   Line 102: "Error parsing request body:"
   Context: {
    console.error('Error parsing request body:', error);
    
    const userLanguage = getUserLanguage(request);
    return {
      valid: false,
      response: createSecureErrorResponse(
        getSecurityMessage(SECURITY_MESSAGE_KEYS.INVALID_JSON, { lng: userLanguage }

   Line 180: "Invalid query parameters"
   Context: {
    const formattedErrors = formatZodErrors(result.error);
    
    return {
      valid: false,
      response: createSecureErrorResponse(
        {
          message: 'Invalid query parameters',
          errors: formattedErrors,
        }

   Line 220: "Invalid email format"
   Context: {
  /**
   * Login credentials validation
   */
  login: z.object({
    email: z.string().email('Invalid email format'),
    password: z.string().min(1, 'Password is required'),
  }

   Line 232: "Invalid email format"
   Context: {
    email: z.string().email('Invalid email format'),
    password: z
      .string()
      .min(12, 'Password must be at least 12 characters')
      .regex(/[a-z]/, 'Password must include a lowercase letter')
      .regex(/[A-Z]/, 'Password must include an uppercase letter')
      .regex(/[0-9]/, 'Password must include a number')
      .regex(/[^a-zA-Z0-9]/, 'Password must include a symbol'),
    firstName: z.string().min(1, 'First name is required'),
    lastName: z.string().min(1, 'Last name is required'),
  }

   Line 248: "Page must be at least 1"
   Context: {
    page: z
      .string()
      .optional()
      .transform((val) => (val ? parseInt(val, 10) : 1))
      .refine((val) => val >= 1, { message: 'Page must be at least 1' }

   Line 258: "Limit must be between 1 and 100"
   Context: {
        message: 'Limit must be between 1 and 100',
      }

   Line 280: "Title must be at least 3 characters"
   Context: {
    title: z.string().min(3, 'Title must be at least 3 characters'),
    description: z.string().min(10, 'Description must be at least 10 characters'),
    subject: z.string().min(2, 'Subject is required'),
    grade_level: z.string().min(1, 'Grade level is required'),
    metadata: z.record(z.string(), z.any()).optional(),
  }

   Line 291: "Valid join code is required"
   Context: {
    join_code: z.string().min(6, 'Valid join code is required'),
  }

   Line 103: "Error parsing request body:"
   Context: console.error('Error parsing request body:'

   Line 91: "Validation failed"
   Context: 'Validation failed'

   Line 187: "Invalid query parameters"
   Context: 'Invalid query parameters'

   Line 225: "Invalid email format"
   Context: 'Invalid email format'

   Line 226: "Password is required"
   Context: 'Password is required'

   Line 225: "Invalid email format"
   Context: 'Invalid email format'

   Line 237: "Password must include a lowercase letter"
   Context: 'Password must include a lowercase letter'

   Line 238: "Password must include an uppercase letter"
   Context: 'Password must include an uppercase letter'

   Line 239: "Password must include a number"
   Context: 'Password must include a number'

   Line 240: "Password must include a symbol"
   Context: 'Password must include a symbol'

   Line 241: "First name is required"
   Context: 'First name is required'

   Line 242: "Last name is required"
   Context: 'Last name is required'

   Line 283: "Subject is required"
   Context: 'Subject is required'

   Line 284: "Grade level is required"
   Context: 'Grade level is required'

   Line 292: "Valid join code is required"
   Context: 'Valid join code is required'

üìÑ lib/services/AssignmentService.ts:
   Line 53: "Insufficient permissions to create assignments"
   Context: {
    try {
      // Authorization check - only instructors and admins can create assignments
      if (![UserRole.INSTRUCTOR, UserRole.ADMIN].includes(userRole)) {
        return {
          success: false,
          error: 'Insufficient permissions to create assignments',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 73: "Course not found or inaccessible"
   Context: {
        return {
          success: false,
          error: 'Course not found or inaccessible',
          code: 'COURSE_NOT_FOUND'
        }

   Line 82: "Can only create assignments for your own courses"
   Context: {
        return {
          success: false,
          error: 'Can only create assignments for your own courses',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 91: "Cannot create assignments for inactive courses"
   Context: {
        return {
          success: false,
          error: 'Cannot create assignments for inactive courses',
          code: 'COURSE_INACTIVE'
        }

   Line 134: "Assignment creation error:"
   Context: {
        console.error('Assignment creation error:', error);
        return {
          success: false,
          error: 'Failed to create assignment',
          code: 'CREATION_FAILED'
        }

   Line 148: "Assignment service error:"
   Context: {
      console.error('Assignment service error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 188: "Assignment not found"
   Context: {
        return {
          success: false,
          error: 'Assignment not found',
          code: 'ASSIGNMENT_NOT_FOUND'
        }

   Line 204: "Insufficient permissions to view assignment"
   Context: {
        return {
          success: false,
          error: 'Insufficient permissions to view assignment',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 230: "Get assignment error:"
   Context: {
      console.error('Get assignment error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 331: "List assignments error:"
   Context: {
        console.error('List assignments error:', error);
        return {
          success: false,
          error: 'Failed to fetch assignments',
          code: 'FETCH_FAILED'
        }

   Line 366: "List assignments error:"
   Context: {
      console.error('List assignments error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 385: "Assignment not found"
   Context: {
    try {
      // Get assignment with course info for authorization
      const assignmentResult = await this.getAssignmentById(assignmentId, userId, userRole);
      if (!assignmentResult.success || !assignmentResult.data) {
        return {
          success: false,
          error: 'Assignment not found',
          code: 'ASSIGNMENT_NOT_FOUND'
        }

   Line 400: "Can only update your own assignments"
   Context: {
        return {
          success: false,
          error: 'Can only update your own assignments',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 408: "Students cannot update assignments"
   Context: {
        return {
          success: false,
          error: 'Students cannot update assignments',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 430: "assignment_type"
   Context: {
        // Prevent changes to critical fields after submissions exist
        const restrictedFields = ['assignment_type', 'max_points', 'max_attempts'];
        const hasRestrictedChanges = restrictedFields.some(field => 
          updates[field as keyof UpdateAssignmentRequest] !== undefined
        );
        
        if (hasRestrictedChanges) {
          return {
            success: false,
            error: 'Cannot modify assignment type, points, or attempts after submissions exist',
            code: 'ASSIGNMENT_HAS_SUBMISSIONS'
          }

   Line 454: "Assignment update error:"
   Context: {
        console.error('Assignment update error:', error);
        return {
          success: false,
          error: 'Failed to update assignment',
          code: 'UPDATE_FAILED'
        }

   Line 468: "Update assignment error:"
   Context: {
      console.error('Update assignment error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 486: "Assignment not found"
   Context: {
    try {
      // Get assignment for authorization
      const assignmentResult = await this.getAssignmentById(assignmentId, userId, userRole);
      if (!assignmentResult.success || !assignmentResult.data) {
        return {
          success: false,
          error: 'Assignment not found',
          code: 'ASSIGNMENT_NOT_FOUND'
        }

   Line 501: "Can only delete your own assignments"
   Context: {
        return {
          success: false,
          error: 'Can only delete your own assignments',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 509: "Students cannot delete assignments"
   Context: {
        return {
          success: false,
          error: 'Students cannot delete assignments',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 526: "Failed to archive assignment"
   Context: {
          return {
            success: false,
            error: 'Failed to archive assignment',
            code: 'DELETE_FAILED'
          }

   Line 540: "Failed to delete assignment"
   Context: {
          return {
            success: false,
            error: 'Failed to delete assignment',
            code: 'DELETE_FAILED'
          }

   Line 551: "Delete assignment error:"
   Context: {
      console.error('Delete assignment error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 597: "Failed to fetch assignment statistics"
   Context: {
        return {
          success: false,
          error: 'Failed to fetch assignment statistics',
          code: 'FETCH_FAILED'
        }

   Line 662: "Assignment stats error:"
   Context: {
      console.error('Assignment stats error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 803: "Submission stats error:"
   Context: {
      console.error('Submission stats error:', error);
      return { completionRate: 0, averageScore: 0 }

   Line 135: "Assignment creation error:"
   Context: console.error('Assignment creation error:'

   Line 149: "Assignment service error:"
   Context: console.error('Assignment service error:'

   Line 231: "Get assignment error:"
   Context: console.error('Get assignment error:'

   Line 332: "List assignments error:"
   Context: console.error('List assignments error:'

   Line 332: "List assignments error:"
   Context: console.error('List assignments error:'

   Line 455: "Assignment update error:"
   Context: console.error('Assignment update error:'

   Line 469: "Update assignment error:"
   Context: console.error('Update assignment error:'

   Line 552: "Delete assignment error:"
   Context: console.error('Delete assignment error:'

   Line 663: "Assignment stats error:"
   Context: console.error('Assignment stats error:'

   Line 804: "Submission stats error:"
   Context: console.error('Submission stats error:'

   Line 59: "Insufficient permissions to create assignments"
   Context: 'Insufficient permissions to create assignments'

   Line 76: "Course not found or inaccessible"
   Context: 'Course not found or inaccessible'

   Line 85: "Can only create assignments for your own courses"
   Context: 'Can only create assignments for your own courses'

   Line 94: "Cannot create assignments for inactive courses"
   Context: 'Cannot create assignments for inactive courses'

   Line 138: "Failed to create assignment"
   Context: 'Failed to create assignment'

   Line 152: "Internal server error"
   Context: 'Internal server error'

   Line 191: "Assignment not found"
   Context: 'Assignment not found'

   Line 207: "Insufficient permissions to view assignment"
   Context: 'Insufficient permissions to view assignment'

   Line 152: "Internal server error"
   Context: 'Internal server error'

   Line 335: "Failed to fetch assignments"
   Context: 'Failed to fetch assignments'

   Line 152: "Internal server error"
   Context: 'Internal server error'

   Line 191: "Assignment not found"
   Context: 'Assignment not found'

   Line 403: "Can only update your own assignments"
   Context: 'Can only update your own assignments'

   Line 411: "Students cannot update assignments"
   Context: 'Students cannot update assignments'

   Line 458: "Failed to update assignment"
   Context: 'Failed to update assignment'

   Line 152: "Internal server error"
   Context: 'Internal server error'

   Line 191: "Assignment not found"
   Context: 'Assignment not found'

   Line 504: "Can only delete your own assignments"
   Context: 'Can only delete your own assignments'

   Line 512: "Students cannot delete assignments"
   Context: 'Students cannot delete assignments'

   Line 529: "Failed to archive assignment"
   Context: 'Failed to archive assignment'

   Line 543: "Failed to delete assignment"
   Context: 'Failed to delete assignment'

   Line 152: "Internal server error"
   Context: 'Internal server error'

   Line 600: "Failed to fetch assignment statistics"
   Context: 'Failed to fetch assignment statistics'

   Line 152: "Internal server error"
   Context: 'Internal server error'

üìÑ lib/services/CourseService.ts:
   Line 59: "Error creating course:"
   Context: {
        console.error('Error creating course:', error);
        return {
          success: false,
          error: 'Failed to create course',
          code: 'COURSE_CREATE_ERROR',
        }

   Line 72: "Course creation error:"
   Context: {
      console.error('Course creation error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 122: "PGRST116"
   Context: {
        if (error.code === 'PGRST116') {
          return {
            success: false,
            error: 'Course not found',
            code: 'COURSE_NOT_FOUND',
          }

   Line 131: "Failed to fetch course"
   Context: {
          success: false,
          error: 'Failed to fetch course',
          code: 'COURSE_FETCH_ERROR',
        }

   Line 169: "Course fetch error:"
   Context: {
      console.error('Course fetch error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 271: "Error listing courses:"
   Context: {
        console.error('Error listing courses:', error);
        return {
          success: false,
          error: 'Failed to fetch courses',
          code: 'COURSES_FETCH_ERROR',
        }

   Line 328: "Course listing error:"
   Context: {
      console.error('Course listing error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 365: "Error updating course:"
   Context: {
        console.error('Error updating course:', error);
        return {
          success: false,
          error: 'Failed to update course',
          code: 'COURSE_UPDATE_ERROR',
        }

   Line 378: "Course update error:"
   Context: {
      console.error('Course update error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 412: "Error deleting course:"
   Context: {
        console.error('Error deleting course:', error);
        return {
          success: false,
          error: 'Failed to delete course',
          code: 'COURSE_DELETE_ERROR',
        }

   Line 422: "Course deletion error:"
   Context: {
      console.error('Course deletion error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 450: "Course not found or inactive"
   Context: {
        return {
          success: false,
          error: 'Course not found or inactive',
          code: 'COURSE_NOT_FOUND',
        }

   Line 458: "Invalid join code"
   Context: {
        return {
          success: false,
          error: 'Invalid join code',
          code: 'INVALID_JOIN_CODE',
        }

   Line 467: "Join code has expired"
   Context: {
        return {
          success: false,
          error: 'Join code has expired',
          code: 'JOIN_CODE_EXPIRED',
        }

   Line 483: "Student is already enrolled in this course"
   Context: {
        if (existingEnrollment.is_active) {
          return {
            success: false,
            error: 'Student is already enrolled in this course',
            code: 'ALREADY_ENROLLED',
          }

   Line 503: "Failed to reactivate enrollment"
   Context: {
            return {
              success: false,
              error: 'Failed to reactivate enrollment',
              code: 'ENROLLMENT_ERROR',
            }

   Line 523: "Course is at maximum capacity"
   Context: {
          return {
            success: false,
            error: 'Course is at maximum capacity',
            code: 'COURSE_FULL',
          }

   Line 541: "Error creating enrollment:"
   Context: {
        console.error('Error creating enrollment:', enrollError);
        return {
          success: false,
          error: 'Failed to enroll student',
          code: 'ENROLLMENT_ERROR',
        }

   Line 551: "Student enrollment error:"
   Context: {
      console.error('Student enrollment error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 609: "Error fetching course roster:"
   Context: {
        console.error('Error fetching course roster:', error);
        return {
          success: false,
          error: 'Failed to fetch course roster',
          code: 'ROSTER_FETCH_ERROR',
        }

   Line 622: "Course roster error:"
   Context: {
      console.error('Course roster error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 651: "Removed by instructor/admin"
   Context: {
          is_active: false,
          dropped_at: new Date().toISOString(),
          drop_reason: reason || 'Removed by instructor/admin',
        }

   Line 660: "Error removing student from course:"
   Context: {
        console.error('Error removing student from course:', error);
        return {
          success: false,
          error: 'Failed to remove student from course',
          code: 'ENROLLMENT_REMOVAL_ERROR',
        }

   Line 670: "Student removal error:"
   Context: {
      console.error('Student removal error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 709: "Error regenerating join code:"
   Context: {
        console.error('Error regenerating join code:', error);
        return {
          success: false,
          error: 'Failed to regenerate join code',
          code: 'JOIN_CODE_UPDATE_ERROR',
        }

   Line 725: "Join code regeneration error:"
   Context: {
      console.error('Join code regeneration error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 758: "Error fetching course stats:"
   Context: {
        console.error('Error fetching course stats:', error);
        return {
          success: false,
          error: 'Failed to fetch course statistics',
          code: 'STATS_FETCH_ERROR',
        }

   Line 788: "Course stats error:"
   Context: {
      console.error('Course stats error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 815: "Course not found"
   Context: {
        return {
          success: false,
          error: 'Course not found',
          code: 'COURSE_NOT_FOUND',
        }

   Line 848: "Insufficient permissions"
   Context: {
        success: false,
        error: 'Insufficient permissions',
        code: 'INSUFFICIENT_PERMISSIONS',
      }

   Line 853: "Course authority check error:"
   Context: {
      console.error('Course authority check error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR',
      }

   Line 60: "Error creating course:"
   Context: console.error('Error creating course:'

   Line 73: "Course creation error:"
   Context: console.error('Course creation error:'

   Line 130: "Error fetching course:"
   Context: console.error('Error fetching course:'

   Line 170: "Course fetch error:"
   Context: console.error('Course fetch error:'

   Line 272: "Error listing courses:"
   Context: console.error('Error listing courses:'

   Line 329: "Course listing error:"
   Context: console.error('Course listing error:'

   Line 366: "Error updating course:"
   Context: console.error('Error updating course:'

   Line 379: "Course update error:"
   Context: console.error('Course update error:'

   Line 413: "Error deleting course:"
   Context: console.error('Error deleting course:'

   Line 423: "Course deletion error:"
   Context: console.error('Course deletion error:'

   Line 542: "Error creating enrollment:"
   Context: console.error('Error creating enrollment:'

   Line 552: "Student enrollment error:"
   Context: console.error('Student enrollment error:'

   Line 610: "Error fetching course roster:"
   Context: console.error('Error fetching course roster:'

   Line 623: "Course roster error:"
   Context: console.error('Course roster error:'

   Line 661: "Error removing student from course:"
   Context: console.error('Error removing student from course:'

   Line 671: "Student removal error:"
   Context: console.error('Student removal error:'

   Line 710: "Error regenerating join code:"
   Context: console.error('Error regenerating join code:'

   Line 726: "Join code regeneration error:"
   Context: console.error('Join code regeneration error:'

   Line 759: "Error fetching course stats:"
   Context: console.error('Error fetching course stats:'

   Line 789: "Course stats error:"
   Context: console.error('Course stats error:'

   Line 854: "Course authority check error:"
   Context: console.error('Course authority check error:'

   Line 63: "Failed to create course"
   Context: 'Failed to create course'

   Line 76: "Internal server error"
   Context: 'Internal server error'

   Line 126: "Course not found"
   Context: 'Course not found'

   Line 133: "Failed to fetch course"
   Context: 'Failed to fetch course'

   Line 76: "Internal server error"
   Context: 'Internal server error'

   Line 275: "Failed to fetch courses"
   Context: 'Failed to fetch courses'

   Line 76: "Internal server error"
   Context: 'Internal server error'

   Line 369: "Failed to update course"
   Context: 'Failed to update course'

   Line 76: "Internal server error"
   Context: 'Internal server error'

   Line 416: "Failed to delete course"
   Context: 'Failed to delete course'

   Line 76: "Internal server error"
   Context: 'Internal server error'

   Line 453: "Course not found or inactive"
   Context: 'Course not found or inactive'

   Line 461: "Invalid join code"
   Context: 'Invalid join code'

   Line 470: "Join code has expired"
   Context: 'Join code has expired'

   Line 487: "Student is already enrolled in this course"
   Context: 'Student is already enrolled in this course'

   Line 506: "Failed to reactivate enrollment"
   Context: 'Failed to reactivate enrollment'

   Line 526: "Course is at maximum capacity"
   Context: 'Course is at maximum capacity'

   Line 545: "Failed to enroll student"
   Context: 'Failed to enroll student'

   Line 76: "Internal server error"
   Context: 'Internal server error'

   Line 613: "Failed to fetch course roster"
   Context: 'Failed to fetch course roster'

   Line 76: "Internal server error"
   Context: 'Internal server error'

   Line 664: "Failed to remove student from course"
   Context: 'Failed to remove student from course'

   Line 76: "Internal server error"
   Context: 'Internal server error'

   Line 713: "Failed to regenerate join code"
   Context: 'Failed to regenerate join code'

   Line 76: "Internal server error"
   Context: 'Internal server error'

   Line 762: "Failed to fetch course statistics"
   Context: 'Failed to fetch course statistics'

   Line 76: "Internal server error"
   Context: 'Internal server error'

   Line 126: "Course not found"
   Context: 'Course not found'

   Line 850: "Insufficient permissions"
   Context: 'Insufficient permissions'

   Line 76: "Internal server error"
   Context: 'Internal server error'

üìÑ lib/services/EducationalPDFService.ts:
   Line 27: "easy"
   Context: {
  title?: string;
  studentName?: string;
  dateCreated?: string;
  includeAnswerKey?: boolean;
  difficulty: 'easy' | 'medium' | 'hard';
  ageGroup: '3-4' | '4-5' | '5-6' | '6-7' | '7-8';
  colorMode: 'color' | 'blackwhite';
  paperSize: 'A4' | 'Letter';
  orientation: 'portrait' | 'landscape';
}

   Line 77: "professional"
   Context: {
  theme?: 'professional' | 'colorful' | 'minimalist';
  branding?: PDFBranding;
  paperSize?: 'A4' | 'Letter';
  orientation?: 'portrait' | 'landscape';
  enablePageNumbers?: boolean;
  enableWatermark?: boolean;
  enableTableOfContents?: boolean;
}

   Line 127: "Method not implemented."
   Context: {
    throw new Error('Method not implemented.');
  }

   Line 144: "Assignment worksheet generation failed:"
   Context: {
      console.error('Assignment worksheet generation failed:', error);
      Alert.alert('Error', 'Failed to generate worksheet PDF');
    }

   Line 163: "Math worksheet generation failed:"
   Context: {
      console.error('Math worksheet generation failed:', error);
      Alert.alert('Error', 'Failed to generate math worksheet PDF');
    }

   Line 182: "Reading worksheet generation failed:"
   Context: {
      console.error('Reading worksheet generation failed:', error);
      Alert.alert('Error', 'Failed to generate reading worksheet PDF');
    }

   Line 201: "Activity sheet generation failed:"
   Context: {
      console.error('Activity sheet generation failed:', error);
      Alert.alert('Error', 'Failed to generate activity sheet PDF');
    }

   Line 220: "Answer key generation failed:"
   Context: {
      console.error('Answer key generation failed:', error);
      Alert.alert('Error', 'Failed to generate answer key PDF');
    }

   Line 251: "Complete the following tasks."
   Context: {assignment.instructions || assignment.description || 'Complete the following tasks.'}

   Line 630: "Sample answer provided by teacher"
   Context: {question.correctAnswer || 'Sample answer provided by teacher'}

   Line 648: "Answer Key"
   Context: {this.getWorksheetHeader('Answer Key', options)}

   Line 811: "Web download trigger failed; returning data URI only."
   Context: {
          console.warn('Web download trigger failed; returning data URI only.', e);
        }

   Line 832: "PDF generation failed:"
   Context: {
      console.error('PDF generation failed:', error);
      throw error;
    }

   Line 1173: "#1a237e"
   Context: {
    const themes = {
      professional: {
        primaryColor: '#1a237e',
        secondaryColor: '#3949ab',
        accentColor: '#5c6bc0',
        backgroundColor: '#ffffff',
        textColor: '#212121',
        borderColor: '#e0e0e0',
        headingFont: 'Georgia, serif',
        bodyFont: 'Arial, sans-serif',
        sectionBg: '#f5f5f5',
      }

   Line 1186: "#1565c0"
   Context: {
        primaryColor: '#1565c0',
        secondaryColor: '#42a5f5',
        accentColor: '#ff9800',
        backgroundColor: '#ffffff',
        textColor: '#333333',
        borderColor: '#90caf9',
        headingFont: 'Comic Sans MS, cursive',
        bodyFont: 'Arial, sans-serif',
        sectionBg: '#e3f2fd',
      }

   Line 1197: "#000000"
   Context: {
        primaryColor: '#000000',
        secondaryColor: '#424242',
        accentColor: '#757575',
        backgroundColor: '#ffffff',
        textColor: '#212121',
        borderColor: '#bdbdbd',
        headingFont: 'Helvetica, Arial, sans-serif',
        bodyFont: 'Helvetica, Arial, sans-serif',
        sectionBg: '#fafafa',
      }

   Line 1312: "Page "
   Context: {options.enablePageNumbers ? `
      .document-footer::after {
        counter-increment: page;
        content: "Page " counter(page);
        display: block;
        margin-top: 8px;
      }

   Line 145: "Assignment worksheet generation failed:"
   Context: console.error('Assignment worksheet generation failed:'

   Line 164: "Math worksheet generation failed:"
   Context: console.error('Math worksheet generation failed:'

   Line 183: "Reading worksheet generation failed:"
   Context: console.error('Reading worksheet generation failed:'

   Line 202: "Activity sheet generation failed:"
   Context: console.error('Activity sheet generation failed:'

   Line 221: "Answer key generation failed:"
   Context: console.error('Answer key generation failed:'

   Line 812: "Web download trigger failed; returning data URI only."
   Context: console.warn('Web download trigger failed; returning data URI only.'

   Line 833: "PDF generation failed:"
   Context: console.error('PDF generation failed:'

   Line 146: "Failed to generate worksheet PDF"
   Context: 'Failed to generate worksheet PDF'

   Line 165: "Failed to generate math worksheet PDF"
   Context: 'Failed to generate math worksheet PDF'

   Line 184: "Failed to generate reading worksheet PDF"
   Context: 'Failed to generate reading worksheet PDF'

   Line 203: "Failed to generate activity sheet PDF"
   Context: 'Failed to generate activity sheet PDF'

   Line 222: "Failed to generate answer key PDF"
   Context: 'Failed to generate answer key PDF'

   Line 630: "Sample answer provided by teacher"
   Context: 'Sample answer provided by teacher'

   Line 648: "Answer Key"
   Context: 'Answer Key'

   Line 128: "Method not implemented."
   Context: throw new Error('Method not implemented.'

üìÑ lib/services/EducationalWorkflowService.ts:
   Line 129: "Course not found or access denied"
   Context: {
        return {
          success: false,
          errors: ['Course not found or access denied'],
          processed: 0,
          failed: studentIds.length
        }

   Line 227: "Auto enrollment workflow error:"
   Context: {
      console.error('Auto enrollment workflow error:', error);
      return {
        success: false,
        errors: [error.message],
        processed: 0,
        failed: studentIds.length
      }

   Line 288: "approved"
   Context: {
              status: approve ? 'approved' : 'rejected',
              processed_by: userId,
              processed_at: new Date().toISOString(),
              notes: approve ? 'Auto-approved via workflow' : 'Rejected via workflow'
            }

   Line 350: "Join request workflow error:"
   Context: {
      console.error('Join request workflow error:', error);
      return {
        success: false,
        errors: [error.message],
        processed: 0,
        failed: requestIds.length
      }

   Line 391: "No active enrollments found"
   Context: {
        return {
          success: true,
          warnings: ['No active enrollments found'],
          processed: 0,
          failed: 0
        }

   Line 458: "Grade aggregation workflow error:"
   Context: {
      console.error('Grade aggregation workflow error:', error);
      return {
        success: false,
        errors: [error.message],
        processed: 0,
        failed: 0
      }

   Line 511: "Course not found"
   Context: {
        return {
          success: false,
          errors: ['Course not found'],
          processed: 0,
          failed: 0
        }

   Line 577: "Progress tracking workflow error:"
   Context: {
      console.error('Progress tracking workflow error:', error);
      return {
        success: false,
        errors: [error.message],
        processed: 0,
        failed: 0
      }

   Line 619: "Assignment not found"
   Context: {
        return {
          success: false,
          errors: ['Assignment not found'],
          processed: 0,
          failed: 0
        }

   Line 642: "No students found in target groups"
   Context: {
        return {
          success: true,
          warnings: ['No students found in target groups'],
          processed: 0,
          failed: 0
        }

   Line 714: "Assignment distribution workflow error:"
   Context: {
      console.error('Assignment distribution workflow error:', error);
      return {
        success: false,
        errors: [error.message],
        processed: 0,
        failed: 0
      }

   Line 756: "push_notifications"
   Context: {
    await this.supabase
      .from('push_notifications')
      .insert({
        recipient_user_id: instructorId,
        title: 'New Student Enrollments',
        body: `${enrollmentCount}

   Line 772: "approved"
   Context: {
    const status = approved ? 'approved' : 'rejected';
    await this.supabase
      .from('push_notifications')
      .insert({
        recipient_user_id: student.id,
        title: `Course Request ${approved ? 'Approved' : 'Rejected'}

   Line 886: "push_notifications"
   Context: {
    for (const alert of alerts) {
      await this.supabase
        .from('push_notifications')
        .insert({
          recipient_user_id: student.id,
          title: 'Academic Alert',
          body: `${course.title}

   Line 904: "push_notifications"
   Context: {
    await this.supabase
      .from('push_notifications')
      .insert({
        recipient_user_id: student.id,
        title: `Assignment ${type === 'distributed' ? 'Available' : 'Updated'}

   Line 228: "Auto enrollment workflow error:"
   Context: console.error('Auto enrollment workflow error:'

   Line 351: "Join request workflow error:"
   Context: console.error('Join request workflow error:'

   Line 459: "Grade aggregation workflow error:"
   Context: console.error('Grade aggregation workflow error:'

   Line 578: "Progress tracking workflow error:"
   Context: console.error('Progress tracking workflow error:'

   Line 715: "Assignment distribution workflow error:"
   Context: console.error('Assignment distribution workflow error:'

   Line 132: "Course not found or access denied"
   Context: 'Course not found or access denied'

   Line 292: "Rejected via workflow"
   Context: 'Rejected via workflow'

   Line 394: "No active enrollments found"
   Context: 'No active enrollments found'

   Line 514: "Course not found"
   Context: 'Course not found'

   Line 622: "Assignment not found"
   Context: 'Assignment not found'

   Line 645: "No students found in target groups"
   Context: 'No students found in target groups'

   Line 761: "New Student Enrollments"
   Context: 'New Student Enrollments'

   Line 892: "Academic Alert"
   Context: 'Academic Alert'

üìÑ lib/services/GradeService.ts:
   Line 55: "Only instructors and admins can create grades"
   Context: {
    try {
      // Only instructors and admins can create grades
      if (![UserRole.INSTRUCTOR, UserRole.ADMIN].includes(userRole)) {
        return {
          success: false,
          error: 'Only instructors and admins can create grades',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 87: "Submission not found or inaccessible"
   Context: {
        return {
          success: false,
          error: 'Submission not found or inaccessible',
          code: 'SUBMISSION_NOT_FOUND'
        }

   Line 98: "Submission not in your organization"
   Context: {
        return {
          success: false,
          error: 'Submission not in your organization',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 107: "Can only grade submissions from your courses"
   Context: {
        return {
          success: false,
          error: 'Can only grade submissions from your courses',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 116: "Cannot grade draft submissions"
   Context: {
        return {
          success: false,
          error: 'Cannot grade draft submissions',
          code: 'SUBMISSION_DRAFT'
        }

   Line 131: "Grade already exists for this submission"
   Context: {
        return {
          success: false,
          error: 'Grade already exists for this submission',
          code: 'GRADE_EXISTS'
        }

   Line 189: "Grade creation error:"
   Context: {
        console.error('Grade creation error:', error);
        return {
          success: false,
          error: 'Failed to create grade',
          code: 'CREATION_FAILED'
        }

   Line 203: "Grade service error:"
   Context: {
      console.error('Grade service error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 289: "Grade not found"
   Context: {
        return {
          success: false,
          error: 'Grade not found',
          code: 'GRADE_NOT_FOUND'
        }

   Line 305: "Insufficient permissions to view grade"
   Context: {
        return {
          success: false,
          error: 'Insufficient permissions to view grade',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 314: "Grade not yet published"
   Context: {
        return {
          success: false,
          error: 'Grade not yet published',
          code: 'GRADE_NOT_PUBLISHED'
        }

   Line 327: "Get grade error:"
   Context: {
      console.error('Get grade error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 478: "List grades error:"
   Context: {
        console.error('List grades error:', error);
        return {
          success: false,
          error: 'Failed to fetch grades',
          code: 'FETCH_FAILED'
        }

   Line 505: "List grades error:"
   Context: {
      console.error('List grades error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 524: "Grade not found"
   Context: {
    try {
      // Get grade with submission info for authorization
      const gradeResult = await this.getGradeById(gradeId, userId, userRole);
      if (!gradeResult.success || !gradeResult.data) {
        return {
          success: false,
          error: 'Grade not found',
          code: 'GRADE_NOT_FOUND'
        }

   Line 539: "Can only update grades from your courses"
   Context: {
        return {
          success: false,
          error: 'Can only update grades from your courses',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 547: "Students cannot update grades"
   Context: {
        return {
          success: false,
          error: 'Students cannot update grades',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 556: "Can only update grades you created"
   Context: {
        return {
          success: false,
          error: 'Can only update grades you created',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 608: "Grade update error:"
   Context: {
        console.error('Grade update error:', error);
        return {
          success: false,
          error: 'Failed to update grade',
          code: 'UPDATE_FAILED'
        }

   Line 622: "Update grade error:"
   Context: {
      console.error('Update grade error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 640: "Grade not found"
   Context: {
    try {
      // Get grade for authorization
      const gradeResult = await this.getGradeById(gradeId, userId, userRole);
      if (!gradeResult.success || !gradeResult.data) {
        return {
          success: false,
          error: 'Grade not found',
          code: 'GRADE_NOT_FOUND'
        }

   Line 655: "Can only delete grades from your courses"
   Context: {
        return {
          success: false,
          error: 'Can only delete grades from your courses',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 663: "Students cannot delete grades"
   Context: {
        return {
          success: false,
          error: 'Students cannot delete grades',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 672: "Can only delete grades you created"
   Context: {
        return {
          success: false,
          error: 'Can only delete grades you created',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 681: "Deleting published grade:"
   Context: {
        // In a real system, you might want to prevent this or require additional confirmation
        console.warn('Deleting published grade:', gradeId);
      }

   Line 692: "Grade deletion error:"
   Context: {
        console.error('Grade deletion error:', error);
        return {
          success: false,
          error: 'Failed to delete grade',
          code: 'DELETE_FAILED'
        }

   Line 703: "Delete grade error:"
   Context: {
      console.error('Delete grade error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 722: "Insufficient permissions for bulk grading"
   Context: {
    try {
      if (![UserRole.INSTRUCTOR, UserRole.ADMIN].includes(userRole)) {
        return {
          success: false,
          error: 'Insufficient permissions for bulk grading',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 774: "Bulk grade creation error:"
   Context: {
      console.error('Bulk grade creation error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 792: "Insufficient permissions to publish grades"
   Context: {
    try {
      if (![UserRole.INSTRUCTOR, UserRole.ADMIN].includes(userRole)) {
        return {
          success: false,
          error: 'Insufficient permissions to publish grades',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 827: "Publish grades error:"
   Context: {
      console.error('Publish grades error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 885: "Failed to fetch grade statistics"
   Context: {
        return {
          success: false,
          error: 'Failed to fetch grade statistics',
          code: 'FETCH_FAILED'
        }

   Line 921: "A (90-100)"
   Context: {
        'A (90-100)': 0,
        'B (80-89)': 0,
        'C (70-79)': 0,
        'D (60-69)': 0,
        'F (0-59)': 0,
      }

   Line 934: "A (90-100)"
   Context: {
          if (grade.percentage >= 90) percentageDistribution['A (90-100)']++;
          else if (grade.percentage >= 80) percentageDistribution['B (80-89)']++;
          else if (grade.percentage >= 70) percentageDistribution['C (70-79)']++;
          else if (grade.percentage >= 60) percentageDistribution['D (60-69)']++;
          else percentageDistribution['F (0-59)']++;
        }

   Line 988: "Grade stats error:"
   Context: {
      console.error('Grade stats error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 1007: "Can only view your own grade reports"
   Context: {
    try {
      // Authorization check
      if (userRole === UserRole.STUDENT && userId !== studentId) {
        return {
          success: false,
          error: 'Can only view your own grade reports',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 1030: "Course not found"
   Context: {
        return {
          success: false,
          error: 'Course not found',
          code: 'COURSE_NOT_FOUND'
        }

   Line 1041: "Can only view reports from your courses"
   Context: {
        return {
          success: false,
          error: 'Can only view reports from your courses',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 1056: "Student not found"
   Context: {
        return {
          success: false,
          error: 'Student not found',
          code: 'STUDENT_NOT_FOUND'
        }

   Line 1092: "Failed to fetch grades"
   Context: {
        return {
          success: false,
          error: 'Failed to fetch grades',
          code: 'FETCH_FAILED'
        }

   Line 1164: "Student grade report error:"
   Context: {
      console.error('Student grade report error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 190: "Grade creation error:"
   Context: console.error('Grade creation error:'

   Line 204: "Grade service error:"
   Context: console.error('Grade service error:'

   Line 328: "Get grade error:"
   Context: console.error('Get grade error:'

   Line 479: "List grades error:"
   Context: console.error('List grades error:'

   Line 479: "List grades error:"
   Context: console.error('List grades error:'

   Line 609: "Grade update error:"
   Context: console.error('Grade update error:'

   Line 623: "Update grade error:"
   Context: console.error('Update grade error:'

   Line 683: "Deleting published grade:"
   Context: console.warn('Deleting published grade:'

   Line 693: "Grade deletion error:"
   Context: console.error('Grade deletion error:'

   Line 704: "Delete grade error:"
   Context: console.error('Delete grade error:'

   Line 775: "Bulk grade creation error:"
   Context: console.error('Bulk grade creation error:'

   Line 828: "Publish grades error:"
   Context: console.error('Publish grades error:'

   Line 989: "Grade stats error:"
   Context: console.error('Grade stats error:'

   Line 1165: "Student grade report error:"
   Context: console.error('Student grade report error:'

   Line 61: "Only instructors and admins can create grades"
   Context: 'Only instructors and admins can create grades'

   Line 90: "Submission not found or inaccessible"
   Context: 'Submission not found or inaccessible'

   Line 101: "Submission not in your organization"
   Context: 'Submission not in your organization'

   Line 110: "Can only grade submissions from your courses"
   Context: 'Can only grade submissions from your courses'

   Line 119: "Cannot grade draft submissions"
   Context: 'Cannot grade draft submissions'

   Line 134: "Grade already exists for this submission"
   Context: 'Grade already exists for this submission'

   Line 193: "Failed to create grade"
   Context: 'Failed to create grade'

   Line 207: "Internal server error"
   Context: 'Internal server error'

   Line 292: "Grade not found"
   Context: 'Grade not found'

   Line 308: "Insufficient permissions to view grade"
   Context: 'Insufficient permissions to view grade'

   Line 317: "Grade not yet published"
   Context: 'Grade not yet published'

   Line 207: "Internal server error"
   Context: 'Internal server error'

   Line 482: "Failed to fetch grades"
   Context: 'Failed to fetch grades'

   Line 207: "Internal server error"
   Context: 'Internal server error'

   Line 292: "Grade not found"
   Context: 'Grade not found'

   Line 542: "Can only update grades from your courses"
   Context: 'Can only update grades from your courses'

   Line 550: "Students cannot update grades"
   Context: 'Students cannot update grades'

   Line 559: "Can only update grades you created"
   Context: 'Can only update grades you created'

   Line 612: "Failed to update grade"
   Context: 'Failed to update grade'

   Line 207: "Internal server error"
   Context: 'Internal server error'

   Line 292: "Grade not found"
   Context: 'Grade not found'

   Line 658: "Can only delete grades from your courses"
   Context: 'Can only delete grades from your courses'

   Line 666: "Students cannot delete grades"
   Context: 'Students cannot delete grades'

   Line 675: "Can only delete grades you created"
   Context: 'Can only delete grades you created'

   Line 696: "Failed to delete grade"
   Context: 'Failed to delete grade'

   Line 207: "Internal server error"
   Context: 'Internal server error'

   Line 727: "Insufficient permissions for bulk grading"
   Context: 'Insufficient permissions for bulk grading'

   Line 207: "Internal server error"
   Context: 'Internal server error'

   Line 797: "Insufficient permissions to publish grades"
   Context: 'Insufficient permissions to publish grades'

   Line 207: "Internal server error"
   Context: 'Internal server error'

   Line 888: "Failed to fetch grade statistics"
   Context: 'Failed to fetch grade statistics'

   Line 207: "Internal server error"
   Context: 'Internal server error'

   Line 1013: "Can only view your own grade reports"
   Context: 'Can only view your own grade reports'

   Line 1033: "Course not found"
   Context: 'Course not found'

   Line 1044: "Can only view reports from your courses"
   Context: 'Can only view reports from your courses'

   Line 1059: "Student not found"
   Context: 'Student not found'

   Line 482: "Failed to fetch grades"
   Context: 'Failed to fetch grades'

   Line 207: "Internal server error"
   Context: 'Internal server error'

üìÑ lib/services/HiringHubService.ts:
   Line 61: "Error creating job posting:"
   Context: {
      console.error('Error creating job posting:', error);
      throw new Error(`Failed to create job posting: ${error.message}

   Line 81: "Error fetching job postings:"
   Context: {
      console.error('Error fetching job postings:', error);
      throw new Error(`Failed to fetch job postings: ${error.message}

   Line 101: "PGRST116"
   Context: {
      if (error.code === 'PGRST116') {
        return null; // Not found
      }

   Line 128: "Error updating job posting:"
   Context: {
      console.error('Error updating job posting:', error);
      throw new Error(`Failed to update job posting: ${error.message}

   Line 147: "Error deleting job posting:"
   Context: {
      console.error('Error deleting job posting:', error);
      throw new Error(`Failed to delete job posting: ${error.message}

   Line 192: "Error creating candidate profile:"
   Context: {
      console.error('Error creating candidate profile:', createError);
      throw new Error(`Failed to create candidate profile: ${createError.message}

   Line 225: "Error submitting application:"
   Context: {
      console.error('Error submitting application:', error);
      throw new Error(`Failed to submit application: ${error.message}

   Line 250: "Error fetching applications:"
   Context: {
      console.error('Error fetching applications:', error);
      throw new Error(`Failed to fetch applications: ${error.message}

   Line 289: "Error fetching school applications:"
   Context: {
      console.error('Error fetching school applications:', error);
      throw new Error(`Failed to fetch applications: ${error.message}

   Line 330: "Error reviewing application:"
   Context: {
      console.error('Error reviewing application:', error);
      throw new Error(`Failed to review application: ${error.message}

   Line 354: "PGRST116"
   Context: {
      if (error.code === 'PGRST116') {
        return null;
      }

   Line 402: "Error updating application status:"
   Context: {
      console.error('Error updating application status:', error);
      throw new Error(`Failed to update application status: ${error.message}

   Line 438: "Error scheduling interview:"
   Context: {
      console.error('Error scheduling interview:', error);
      throw new Error(`Failed to schedule interview: ${error.message}

   Line 469: "Error fetching interviews:"
   Context: {
      console.error('Error fetching interviews:', error);
      throw new Error(`Failed to fetch interviews: ${error.message}

   Line 504: "Error generating offer:"
   Context: {
      console.error('Error generating offer:', error);
      throw new Error(`Failed to generate offer: ${error.message}

   Line 544: "Error responding to offer:"
   Context: {
      console.error('Error responding to offer:', error);
      throw new Error(`Failed to respond to offer: ${error.message}

   Line 354: "PGRST116"
   Context: {
      if (error.code === 'PGRST116') {
        return null;
      }

   Line 650: "Error fetching hiring hub stats:"
   Context: {
      console.error('Error fetching hiring hub stats:', error);
      // Return zeros on error
      return {
        total_job_postings: 0,
        active_job_postings: 0,
        total_applications: 0,
        pending_reviews: 0,
        shortlisted_candidates: 0,
        scheduled_interviews: 0,
        pending_offers: 0,
      }

   Line 691: "Error tracking job distribution:"
   Context: {
      console.error('Error tracking job distribution:', error);
      // Non-fatal - don't throw, just log
    }

   Line 718: "Error generating filename:"
   Context: {
      console.error('Error generating filename:', filenameError);
      throw new Error('Failed to generate filename');
    }

   Line 733: "Error uploading resume:"
   Context: {
      console.error('Error uploading resume:', uploadError);
      throw new Error(`Failed to upload resume: ${uploadError.message}

   Line 764: "Error downloading resume:"
   Context: {
      console.error('Error downloading resume:', error);
      throw new Error(`Failed to download resume: ${error.message}

   Line 62: "Error creating job posting:"
   Context: console.error('Error creating job posting:'

   Line 82: "Error fetching job postings:"
   Context: console.error('Error fetching job postings:'

   Line 105: "Error fetching job posting:"
   Context: console.error('Error fetching job posting:'

   Line 129: "Error updating job posting:"
   Context: console.error('Error updating job posting:'

   Line 148: "Error deleting job posting:"
   Context: console.error('Error deleting job posting:'

   Line 193: "Error creating candidate profile:"
   Context: console.error('Error creating candidate profile:'

   Line 226: "Error submitting application:"
   Context: console.error('Error submitting application:'

   Line 251: "Error fetching applications:"
   Context: console.error('Error fetching applications:'

   Line 290: "Error fetching school applications:"
   Context: console.error('Error fetching school applications:'

   Line 331: "Error reviewing application:"
   Context: console.error('Error reviewing application:'

   Line 358: "Error fetching application:"
   Context: console.error('Error fetching application:'

   Line 403: "Error updating application status:"
   Context: console.error('Error updating application status:'

   Line 439: "Error scheduling interview:"
   Context: console.error('Error scheduling interview:'

   Line 470: "Error fetching interviews:"
   Context: console.error('Error fetching interviews:'

   Line 505: "Error generating offer:"
   Context: console.error('Error generating offer:'

   Line 545: "Error responding to offer:"
   Context: console.error('Error responding to offer:'

   Line 584: "Error fetching offer:"
   Context: console.error('Error fetching offer:'

   Line 651: "Error fetching hiring hub stats:"
   Context: console.error('Error fetching hiring hub stats:'

   Line 692: "Error tracking job distribution:"
   Context: console.error('Error tracking job distribution:'

   Line 719: "Error generating filename:"
   Context: console.error('Error generating filename:'

   Line 734: "Error uploading resume:"
   Context: console.error('Error uploading resume:'

   Line 765: "Error downloading resume:"
   Context: console.error('Error downloading resume:'

   Line 302: "Unknown Position"
   Context: 'Unknown Position'

   Line 720: "Failed to generate filename"
   Context: 'Failed to generate filename'

   Line 720: "Failed to generate filename"
   Context: throw new Error('Failed to generate filename'

üìÑ lib/services/PDFTemplateRenderers.ts:
   Line 24: "professional"
   Context: {
  protected getEnhancedStyles(options: TemplateOptions): string {
    const theme = options.theme || 'professional';
    const branding = options.branding || { organizationName: 'EduDash Pro', primaryColor: '#1565c0' }

   Line 146: "Generated by Dash AI ‚Ä¢ EduDash Pro"
   Context: {options.branding?.footerText || 'Generated by Dash AI ‚Ä¢ EduDash Pro'}

   Line 146: "Generated by Dash AI ‚Ä¢ EduDash Pro"
   Context: {options.branding?.footerText || 'Generated by Dash AI ‚Ä¢ EduDash Pro'}

   Line 146: "Generated by Dash AI ‚Ä¢ EduDash Pro"
   Context: {options.branding?.footerText || 'Generated by Dash AI ‚Ä¢ EduDash Pro'}

   Line 406: "section"
   Context: {
    return `
      <div class="section">
        <h2>üìà Overall Progress</h2>
        ${EducationalPDFService.createProgressBar(data.overallProgress, 'Overall Achievement')}

   Line 467: "section"
   Context: {
    const total = attendance.present + attendance.absent + attendance.tardy;
    const attendanceRate = total > 0 ? Math.round((attendance.present / total) * 100) : 0;

    return `
      <div class="section">
        <h2>üìÖ Attendance</h2>
        ${EducationalPDFService.createTableHTML({
          headers: ['Status', 'Days', 'Percentage'],
          rows: [
            ['Present', attendance.present.toString(), `${Math.round((attendance.present / total) * 100)}

   Line 482: "Attendance Rate"
   Context: {EducationalPDFService.createProgressBar(attendanceRate, 'Attendance Rate')}

   Line 146: "Generated by Dash AI ‚Ä¢ EduDash Pro"
   Context: {options.branding?.footerText || 'Generated by Dash AI ‚Ä¢ EduDash Pro'}

   Line 146: "Generated by Dash AI ‚Ä¢ EduDash Pro"
   Context: {options.branding?.footerText || 'Generated by Dash AI ‚Ä¢ EduDash Pro'}

   Line 146: "Generated by Dash AI ‚Ä¢ EduDash Pro"
   Context: {options.branding?.footerText || 'Generated by Dash AI ‚Ä¢ EduDash Pro'}

   Line 27: "EduDash Pro"
   Context: 'EduDash Pro'

   Line 410: "Overall Achievement"
   Context: 'Overall Achievement'

   Line 482: "Attendance Rate"
   Context: 'Attendance Rate'

üìÑ lib/services/PDFTemplateService.ts:
   Line 202: "professional"
   Context: {
  theme?: 'professional' | 'colorful' | 'minimalist';
  branding?: PDFBranding;
  paperSize?: 'A4' | 'Letter';
  orientation?: 'portrait' | 'landscape';
  enablePageNumbers?: boolean;
  enableWatermark?: boolean;
  enableTableOfContents?: boolean;
}

   Line 260: "study-guide-comprehensive"
   Context: {
    // Study Guide Template
    this.register({
      id: 'study-guide-comprehensive',
      documentType: PDFDocumentType.STUDY_GUIDE,
      displayName: 'Comprehensive Study Guide',
      description: 'Multi-page study guide with TOC, key concepts, vocabulary, and practice questions',
      defaultTheme: 'colorful',
      supports: {
        tableOfContents: true,
        multiPage: true,
        charts: false,
        images: true,
      }

   Line 278: "lesson-plan-standard"
   Context: {
      id: 'lesson-plan-standard',
      documentType: PDFDocumentType.LESSON_PLAN,
      displayName: 'Standard Lesson Plan',
      description: 'Professional lesson plan with objectives, materials, procedure timeline, and assessment',
      defaultTheme: 'professional',
      supports: {
        tableOfContents: false,
        multiPage: true,
        charts: false,
        images: false,
      }

   Line 294: "progress-report-detailed"
   Context: {
      id: 'progress-report-detailed',
      documentType: PDFDocumentType.PROGRESS_REPORT,
      displayName: 'Detailed Progress Report',
      description: 'Student progress report with visualizations, achievements, and recommendations',
      defaultTheme: 'professional',
      supports: {
        tableOfContents: false,
        multiPage: true,
        charts: true,
        images: true,
      }

   Line 310: "assessment-standard"
   Context: {
      id: 'assessment-standard',
      documentType: PDFDocumentType.ASSESSMENT,
      displayName: 'Standard Assessment',
      description: 'Test/quiz with multiple question types, rubric, and optional answer key',
      defaultTheme: 'minimalist',
      supports: {
        tableOfContents: false,
        multiPage: true,
        charts: false,
        images: false,
      }

   Line 326: "certificate-achievement"
   Context: {
      id: 'certificate-achievement',
      documentType: PDFDocumentType.CERTIFICATE,
      displayName: 'Achievement Certificate',
      description: 'Decorative certificate for recognizing student achievements',
      defaultTheme: 'colorful',
      supports: {
        tableOfContents: false,
        multiPage: false,
        charts: false,
        images: true,
      }

   Line 342: "newsletter-classroom"
   Context: {
      id: 'newsletter-classroom',
      documentType: PDFDocumentType.NEWSLETTER,
      displayName: 'Classroom Newsletter',
      description: 'Multi-column newsletter with announcements, highlights, and events',
      defaultTheme: 'colorful',
      supports: {
        tableOfContents: false,
        multiPage: true,
        charts: false,
        images: true,
      }

   Line 358: "worksheet-enhanced"
   Context: {
      id: 'worksheet-enhanced',
      documentType: PDFDocumentType.WORKSHEET,
      displayName: 'Enhanced Worksheet',
      description: 'Rich worksheet with activities, vocabulary, and bonus challenges',
      defaultTheme: 'colorful',
      supports: {
        tableOfContents: false,
        multiPage: true,
        charts: false,
        images: false,
      }

   Line 397: "Topic is required"
   Context: {
  validateStudyGuide(data: StudyGuideData): ValidationResult {
    const errors: string[] = [];
    const warnings: string[] = [];
    const suggestions: string[] = [];

    // Required fields
    if (!data.topic) errors.push('Topic is required');
    if (!data.gradeLevel) errors.push('Grade level is required');
    if (!data.introduction) errors.push('Introduction is required');

    // Content thresholds
    if (data.sections.length < 3) {
      warnings.push('Study guides should have at least 3 sections');
    }

   Line 412: "Study guides should include at least 10 vocabulary terms"
   Context: {
      warnings.push('Study guides should include at least 10 vocabulary terms');
    }

   Line 415: "Study guides should include at least 5 practice questions"
   Context: {
      warnings.push('Study guides should include at least 5 practice questions');
    }

   Line 420: "Consider adding additional resources section"
   Context: {
      suggestions.push('Consider adding additional resources section');
    }

   Line 423: "Consider enabling answer key for practice questions"
   Context: {
      suggestions.push('Consider enabling answer key for practice questions');
    }

   Line 435: "Topic is required"
   Context: {
    const errors: string[] = [];
    const warnings: string[] = [];
    const suggestions: string[] = [];

    // Required fields
    if (!data.topic) errors.push('Topic is required');
    if (!data.subject) errors.push('Subject is required');
    if (!data.gradeLevel) errors.push('Grade level is required');
    if (!data.duration) errors.push('Duration is required');
    if (data.objectives.length === 0) errors.push('At least one objective is required');
    if (data.materials.length === 0) errors.push('Materials list is required');
    if (data.procedure.length === 0) errors.push('Procedure steps are required');

    // Content thresholds
    if (data.objectives.length < 2) {
      warnings.push('Lesson plans should have at least 2 learning objectives');
    }

   Line 453: "Procedure should have at least 3 steps"
   Context: {
      warnings.push('Procedure should have at least 3 steps');
    }

   Line 458: "Consider adding standards alignment"
   Context: {
      suggestions.push('Consider adding standards alignment');
    }

   Line 461: "Consider adding differentiation strategies"
   Context: {
      suggestions.push('Consider adding differentiation strategies');
    }

   Line 464: "Consider adding an exit ticket"
   Context: {
      suggestions.push('Consider adding an exit ticket');
    }

   Line 476: "Student name is required"
   Context: {
    const errors: string[] = [];
    const warnings: string[] = [];
    const suggestions: string[] = [];

    // Required fields
    if (!data.student.name) errors.push('Student name is required');
    if (!data.student.grade) errors.push('Student grade is required');
    if (!data.reportingPeriod) errors.push('Reporting period is required');
    if (data.subjects.length === 0) errors.push('At least one subject is required');
    if (!data.teacherName) errors.push('Teacher name is required');

    // Content validation
    data.subjects.forEach((subject, index) => {
      if (!subject.teacherComments) {
        warnings.push(`Subject ${index + 1}

   Line 499: "Consider adding attendance information"
   Context: {
      suggestions.push('Consider adding attendance information');
    }

   Line 502: "Consider highlighting student achievements"
   Context: {
      suggestions.push('Consider highlighting student achievements');
    }

   Line 514: "Title is required"
   Context: {
    const errors: string[] = [];
    const warnings: string[] = [];
    const suggestions: string[] = [];

    // Required fields
    if (!data.title) errors.push('Title is required');
    if (!data.subject) errors.push('Subject is required');
    if (!data.gradeLevel) errors.push('Grade level is required');
    if (!data.instructions) errors.push('Instructions are required');
    if (data.sections.length === 0) errors.push('At least one section is required');

    // Content validation
    let totalQuestions = 0;
    data.sections.forEach((section, i) => {
      if (section.questions.length === 0) {
        errors.push(`Section ${i + 1}

   Line 535: "Assessments should have at least 5 questions total"
   Context: {
      warnings.push('Assessments should have at least 5 questions total');
    }

   Line 540: "Consider adding a rubric for essay/short-answer questions"
   Context: {
      suggestions.push('Consider adding a rubric for essay/short-answer questions');
    }

   Line 543: "Consider enabling answer key"
   Context: {
      suggestions.push('Consider enabling answer key');
    }

   Line 555: "Recipient name is required"
   Context: {
    const errors: string[] = [];
    const warnings: string[] = [];
    const suggestions: string[] = [];

    // Required fields
    if (!data.recipientName) errors.push('Recipient name is required');
    if (!data.achievement) errors.push('Achievement is required');
    if (!data.date) errors.push('Date is required');
    if (data.signatures.length === 0) errors.push('At least one signature is required');

    // Suggestions
    if (!data.description) {
      suggestions.push('Consider adding a description of the achievement');
    }

   Line 570: "Consider adding a seal or badge"
   Context: {
      suggestions.push('Consider adding a seal or badge');
    }

   Line 582: "Title is required"
   Context: {
    const errors: string[] = [];
    const warnings: string[] = [];
    const suggestions: string[] = [];

    // Required fields
    if (!data.title) errors.push('Title is required');
    if (!data.date) errors.push('Date is required');
    if (data.announcements.length === 0 && data.highlights.length === 0) {
      errors.push('Newsletter must have either announcements or highlights');
    }

   Line 595: "Newsletter should have at least 3 content items"
   Context: {
      warnings.push('Newsletter should have at least 3 content items');
    }

   Line 600: "Consider adding upcoming events"
   Context: {
      suggestions.push('Consider adding upcoming events');
    }

   Line 603: "Consider adding contact information"
   Context: {
      suggestions.push('Consider adding contact information');
    }

   Line 615: "Title is required"
   Context: {
    const errors: string[] = [];
    const warnings: string[] = [];
    const suggestions: string[] = [];

    // Required fields
    if (!data.title) errors.push('Title is required');
    if (!data.subject) errors.push('Subject is required');
    if (!data.gradeLevel) errors.push('Grade level is required');
    if (!data.instructions) errors.push('Instructions are required');
    if (data.activities.length === 0) errors.push('At least one activity is required');

    // Content thresholds
    if (data.objectives.length < 2) {
      warnings.push('Worksheets should have at least 2 learning objectives');
    }

   Line 631: "Worksheets should have at least 2 activities"
   Context: {
      warnings.push('Worksheets should have at least 2 activities');
    }

   Line 636: "Consider adding a vocabulary section"
   Context: {
      suggestions.push('Consider adding a vocabulary section');
    }

   Line 639: "Consider adding a bonus challenge"
   Context: {
      suggestions.push('Consider adding a bonus challenge');
    }

   Line 642: "Consider adding notes for parents"
   Context: {
      suggestions.push('Consider adding notes for parents');
    }

   Line 705: "Unknown document type"
   Context: {
      case PDFDocumentType.STUDY_GUIDE:
        return this.validator.validateStudyGuide(data as StudyGuideData);
      case PDFDocumentType.LESSON_PLAN:
        return this.validator.validateLessonPlan(data as LessonPlanData);
      case PDFDocumentType.PROGRESS_REPORT:
        return this.validator.validateProgressReport(data as ProgressReportData);
      case PDFDocumentType.ASSESSMENT:
        return this.validator.validateAssessment(data as AssessmentData);
      case PDFDocumentType.CERTIFICATE:
        return this.validator.validateCertificate(data as CertificateData);
      case PDFDocumentType.NEWSLETTER:
        return this.validator.validateNewsletter(data as NewsletterData);
      case PDFDocumentType.WORKSHEET:
        return this.validator.validateEnhancedWorksheet(data as EnhancedWorksheetData);
      default:
        return {
          valid: false,
          errors: ['Unknown document type'],
          warnings: [],
          suggestions: [],
        }

   Line 265: "Comprehensive Study Guide"
   Context: 'Comprehensive Study Guide'

   Line 281: "Standard Lesson Plan"
   Context: 'Standard Lesson Plan'

   Line 297: "Detailed Progress Report"
   Context: 'Detailed Progress Report'

   Line 313: "Standard Assessment"
   Context: 'Standard Assessment'

   Line 329: "Achievement Certificate"
   Context: 'Achievement Certificate'

   Line 330: "Decorative certificate for recognizing student achievements"
   Context: 'Decorative certificate for recognizing student achievements'

   Line 345: "Classroom Newsletter"
   Context: 'Classroom Newsletter'

   Line 361: "Enhanced Worksheet"
   Context: 'Enhanced Worksheet'

   Line 404: "Topic is required"
   Context: 'Topic is required'

   Line 405: "Grade level is required"
   Context: 'Grade level is required'

   Line 406: "Introduction is required"
   Context: 'Introduction is required'

   Line 421: "Consider adding additional resources section"
   Context: 'Consider adding additional resources section'

   Line 424: "Consider enabling answer key for practice questions"
   Context: 'Consider enabling answer key for practice questions'

   Line 404: "Topic is required"
   Context: 'Topic is required'

   Line 442: "Subject is required"
   Context: 'Subject is required'

   Line 405: "Grade level is required"
   Context: 'Grade level is required'

   Line 444: "Duration is required"
   Context: 'Duration is required'

   Line 445: "At least one objective is required"
   Context: 'At least one objective is required'

   Line 446: "Materials list is required"
   Context: 'Materials list is required'

   Line 447: "Procedure steps are required"
   Context: 'Procedure steps are required'

   Line 459: "Consider adding standards alignment"
   Context: 'Consider adding standards alignment'

   Line 462: "Consider adding differentiation strategies"
   Context: 'Consider adding differentiation strategies'

   Line 465: "Consider adding an exit ticket"
   Context: 'Consider adding an exit ticket'

   Line 482: "Student name is required"
   Context: 'Student name is required'

   Line 483: "Student grade is required"
   Context: 'Student grade is required'

   Line 484: "Reporting period is required"
   Context: 'Reporting period is required'

   Line 485: "At least one subject is required"
   Context: 'At least one subject is required'

   Line 486: "Teacher name is required"
   Context: 'Teacher name is required'

   Line 500: "Consider adding attendance information"
   Context: 'Consider adding attendance information'

   Line 503: "Consider highlighting student achievements"
   Context: 'Consider highlighting student achievements'

   Line 520: "Title is required"
   Context: 'Title is required'

   Line 442: "Subject is required"
   Context: 'Subject is required'

   Line 405: "Grade level is required"
   Context: 'Grade level is required'

   Line 523: "Instructions are required"
   Context: 'Instructions are required'

   Line 524: "At least one section is required"
   Context: 'At least one section is required'

   Line 544: "Consider enabling answer key"
   Context: 'Consider enabling answer key'

   Line 561: "Recipient name is required"
   Context: 'Recipient name is required'

   Line 562: "Achievement is required"
   Context: 'Achievement is required'

   Line 563: "Date is required"
   Context: 'Date is required'

   Line 564: "At least one signature is required"
   Context: 'At least one signature is required'

   Line 568: "Consider adding a description of the achievement"
   Context: 'Consider adding a description of the achievement'

   Line 571: "Consider adding a seal or badge"
   Context: 'Consider adding a seal or badge'

   Line 520: "Title is required"
   Context: 'Title is required'

   Line 563: "Date is required"
   Context: 'Date is required'

   Line 591: "Newsletter must have either announcements or highlights"
   Context: 'Newsletter must have either announcements or highlights'

   Line 601: "Consider adding upcoming events"
   Context: 'Consider adding upcoming events'

   Line 604: "Consider adding contact information"
   Context: 'Consider adding contact information'

   Line 520: "Title is required"
   Context: 'Title is required'

   Line 442: "Subject is required"
   Context: 'Subject is required'

   Line 405: "Grade level is required"
   Context: 'Grade level is required'

   Line 523: "Instructions are required"
   Context: 'Instructions are required'

   Line 625: "At least one activity is required"
   Context: 'At least one activity is required'

   Line 637: "Consider adding a vocabulary section"
   Context: 'Consider adding a vocabulary section'

   Line 640: "Consider adding a bonus challenge"
   Context: 'Consider adding a bonus challenge'

   Line 643: "Consider adding notes for parents"
   Context: 'Consider adding notes for parents'

   Line 723: "Unknown document type"
   Context: 'Unknown document type'

üìÑ lib/services/SchoolSettingsService.ts:
   Line 96: "My School"
   Context: {
  schoolName: 'My School',
  primaryColor: '#4F46E5',
  secondaryColor: '#6B7280',
  timezone: 'Africa/Johannesburg',
  currency: 'ZAR',
  features: {
    activityFeed: {
      enabled: true,
      allowTeacherDelete: false,
      allowParentComment: true,
      showPriorityBadges: true,
    }

   Line 130: "Office Supplies"
   Context: {
      enabled: true,
      dailyLimit: 500,
      requireApprovalAbove: 200,
      allowedCategories: ['Office Supplies', 'Maintenance', 'Emergency', 'Utilities'],
      requireReceipts: true,
    }

   Line 138: "grid"
   Context: {
    dashboardLayout: 'grid',
    showWeatherWidget: true,
    showCalendarWidget: true,
    defaultLanguage: 'en',
    dateFormat: 'DD/MM/YYYY',
    timeFormat: '24h',
  }

   Line 97: "My School"
   Context: 'My School'

   Line 134: "Office Supplies"
   Context: 'Office Supplies'

üìÑ lib/services/SubmissionService.ts:
   Line 58: "Only students can submit assignments"
   Context: {
    try {
      // Only students can create submissions (unless admin is helping)
      if (![UserRole.STUDENT, UserRole.ADMIN].includes(userRole)) {
        return {
          success: false,
          error: 'Only students can submit assignments',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 87: "Assignment not found or inaccessible"
   Context: {
        return {
          success: false,
          error: 'Assignment not found or inaccessible',
          code: 'ASSIGNMENT_NOT_FOUND'
        }

   Line 98: "Cannot submit to assignments in inactive courses"
   Context: {
        return {
          success: false,
          error: 'Cannot submit to assignments in inactive courses',
          code: 'COURSE_INACTIVE'
        }

   Line 107: "enrollments"
   Context: {
        const enrollmentCheck = await this.supabase
          .from('enrollments')
          .select('id')
          .eq('student_id', userId)
          .eq('course_id', assignment.course_id)
          .eq('is_active', true)
          .single();

        if (enrollmentCheck.error || !enrollmentCheck.data) {
          return {
            success: false,
            error: 'You must be enrolled in this course to submit',
            code: 'NOT_ENROLLED'
          }

   Line 126: "Assignment is not currently accepting submissions"
   Context: {
        return {
          success: false,
          error: 'Assignment is not currently accepting submissions',
          code: 'ASSIGNMENT_CLOSED'
        }

   Line 188: "Submission creation error:"
   Context: {
        console.error('Submission creation error:', error);
        return {
          success: false,
          error: 'Failed to create submission',
          code: 'CREATION_FAILED'
        }

   Line 202: "Submission service error:"
   Context: {
      console.error('Submission service error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 251: "Submission not found"
   Context: {
        return {
          success: false,
          error: 'Submission not found',
          code: 'SUBMISSION_NOT_FOUND'
        }

   Line 267: "Insufficient permissions to view submission"
   Context: {
        return {
          success: false,
          error: 'Insufficient permissions to view submission',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 317: "Get submission error:"
   Context: {
      console.error('Get submission error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 446: "List submissions error:"
   Context: {
        console.error('List submissions error:', error);
        return {
          success: false,
          error: 'Failed to fetch submissions',
          code: 'FETCH_FAILED'
        }

   Line 495: "List submissions error:"
   Context: {
      console.error('List submissions error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 514: "Submission not found"
   Context: {
    try {
      // Get submission with assignment info for authorization
      const submissionResult = await this.getSubmissionById(submissionId, userId, userRole);
      if (!submissionResult.success || !submissionResult.data) {
        return {
          success: false,
          error: 'Submission not found',
          code: 'SUBMISSION_NOT_FOUND'
        }

   Line 529: "Can only update your own submissions"
   Context: {
        return {
          success: false,
          error: 'Can only update your own submissions',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 537: "Can only update submissions from your courses"
   Context: {
        return {
          success: false,
          error: 'Can only update submissions from your courses',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 552: "Cannot update graded submissions"
   Context: {
        return {
          success: false,
          error: 'Cannot update graded submissions',
          code: 'SUBMISSION_GRADED'
        }

   Line 562: "Assignment is no longer accepting submissions"
   Context: {
        return {
          success: false,
          error: 'Assignment is no longer accepting submissions',
          code: 'ASSIGNMENT_CLOSED'
        }

   Line 599: "Submission update error:"
   Context: {
        console.error('Submission update error:', error);
        return {
          success: false,
          error: 'Failed to update submission',
          code: 'UPDATE_FAILED'
        }

   Line 613: "Update submission error:"
   Context: {
      console.error('Update submission error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 631: "Submission not found"
   Context: {
    try {
      // Get submission for authorization
      const submissionResult = await this.getSubmissionById(submissionId, userId, userRole);
      if (!submissionResult.success || !submissionResult.data) {
        return {
          success: false,
          error: 'Submission not found',
          code: 'SUBMISSION_NOT_FOUND'
        }

   Line 646: "Can only delete your own submissions"
   Context: {
        return {
          success: false,
          error: 'Can only delete your own submissions',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 654: "Can only delete submissions from your courses"
   Context: {
        return {
          success: false,
          error: 'Can only delete submissions from your courses',
          code: 'INSUFFICIENT_PERMISSIONS'
        }

   Line 669: "Cannot delete graded submissions"
   Context: {
        return {
          success: false,
          error: 'Cannot delete graded submissions',
          code: 'SUBMISSION_GRADED'
        }

   Line 683: "Submission deletion error:"
   Context: {
        console.error('Submission deletion error:', error);
        return {
          success: false,
          error: 'Failed to delete submission',
          code: 'DELETE_FAILED'
        }

   Line 694: "Delete submission error:"
   Context: {
      console.error('Delete submission error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 754: "Failed to fetch submission statistics"
   Context: {
        return {
          success: false,
          error: 'Failed to fetch submission statistics',
          code: 'FETCH_FAILED'
        }

   Line 833: "Submission stats error:"
   Context: {
      console.error('Submission stats error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 901: "assignments"
   Context: {
    try {
      // Verify assignment access first
      const assignmentCheck = await this.supabase
        .from('assignments')
        .select(`
          course:courses!assignments_course_id_fkey (
            instructor_id
          )
        `)
        .eq('id', assignmentId)
        .single();

      if (assignmentCheck.error || !assignmentCheck.data) {
        return {
          success: false,
          error: 'Assignment not found',
          code: 'ASSIGNMENT_NOT_FOUND'
        }

   Line 923: "Can only view submissions from your courses"
   Context: {
        const courseData: any = (assignmentCheck.data as any).course;
        const instructorId = Array.isArray(courseData) ? courseData[0]?.instructor_id : courseData?.instructor_id;
        if (instructorId !== userId) {
          return {
            success: false,
            error: 'Can only view submissions from your courses',
            code: 'INSUFFICIENT_PERMISSIONS'
          }

   Line 956: "Failed to fetch submissions"
   Context: {
        return {
          success: false,
          error: 'Failed to fetch submissions',
          code: 'FETCH_FAILED'
        }

   Line 969: "Get submissions by assignment error:"
   Context: {
      console.error('Get submissions by assignment error:', error);
      return {
        success: false,
        error: 'Internal server error',
        code: 'INTERNAL_ERROR'
      }

   Line 189: "Submission creation error:"
   Context: console.error('Submission creation error:'

   Line 203: "Submission service error:"
   Context: console.error('Submission service error:'

   Line 318: "Get submission error:"
   Context: console.error('Get submission error:'

   Line 447: "List submissions error:"
   Context: console.error('List submissions error:'

   Line 447: "List submissions error:"
   Context: console.error('List submissions error:'

   Line 600: "Submission update error:"
   Context: console.error('Submission update error:'

   Line 614: "Update submission error:"
   Context: console.error('Update submission error:'

   Line 684: "Submission deletion error:"
   Context: console.error('Submission deletion error:'

   Line 695: "Delete submission error:"
   Context: console.error('Delete submission error:'

   Line 834: "Submission stats error:"
   Context: console.error('Submission stats error:'

   Line 970: "Get submissions by assignment error:"
   Context: console.error('Get submissions by assignment error:'

   Line 64: "Only students can submit assignments"
   Context: 'Only students can submit assignments'

   Line 90: "Assignment not found or inaccessible"
   Context: 'Assignment not found or inaccessible'

   Line 101: "Cannot submit to assignments in inactive courses"
   Context: 'Cannot submit to assignments in inactive courses'

   Line 119: "You must be enrolled in this course to submit"
   Context: 'You must be enrolled in this course to submit'

   Line 129: "Assignment is not currently accepting submissions"
   Context: 'Assignment is not currently accepting submissions'

   Line 192: "Failed to create submission"
   Context: 'Failed to create submission'

   Line 206: "Internal server error"
   Context: 'Internal server error'

   Line 254: "Submission not found"
   Context: 'Submission not found'

   Line 270: "Insufficient permissions to view submission"
   Context: 'Insufficient permissions to view submission'

   Line 206: "Internal server error"
   Context: 'Internal server error'

   Line 450: "Failed to fetch submissions"
   Context: 'Failed to fetch submissions'

   Line 206: "Internal server error"
   Context: 'Internal server error'

   Line 254: "Submission not found"
   Context: 'Submission not found'

   Line 532: "Can only update your own submissions"
   Context: 'Can only update your own submissions'

   Line 540: "Can only update submissions from your courses"
   Context: 'Can only update submissions from your courses'

   Line 555: "Cannot update graded submissions"
   Context: 'Cannot update graded submissions'

   Line 565: "Assignment is no longer accepting submissions"
   Context: 'Assignment is no longer accepting submissions'

   Line 603: "Failed to update submission"
   Context: 'Failed to update submission'

   Line 206: "Internal server error"
   Context: 'Internal server error'

   Line 254: "Submission not found"
   Context: 'Submission not found'

   Line 649: "Can only delete your own submissions"
   Context: 'Can only delete your own submissions'

   Line 657: "Can only delete submissions from your courses"
   Context: 'Can only delete submissions from your courses'

   Line 672: "Cannot delete graded submissions"
   Context: 'Cannot delete graded submissions'

   Line 687: "Failed to delete submission"
   Context: 'Failed to delete submission'

   Line 206: "Internal server error"
   Context: 'Internal server error'

   Line 757: "Failed to fetch submission statistics"
   Context: 'Failed to fetch submission statistics'

   Line 206: "Internal server error"
   Context: 'Internal server error'

   Line 917: "Assignment not found"
   Context: 'Assignment not found'

   Line 929: "Can only view submissions from your courses"
   Context: 'Can only view submissions from your courses'

   Line 450: "Failed to fetch submissions"
   Context: 'Failed to fetch submissions'

   Line 206: "Internal server error"
   Context: 'Internal server error'

üìÑ lib/services/TeacherDocumentsService.ts:
   Line 129: "File does not exist"
   Context: {
    try {
      const fileInfo = await FileSystem.getInfoAsync(params.localUri)
      if (!fileInfo.exists) throw new Error('File does not exist')

      const fileSize = fileInfo.size || 0
      if (fileSize <= 0 || fileSize > 50 * 1024 * 1024) throw new Error('Invalid file size')

      const path = `${params.preschoolId}

   Line 198: "Upload failed"
   Context: {
      return { success: false, error: e?.message || 'Upload failed' }

   Line 83: "ID Copy"
   Context: 'ID Copy'

   Line 132: "File does not exist"
   Context: 'File does not exist'

   Line 135: "Invalid file size"
   Context: 'Invalid file size'

   Line 199: "Upload failed"
   Context: 'Upload failed'

   Line 132: "File does not exist"
   Context: throw new Error('File does not exist'

   Line 135: "Invalid file size"
   Context: throw new Error('Invalid file size'

üìÑ lib/services/WhatsAppBusinessService.ts:
   Line 41: "WhatsApp integration temporarily disabled due to security vulnerability. Credentials were exposed client-side via EXPO_PUBLIC environment variables. Integration will be restored via secure server-side Edge Functions."
   Context: {
  private readonly SECURITY_ERROR = 'WhatsApp integration temporarily disabled due to security vulnerability. Credentials were exposed client-side via EXPO_PUBLIC environment variables. Integration will be restored via secure server-side Edge Functions.';

  constructor() {
    this.logSecurityAlert();
  }

üìÑ lib/services/WhatsAppSecurityAlert.ts:
   Line 41: "WhatsApp integration temporarily disabled due to security vulnerability. Credentials were exposed client-side via EXPO_PUBLIC environment variables. Integration will be restored via secure server-side Edge Functions."
   Context: {
  private readonly SECURITY_ERROR = 'WhatsApp integration temporarily disabled due to security vulnerability. Credentials were exposed client-side via EXPO_PUBLIC environment variables. Integration will be restored via secure server-side Edge Functions.';

  constructor() {
    this.logSecurityAlert();
  }

üìÑ lib/services/announcementService.ts:
   Line 64: "üí• Unexpected error creating announcement:"
   Context: {
      console.error('üí• Unexpected error creating announcement:', err);
      return { 
        success: false, 
        error: err instanceof Error ? err.message : 'Unknown error' 
      }

   Line 95: "üí• Unexpected error fetching announcements:"
   Context: {
      console.error('üí• Unexpected error fetching announcements:', err);
      return { 
        success: false, 
        error: err instanceof Error ? err.message : 'Unknown error' 
      }

   Line 197: "üí• Error deleting announcement:"
   Context: {
      console.error('üí• Error deleting announcement:', err);
      return { 
        success: false, 
        error: err instanceof Error ? err.message : 'Unknown error' 
      }

   Line 68: "Unknown error"
   Context: 'Unknown error'

   Line 68: "Unknown error"
   Context: 'Unknown error'

   Line 68: "Unknown error"
   Context: 'Unknown error'

üìÑ lib/services/businessLogicServices.ts:
   Line 150: "Failed to calculate financial metrics:"
   Context: {
      console.error('Failed to calculate financial metrics:', error);
      return this.getEmptyFinancialMetrics();
    }

   Line 214: "Failed to project revenue:"
   Context: {
      console.error('Failed to project revenue:', error);
      return this.getEmptyRevenueProjection();
    }

   Line 279: "Seasonal enrollment patterns"
   Context: {
    const factors = ['Seasonal enrollment patterns', 'Marketing effectiveness'];
    
    if (trend > 0) {
      factors.push('Positive word-of-mouth', 'Program expansion');
    }

   Line 284: "Economic factors"
   Context: {
      factors.push('Economic factors', 'Increased competition');
    }

   Line 291: "Economic downturn"
   Context: {
    const risks = ['Economic downturn', 'Regulatory changes'];
    
    if (trend < 0) {
      risks.push('Declining enrollment', 'Staff turnover');
    }

   Line 296: "Capacity constraints"
   Context: {
      risks.push('Capacity constraints', 'Resource limitations');
    }

   Line 416: "Failed to calculate attendance metrics:"
   Context: {
      console.error('Failed to calculate attendance metrics:', error);
      return this.getEmptyAttendanceMetrics();
    }

   Line 507: "Failed to calculate performance metrics:"
   Context: {
      console.error('Failed to calculate performance metrics:', error);
      return this.getEmptyPerformanceMetrics();
    }

   Line 674: "male"
   Context: {
        // Gender distribution
        if (student.gender === 'male') genderDistribution.male++;
        else if (student.gender === 'female') genderDistribution.female++;

        // Grade distribution
        const grade = student.grade_level || 'Unknown';
        gradeDistribution[grade] = (gradeDistribution[grade] || 0) + 1;

        // Special needs
        if (student.special_needs) specialNeedsCount++;

        // Age calculation
        if (student.date_of_birth) {
          const age = this.calculateAge(student.date_of_birth);
          totalAge += age;
          ageCount++;
        }

   Line 709: "Failed to calculate student analytics:"
   Context: {
      console.error('Failed to calculate student analytics:', error);
      return this.getEmptyStudentAnalytics();
    }

   Line 809: "Failed to calculate teacher analytics:"
   Context: {
      console.error('Failed to calculate teacher analytics:', error);
      return this.getEmptyTeacherAnalytics();
    }

   Line 151: "Failed to calculate financial metrics:"
   Context: console.error('Failed to calculate financial metrics:'

   Line 215: "Failed to project revenue:"
   Context: console.error('Failed to project revenue:'

   Line 417: "Failed to calculate attendance metrics:"
   Context: console.error('Failed to calculate attendance metrics:'

   Line 508: "Failed to calculate performance metrics:"
   Context: console.error('Failed to calculate performance metrics:'

   Line 710: "Failed to calculate student analytics:"
   Context: console.error('Failed to calculate student analytics:'

   Line 810: "Failed to calculate teacher analytics:"
   Context: console.error('Failed to calculate teacher analytics:'

   Line 280: "Seasonal enrollment patterns"
   Context: 'Seasonal enrollment patterns'

   Line 280: "Marketing effectiveness"
   Context: 'Marketing effectiveness'

   Line 283: "Program expansion"
   Context: 'Program expansion'

   Line 285: "Economic factors"
   Context: 'Economic factors'

   Line 285: "Increased competition"
   Context: 'Increased competition'

   Line 292: "Economic downturn"
   Context: 'Economic downturn'

   Line 292: "Regulatory changes"
   Context: 'Regulatory changes'

   Line 295: "Declining enrollment"
   Context: 'Declining enrollment'

   Line 295: "Staff turnover"
   Context: 'Staff turnover'

   Line 297: "Capacity constraints"
   Context: 'Capacity constraints'

   Line 297: "Resource limitations"
   Context: 'Resource limitations'

üìÑ lib/services/finance/ChartDataService.ts:
   Line 89: "Last Month"
   Context: {
    const currentMonth = new Date().getMonth();
    const lastMonth = (currentMonth - 1 + 12) % 12;
    
    const currentRevenue = overview.revenueMonthly[currentMonth] || 0;
    const lastRevenue = overview.revenueMonthly[lastMonth] || 0;
    const currentExpenses = overview.expensesMonthly[currentMonth] || 0;
    const lastExpenses = overview.expensesMonthly[lastMonth] || 0;
    
    return {
      labels: ['Last Month', 'This Month'],
      datasets: [
        {
          data: [lastRevenue, currentRevenue],
          color: (opacity = 1) => `rgba(5, 150, 105, ${opacity}

   Line 99: "Last Month"
   Context: 'Last Month'

   Line 99: "This Month"
   Context: 'This Month'

üìÑ lib/services/finance/ExportService.ts:
   Line 34: "Date,Type,Category,Amount,Description,Status\n"
   Context: {
    try {
      const headers = 'Date,Type,Category,Amount,Description,Status\n';
      const rows = transactions
        .map(t => 
          `"${this.formatDate(t.date)}

   Line 67: "EduDash Pro"
   Context: {
    try {
      const workbook = new ExcelJS.Workbook();
      workbook.creator = 'EduDash Pro';
      workbook.lastModifiedBy = 'EduDash Pro';
      workbook.created = new Date();
      workbook.modified = new Date();

      // Summary sheet
      const summarySheet = workbook.addWorksheet('Summary');
      summarySheet.addRows([
        ['Financial Summary', ''],
        ['Total Revenue', this.formatCurrency(summary.revenue)],
        ['Total Expenses', this.formatCurrency(summary.expenses)],
        ['Net Cash Flow', this.formatCurrency(summary.cashFlow)],
        ['', ''],
        ['Generated on', new Date().toLocaleDateString('en-ZA')],
      ]);

      // Transactions sheet
      const transactionSheet = workbook.addWorksheet('Transactions');
      transactionSheet.addRow(['Date', 'Type', 'Category', 'Amount', 'Description', 'Status']);
      
      transactions.forEach(t => {
        transactionSheet.addRow([
          this.formatDate(t.date),
          t.type,
          t.category,
          t.amount,
          t.description,
          t.status,
        ]);
      }

   Line 230: "csv"
   Context: {
      case 'csv':
        await this.exportToCSV(transactions, filename);
        break;
      case 'excel':
        await this.exportToExcel(transactions, summary, filename);
        break;
      case 'pdf':
        await this.exportToPDF(transactions, summary, filename);
        break;
      default:
        Alert.alert('Error', 'Unsupported export format');
    }

   Line 58: "Failed to export CSV file"
   Context: 'Failed to export CSV file'

   Line 70: "EduDash Pro"
   Context: 'EduDash Pro'

   Line 70: "EduDash Pro"
   Context: 'EduDash Pro'

   Line 78: "Financial Summary"
   Context: 'Financial Summary'

   Line 79: "Total Revenue"
   Context: 'Total Revenue'

   Line 80: "Total Expenses"
   Context: 'Total Expenses'

   Line 81: "Net Cash Flow"
   Context: 'Net Cash Flow'

   Line 83: "Generated on"
   Context: 'Generated on'

   Line 119: "Failed to export Excel file"
   Context: 'Failed to export Excel file'

   Line 217: "Failed to export PDF file"
   Context: 'Failed to export PDF file'

   Line 241: "Unsupported export format"
   Context: 'Unsupported export format'

üìÑ lib/services/homeworkService.ts:
   Line 5: "Good effort on this assignment. Keep working hard!"
   Context: {
  static async gradeHomework(submissionId: string, submissionContent: string, assignmentTitle: string, gradeLevel: string) {
    try {
      if (!AI_ENABLED) {
        return {
          score: 75,
          feedback: 'Good effort on this assignment. Keep working hard!',
          suggestions: ['Review the material again', 'Practice more examples'],
          strengths: ['Shows understanding of basic concepts'],
          areasForImprovement: ['Attention to detail', 'Following instructions']
        }

   Line 43: "Thank you for submitting your homework. Keep up the good work!"
   Context: {
      return {
        score: 70,
        feedback: 'Thank you for submitting your homework. Keep up the good work!',
        suggestions: ['Review the lesson materials', 'Practice similar exercises'],
        strengths: ['Completed the assignment'],
        areasForImprovement: ['Follow instructions carefully']
      }

   Line 65: "Good effort on this assignment. Keep working hard!"
   Context: {
    try {
      if (!AI_ENABLED) {
        handlers.onFinal?.({
          score: 75,
          feedback: 'Good effort on this assignment. Keep working hard!',
          suggestions: ['Review the material again', 'Practice more examples'],
          strengths: ['Shows understanding of basic concepts'],
          areasForImprovement: ['Attention to detail', 'Following instructions'],
        }

   Line 128: "grade"
   Context: {"grade":"Good","feedback":"Analyzing submission","strengths":[],',
        '"areasForImprovement":[],"nextSteps":[]}

   Line 157: "Streaming error"
   Context: {
      handlers.onError?.({ message: e?.message || 'Streaming error' }

   Line 12: "Review the material again"
   Context: 'Review the material again'

   Line 12: "Practice more examples"
   Context: 'Practice more examples'

   Line 13: "Shows understanding of basic concepts"
   Context: 'Shows understanding of basic concepts'

   Line 14: "Attention to detail"
   Context: 'Attention to detail'

   Line 14: "Following instructions"
   Context: 'Following instructions'

   Line 25: "Understands core concept"
   Context: 'Understands core concept'

   Line 27: "Practice with number lines"
   Context: 'Practice with number lines'

   Line 47: "Review the lesson materials"
   Context: 'Review the lesson materials'

   Line 47: "Practice similar exercises"
   Context: 'Practice similar exercises'

   Line 48: "Completed the assignment"
   Context: 'Completed the assignment'

   Line 49: "Follow instructions carefully"
   Context: 'Follow instructions carefully'

   Line 12: "Review the material again"
   Context: 'Review the material again'

   Line 12: "Practice more examples"
   Context: 'Practice more examples'

   Line 13: "Shows understanding of basic concepts"
   Context: 'Shows understanding of basic concepts'

   Line 14: "Attention to detail"
   Context: 'Attention to detail'

   Line 14: "Following instructions"
   Context: 'Following instructions'

   Line 25: "Understands core concept"
   Context: 'Understands core concept'

   Line 27: "Practice with number lines"
   Context: 'Practice with number lines'

   Line 128: "Analyzing submission"
   Context: "Analyzing submission"

   Line 25: "Understands core concept"
   Context: 'Understands core concept'

   Line 27: "Practice with number lines"
   Context: 'Practice with number lines'

   Line 158: "Streaming error"
   Context: 'Streaming error'

üìÑ lib/services/inviteCodeService.ts:
   Line 19: "ABCDEFGHJKMNPQRSTUVWXYZ23456789"
   Context: {
  const chars = 'ABCDEFGHJKMNPQRSTUVWXYZ23456789'; // no I, L, O, 0, 1 for readability
  let s = '';
  for (let i = 0; i < length; i++) s += chars[Math.floor(Math.random() * chars.length)];
  return s;
}

   Line 188: "parent"
   Context: {
    return this.createInviteCode({
      invitationType: 'parent',
      preschoolId: params.preschoolId,
      organizationId: params.organizationId,
      organizationKind: params.organizationKind,
      invitedBy: params.invitedBy,
      description: params.description ?? 'School-wide parent invite code',
      maxUses: params.maxUses,
      expiresAt: params.expiresAt,
      codeLength: params.codeLength,
    }

   Line 173: "Could not generate a unique invite code. Please try again."
   Context: throw new Error('Could not generate a unique invite code. Please try again.'

üìÑ lib/services/invoiceService.ts:
   Line 52: "Failed to trigger invoice notification:"
   Context: {
        console.error('Failed to trigger invoice notification:', error);
      }

   Line 56: "Error triggering invoice notification:"
   Context: {
      console.error('Error triggering invoice notification:', error);
      // Don't throw here - notifications are optional and shouldn't break the main flow
    }

   Line 376: "Only draft invoices can be deleted"
   Context: {
        throw new Error('Only draft invoices can be deleted');
      }

   Line 53: "Failed to trigger invoice notification:"
   Context: console.error('Failed to trigger invoice notification:'

   Line 57: "Error triggering invoice notification:"
   Context: console.error('Error triggering invoice notification:'

   Line 72: "User not authenticated"
   Context: 'User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: 'User not associated with a preschool'

   Line 86: "Failed to generate invoice number"
   Context: 'Failed to generate invoice number'

   Line 140: "Failed to create invoice"
   Context: 'Failed to create invoice'

   Line 206: "Failed to update invoice"
   Context: 'Failed to update invoice'

   Line 72: "User not authenticated"
   Context: 'User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: 'User not associated with a preschool'

   Line 317: "Failed to fetch invoices"
   Context: 'Failed to fetch invoices'

   Line 341: "Invoice not found"
   Context: 'Invoice not found'

   Line 357: "Failed to fetch invoice"
   Context: 'Failed to fetch invoice'

   Line 341: "Invoice not found"
   Context: 'Invoice not found'

   Line 377: "Only draft invoices can be deleted"
   Context: 'Only draft invoices can be deleted'

   Line 394: "Failed to delete invoice"
   Context: 'Failed to delete invoice'

   Line 72: "User not authenticated"
   Context: 'User not authenticated'

   Line 436: "Failed to record payment"
   Context: 'Failed to record payment'

   Line 341: "Invoice not found"
   Context: 'Invoice not found'

   Line 491: "Failed to mark invoice as paid"
   Context: 'Failed to mark invoice as paid'

   Line 72: "User not authenticated"
   Context: 'User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: 'User not associated with a preschool'

   Line 523: "Failed to fetch invoice statistics"
   Context: 'Failed to fetch invoice statistics'

   Line 523: "Failed to fetch invoice statistics"
   Context: 'Failed to fetch invoice statistics'

   Line 72: "User not authenticated"
   Context: 'User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: 'User not associated with a preschool'

   Line 650: "Failed to fetch templates"
   Context: 'Failed to fetch templates'

   Line 72: "User not authenticated"
   Context: 'User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: 'User not associated with a preschool'

   Line 697: "Failed to create template"
   Context: 'Failed to create template'

   Line 72: "User not authenticated"
   Context: 'User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: 'User not associated with a preschool'

   Line 735: "Failed to fetch branding"
   Context: 'Failed to fetch branding'

   Line 72: "User not authenticated"
   Context: 'User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: 'User not associated with a preschool'

   Line 779: "Failed to update branding"
   Context: 'Failed to update branding'

   Line 821: "Failed to send invoice email"
   Context: 'Failed to send invoice email'

   Line 844: "Failed to generate QR code"
   Context: 'Failed to generate QR code'

   Line 874: "Failed to generate PDF"
   Context: 'Failed to generate PDF'

   Line 72: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: throw new Error('User not associated with a preschool'

   Line 86: "Failed to generate invoice number"
   Context: throw new Error('Failed to generate invoice number'

   Line 72: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: throw new Error('User not associated with a preschool'

   Line 341: "Invoice not found"
   Context: throw new Error('Invoice not found'

   Line 341: "Invoice not found"
   Context: throw new Error('Invoice not found'

   Line 377: "Only draft invoices can be deleted"
   Context: throw new Error('Only draft invoices can be deleted'

   Line 72: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 341: "Invoice not found"
   Context: throw new Error('Invoice not found'

   Line 72: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: throw new Error('User not associated with a preschool'

   Line 523: "Failed to fetch invoice statistics"
   Context: throw new Error('Failed to fetch invoice statistics'

   Line 72: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: throw new Error('User not associated with a preschool'

   Line 72: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: throw new Error('User not associated with a preschool'

   Line 72: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: throw new Error('User not associated with a preschool'

   Line 72: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 80: "User not associated with a preschool"
   Context: throw new Error('User not associated with a preschool'

üìÑ lib/services/offlineCacheService.ts:
   Line 96: "Failed to cache data:"
   Context: {
      console.error('Failed to cache data:', error);
      track('cache.storage_error', {
        key: keyPrefix,
        error: error instanceof Error ? error.message : 'Unknown error',
      }

   Line 156: "Failed to retrieve cached data:"
   Context: {
      console.error('Failed to retrieve cached data:', error);
      return null;
    }

   Line 170: "Failed to remove cached data:"
   Context: {
      console.error('Failed to remove cached data:', error);
    }

   Line 206: "Failed to clear user cache:"
   Context: {
      console.error('Failed to clear user cache:', error);
    }

   Line 243: "Failed to clear school cache:"
   Context: {
      console.error('Failed to clear school cache:', error);
    }

   Line 291: "Failed to get cache stats:"
   Context: {
      console.error('Failed to get cache stats:', error);
      return {
        totalSize: 0,
        entryCount: 0,
        oldestEntry: 0,
        newestEntry: 0,
        hitRate: 0,
      }

   Line 97: "Failed to cache data:"
   Context: console.error('Failed to cache data:'

   Line 157: "Failed to retrieve cached data:"
   Context: console.error('Failed to retrieve cached data:'

   Line 171: "Failed to remove cached data:"
   Context: console.error('Failed to remove cached data:'

   Line 207: "Failed to clear user cache:"
   Context: console.error('Failed to clear user cache:'

   Line 244: "Failed to clear school cache:"
   Context: console.error('Failed to clear school cache:'

   Line 292: "Failed to get cache stats:"
   Context: console.error('Failed to get cache stats:'

   Line 100: "Unknown error"
   Context: 'Unknown error'

üìÑ lib/services/parentJoinService.ts:
   Line 72: "Request not found"
   Context: 'Request not found'

   Line 72: "Request not found"
   Context: new Error('Request not found'

üìÑ lib/services/principalHubService.ts:
   Line 161: "Failed to fetch school stats:"
   Context: {
      console.error('Failed to fetch school stats:', error);
      throw new Error('Failed to load school statistics');
    }

   Line 244: "Failed to fetch teachers list:"
   Context: {
      console.error('Failed to fetch teachers list:', error);
      throw new Error('Failed to load teachers information');
    }

   Line 282: "Failed to create announcement:"
   Context: {
      console.error('Failed to create announcement:', error);
      throw new Error('Failed to create announcement');
    }

   Line 316: "Failed to fetch financial summary:"
   Context: {
      console.error('Failed to fetch financial summary:', error);
      throw new Error('Failed to load financial information');
    }

   Line 364: "Failed to fetch enrollment pipeline:"
   Context: {
      console.error('Failed to fetch enrollment pipeline:', error);
      // Safe fallback
      return {
        new_applications: 0,
        in_review: 0,
        approved: 0,
        enrolled_this_month: 0,
        waiting_list: 0,
      }

   Line 407: "Failed to fetch capacity metrics:"
   Context: {
      console.error('Failed to fetch capacity metrics:', error);
      return {
        capacity: 100,
        current_enrollment: 0,
        utilization_percentage: 0,
        available_spots: 100
      }

   Line 162: "Failed to fetch school stats:"
   Context: console.error('Failed to fetch school stats:'

   Line 245: "Failed to fetch teachers list:"
   Context: console.error('Failed to fetch teachers list:'

   Line 283: "Failed to create announcement:"
   Context: console.error('Failed to create announcement:'

   Line 317: "Failed to fetch financial summary:"
   Context: console.error('Failed to fetch financial summary:'

   Line 365: "Failed to fetch enrollment pipeline:"
   Context: console.error('Failed to fetch enrollment pipeline:'

   Line 408: "Failed to fetch capacity metrics:"
   Context: console.error('Failed to fetch capacity metrics:'

   Line 163: "Failed to load school statistics"
   Context: 'Failed to load school statistics'

   Line 246: "Failed to load teachers information"
   Context: 'Failed to load teachers information'

   Line 284: "Failed to create announcement"
   Context: 'Failed to create announcement'

   Line 318: "Failed to load financial information"
   Context: 'Failed to load financial information'

   Line 163: "Failed to load school statistics"
   Context: throw new Error('Failed to load school statistics'

   Line 246: "Failed to load teachers information"
   Context: throw new Error('Failed to load teachers information'

   Line 284: "Failed to create announcement"
   Context: throw new Error('Failed to create announcement'

   Line 318: "Failed to load financial information"
   Context: throw new Error('Failed to load financial information'

üìÑ lib/services/profileSettingsService.ts:
   Line 62: "Error getting invoice notification settings:"
   Context: {
      console.error('Error getting invoice notification settings:', error);
      throw new Error(`Failed to get notification settings: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 96: "Error updating notification preferences:"
   Context: {
      console.error('Error updating notification preferences:', error);
      throw new Error(`Failed to update preferences: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 129: "Could not clean up existing signatures:"
   Context: {
        console.warn('Could not clean up existing signatures:', cleanupError);
        // Continue with upload even if cleanup fails
      }

   Line 178: "Error uploading signature:"
   Context: {
      console.error('Error uploading signature:', error);
      throw new Error(`Failed to upload signature: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 205: "Could not remove signature file from storage:"
   Context: {
          console.warn('Could not remove signature file from storage:', storageError);
          // Continue with profile update even if storage removal fails
        }

   Line 225: "Error deleting signature:"
   Context: {
      console.error('Error deleting signature:', error);
      throw new Error(`Failed to delete signature: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 249: "Not authorized to send test notifications for other users"
   Context: {
          throw new Error('Not authorized to send test notifications for other users');
        }

   Line 282: "Error sending test notification:"
   Context: {
      console.error('Error sending test notification:', error);
      throw new Error(`Failed to send test notification: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 303: "Error getting user role:"
   Context: {
      console.error('Error getting user role:', error);
      return 'parent'; // Safe default
    }

   Line 315: "User not authenticated"
   Context: { available: false, error: 'User not authenticated' }

   Line 327: "Unknown storage error"
   Context: {
      return { 
        available: false, 
        error: error instanceof Error ? error.message : 'Unknown storage error' 
      }

   Line 63: "Error getting invoice notification settings:"
   Context: console.error('Error getting invoice notification settings:'

   Line 97: "Error updating notification preferences:"
   Context: console.error('Error updating notification preferences:'

   Line 130: "Could not clean up existing signatures:"
   Context: console.warn('Could not clean up existing signatures:'

   Line 179: "Error uploading signature:"
   Context: console.error('Error uploading signature:'

   Line 206: "Could not remove signature file from storage:"
   Context: console.warn('Could not remove signature file from storage:'

   Line 226: "Error deleting signature:"
   Context: console.error('Error deleting signature:'

   Line 283: "Error sending test notification:"
   Context: console.error('Error sending test notification:'

   Line 304: "Error getting user role:"
   Context: console.error('Error getting user role:'

   Line 30: "User not authenticated"
   Context: 'User not authenticated'

   Line 64: "Unknown error"
   Context: 'Unknown error'

   Line 30: "User not authenticated"
   Context: 'User not authenticated'

   Line 64: "Unknown error"
   Context: 'Unknown error'

   Line 30: "User not authenticated"
   Context: 'User not authenticated'

   Line 143: "Upload succeeded but no path returned"
   Context: 'Upload succeeded but no path returned'

   Line 64: "Unknown error"
   Context: 'Unknown error'

   Line 30: "User not authenticated"
   Context: 'User not authenticated'

   Line 64: "Unknown error"
   Context: 'Unknown error'

   Line 30: "User not authenticated"
   Context: 'User not authenticated'

   Line 250: "Not authorized to send test notifications for other users"
   Context: 'Not authorized to send test notifications for other users'

   Line 64: "Unknown error"
   Context: 'Unknown error'

   Line 30: "User not authenticated"
   Context: 'User not authenticated'

   Line 30: "User not authenticated"
   Context: 'User not authenticated'

   Line 330: "Unknown storage error"
   Context: 'Unknown storage error'

   Line 30: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 30: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 30: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 143: "Upload succeeded but no path returned"
   Context: throw new Error('Upload succeeded but no path returned'

   Line 30: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 30: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 250: "Not authorized to send test notifications for other users"
   Context: throw new Error('Not authorized to send test notifications for other users'

   Line 30: "User not authenticated"
   Context: throw new Error('User not authenticated'

üìÑ lib/services/realtimeSubscriptionService.ts:
   Line 477: "Error in realtime callback:"
   Context: {
          console.error('Error in realtime callback:', error);
        }

   Line 561: "Student Withdrawal"
   Context: {
        onNotification({
          title: 'Student Withdrawal',
          message: `${event.new.first_name}

   Line 580: "Payment Failed"
   Context: {
          onNotification({
            title: 'Payment Failed',
            message: `Payment of R${event.new.amount}

   Line 478: "Error in realtime callback:"
   Context: console.error('Error in realtime callback:'

   Line 556: "New Student Enrollment"
   Context: 'New Student Enrollment'

   Line 563: "Student Withdrawal"
   Context: 'Student Withdrawal'

   Line 575: "Payment Received"
   Context: 'Payment Received'

   Line 582: "Payment Failed"
   Context: 'Payment Failed'

   Line 594: "Teacher Login"
   Context: 'Teacher Login'

   Line 606: "Attendance Alert"
   Context: 'Attendance Alert'

   Line 607: "Unauthorized absence recorded"
   Context: 'Unauthorized absence recorded'

   Line 617: "Meeting Started"
   Context: 'Meeting Started'

üìÑ lib/services/seatService.ts:
   Line 31: "Error fetching seat limits:"
   Context: {
        console.error('Error fetching seat limits:', error);
        throw this.createError('NETWORK_ERROR', 'Failed to fetch seat limits', error.message);
      }

   Line 65: "Error assigning teacher seat:"
   Context: {
        console.error('Error assigning teacher seat:', error);
        
        // Map specific error messages to error codes
        if (error.message.includes('Only principals can assign')) {
          throw this.createError('PERMISSION_DENIED', 'Only principals can assign teacher seats');
        }

   Line 101: "Error revoking teacher seat:"
   Context: {
        console.error('Error revoking teacher seat:', error);
        
        // Map specific error messages to error codes
        if (error.message.includes('Only principals can revoke')) {
          throw this.createError('PERMISSION_DENIED', 'Only principals can revoke teacher seats');
        }

   Line 130: "Error listing teacher seats:"
   Context: {
        console.error('Error listing teacher seats:', error);
        throw this.createError('NETWORK_ERROR', 'Failed to list teacher seats', error.message);
      }

   Line 198: "SeatManagementError"
   Context: {
    const error = new Error(message) as SeatManagementError;
    error.code = code;
    error.details = details;
    error.name = 'SeatManagementError';
    return error;
  }

   Line 32: "Error fetching seat limits:"
   Context: console.error('Error fetching seat limits:'

   Line 51: "Unexpected error fetching seat limits:"
   Context: console.error('Unexpected error fetching seat limits:'

   Line 66: "Error assigning teacher seat:"
   Context: console.error('Error assigning teacher seat:'

   Line 87: "Unexpected error assigning teacher seat:"
   Context: console.error('Unexpected error assigning teacher seat:'

   Line 102: "Error revoking teacher seat:"
   Context: console.error('Error revoking teacher seat:'

   Line 117: "Unexpected error revoking teacher seat:"
   Context: console.error('Unexpected error revoking teacher seat:'

   Line 131: "Error listing teacher seats:"
   Context: console.error('Error listing teacher seats:'

   Line 140: "Unexpected error listing teacher seats:"
   Context: console.error('Unexpected error listing teacher seats:'

   Line 33: "Failed to fetch seat limits"
   Context: 'Failed to fetch seat limits'

   Line 38: "No seat limit data returned"
   Context: 'No seat limit data returned'

   Line 52: "Unexpected error fetching seat limits"
   Context: 'Unexpected error fetching seat limits'

   Line 69: "Only principals can assign"
   Context: 'Only principals can assign'

   Line 70: "Only principals can assign teacher seats"
   Context: 'Only principals can assign teacher seats'

   Line 72: "No teacher seats available"
   Context: 'No teacher seats available'

   Line 73: "No teacher seats available for this plan"
   Context: 'No teacher seats available for this plan'

   Line 75: "Target must be a teacher"
   Context: 'Target must be a teacher'

   Line 76: "Target user must be a teacher in the same school"
   Context: 'Target user must be a teacher in the same school'

   Line 79: "Failed to assign teacher seat"
   Context: 'Failed to assign teacher seat'

   Line 88: "Unexpected error assigning teacher seat"
   Context: 'Unexpected error assigning teacher seat'

   Line 105: "Only principals can revoke"
   Context: 'Only principals can revoke'

   Line 106: "Only principals can revoke teacher seats"
   Context: 'Only principals can revoke teacher seats'

   Line 109: "Failed to revoke teacher seat"
   Context: 'Failed to revoke teacher seat'

   Line 118: "Unexpected error revoking teacher seat"
   Context: 'Unexpected error revoking teacher seat'

   Line 132: "Failed to list teacher seats"
   Context: 'Failed to list teacher seats'

   Line 141: "Unexpected error listing teacher seats"
   Context: 'Unexpected error listing teacher seats'

   Line 202: "SeatManagementError"
   Context: 'SeatManagementError'

üìÑ lib/services/teacherDataService.ts:
   Line 26: "Teacher not found"
   Context: {
        return { success: false, error: 'Teacher not found' }

   Line 55: "Failed to create assignment"
   Context: {
        return { success: false, error: aErr?.message || 'Failed to create assignment' }

   Line 70: "No class or students selected"
   Context: {
        return { success: false, error: 'No class or students selected' }

   Line 74: "No active students found"
   Context: {
        return { success: false, error: 'No active students found' }

   Line 93: "Unexpected error"
   Context: {
      return { success: false, error: e?.message || 'Unexpected error' }

   Line 27: "Teacher not found"
   Context: 'Teacher not found'

   Line 30: "Lesson Assignment"
   Context: 'Lesson Assignment'

   Line 56: "Failed to create assignment"
   Context: 'Failed to create assignment'

   Line 71: "No class or students selected"
   Context: 'No class or students selected'

   Line 75: "No active students found"
   Context: 'No active students found'

   Line 94: "Unexpected error"
   Context: 'Unexpected error'

üìÑ lib/services/teacherInviteService.ts:
   Line 62: "Invalid or expired invite"
   Context: 'Invalid or expired invite'

   Line 62: "Invalid or expired invite"
   Context: throw new Error('Invalid or expired invite'

üìÑ lib/sessionManager.ts:
   Line 13: "SecureStore import failed (web or unsupported platform)"
   Context: {
  console.debug('SecureStore import failed (web or unsupported platform)', e);
}

   Line 136: "Failed to store session"
   Context: {
    reportError(new Error('Failed to store session'), { error }

   Line 149: "Failed to retrieve session:"
   Context: {
    console.error('Failed to retrieve session:', error);
    return null;
  }

   Line 161: "Failed to store profile:"
   Context: {
    console.error('Failed to store profile:', error);
  }

   Line 173: "Failed to retrieve profile:"
   Context: {
    console.error('Failed to retrieve profile:', error);
    return null;
  }

   Line 201: "Failed to clear stored data:"
   Context: {
    console.error('Failed to clear stored data:', error);
  }

   Line 259: "Failed to fetch user profile:"
   Context: {
      console.error('Failed to fetch user profile:', profileError);
      return null;
    }

   Line 264: "No profile row found for user:"
   Context: {
      // No profile row; construct a minimal placeholder to avoid crashes
      console.warn('No profile row found for user:', userId);
      const planTier = undefined;
      const capabilities = await getUserCapabilities('parent', planTier);
      return {
        id: userId,
        email: '',
        role: 'parent',
        first_name: '',
        last_name: '',
        avatar_url: '',
        organization_id: undefined,
        organization_name: undefined,
        seat_status: 'active',
        capabilities,
        created_at: new Date().toISOString(),
        last_login_at: null as any,
      }

   Line 303: "Failed to fetch user profile"
   Context: {
    reportError(new Error('Failed to fetch user profile'), { userId, error }

   Line 401: "No session returned from refresh"
   Context: {
    throw new Error('No session returned from refresh');
  }

   Line 471: "t retry for "
   Context: {
      // Don't retry for "Already Used" errors - this means a concurrent refresh succeeded
      if (error.message.includes('Already Used')) {
        console.log('[SessionManager] Refresh token already used (concurrent refresh), fetching current session');
        // Try to get the session that was just refreshed
        const currentSession = await getStoredSession();
        if (currentSession) {
          return currentSession;
        }

   Line 506: "Unknown error"
   Context: {
      attempts: attempt,
      error: error instanceof Error ? error.message : 'Unknown error',
      final: true,
    }

   Line 549: "Auto-refresh failed:"
   Context: {
        console.error('Auto-refresh failed:', error);
      }

   Line 586: "Session initialization failed"
   Context: {
    reportError(new Error('Session initialization failed'), { error }

   Line 659: "Invalid credentials"
   Context: {
      return { session: null, profile: null, error: 'Invalid credentials' }

   Line 676: "[SessionManager] Failed to load user profile for user:"
   Context: {
      console.error('[SessionManager] Failed to load user profile for user:', data.user.id);
      return { session: null, profile: null, error: 'Failed to load user profile' }

   Line 690: "[SessionManager] Storage error:"
   Context: {
      console.error('[SessionManager] Storage error:', storeError);
      throw new Error(`Storage failed: ${storeError instanceof Error ? storeError.message : 'Unknown error'}

   Line 699: "Could not update last_login_at via RPC:"
   Context: {
        console.warn('Could not update last_login_at via RPC:', lastLoginError);
      }

   Line 702: "Error updating last_login_at via RPC:"
   Context: {
      console.warn('Error updating last_login_at via RPC:', updateError);
      // Continue anyway - this is not critical for login success
    }

   Line 731: "[SessionManager] signInWithSession caught error:"
   Context: {
    console.error('[SessionManager] signInWithSession caught error:', error);
    console.error('[SessionManager] Error details:', {
      name: error instanceof Error ? error.name : 'Unknown',
      message: error instanceof Error ? error.message : String(error),
      stack: error instanceof Error ? error.stack : 'No stack',
    }

   Line 739: "Sign-in failed"
   Context: { 
      session: null, 
      profile: null, 
      error: error instanceof Error ? error.message : 'Sign-in failed' 
    }

   Line 814: "Session expired, attempting refresh"
   Context: {
  const session = await getStoredSession();
  
  if (!session) return null;

  // Check if session is expired or needs refresh
  const now = Date.now();
  const timeUntilExpiry = session.expires_at * 1000 - now;
  
  // If completely expired, try to refresh anyway (token might still be valid)
  if (timeUntilExpiry <= 0) {
    console.log('Session expired, attempting refresh');
    const refreshedSession = await refreshSession(session.refresh_token);
    if (refreshedSession) {
      setupAutoRefresh(refreshedSession);
      return refreshedSession;
    }

   Line 837: "Session needs refresh, attempting refresh"
   Context: {
    console.log('Session needs refresh, attempting refresh');
    const refreshedSession = await refreshSession(session.refresh_token);
    if (refreshedSession) {
      setupAutoRefresh(refreshedSession);
      return refreshedSession;
    }

   Line 150: "Failed to retrieve session:"
   Context: console.error('Failed to retrieve session:'

   Line 162: "Failed to store profile:"
   Context: console.error('Failed to store profile:'

   Line 174: "Failed to retrieve profile:"
   Context: console.error('Failed to retrieve profile:'

   Line 202: "Failed to clear stored data:"
   Context: console.error('Failed to clear stored data:'

   Line 260: "Failed to fetch user profile:"
   Context: console.error('Failed to fetch user profile:'

   Line 266: "No profile row found for user:"
   Context: console.warn('No profile row found for user:'

   Line 550: "Auto-refresh failed:"
   Context: console.error('Auto-refresh failed:'

   Line 700: "Could not update last_login_at via RPC:"
   Context: console.warn('Could not update last_login_at via RPC:'

   Line 703: "Error updating last_login_at via RPC:"
   Context: console.warn('Error updating last_login_at via RPC:'

   Line 825: "Session expired, attempting refresh"
   Context: console.log('Session expired, attempting refresh'

   Line 838: "Session needs refresh, attempting refresh"
   Context: console.log('Session needs refresh, attempting refresh'

   Line 845: "Session refresh failed, using current session"
   Context: console.warn('Session refresh failed, using current session'

   Line 137: "Failed to store session"
   Context: 'Failed to store session'

   Line 304: "Failed to fetch user profile"
   Context: 'Failed to fetch user profile'

   Line 402: "No session returned from refresh"
   Context: 'No session returned from refresh'

   Line 472: "Already Used"
   Context: "Already Used"

   Line 473: "Already Used"
   Context: 'Already Used'

   Line 482: "Invalid Refresh Token"
   Context: 'Invalid Refresh Token'

   Line 483: "Refresh Token Not Found"
   Context: 'Refresh Token Not Found'

   Line 508: "Unknown error"
   Context: 'Unknown error'

   Line 512: "Session refresh failed after all attempts"
   Context: 'Session refresh failed after all attempts'

   Line 587: "Session initialization failed"
   Context: 'Session initialization failed'

   Line 660: "Invalid credentials"
   Context: 'Invalid credentials'

   Line 678: "Failed to load user profile"
   Context: 'Failed to load user profile'

   Line 508: "Unknown error"
   Context: 'Unknown error'

   Line 736: "No stack"
   Context: 'No stack'

   Line 137: "Failed to store session"
   Context: new Error('Failed to store session'

   Line 304: "Failed to fetch user profile"
   Context: new Error('Failed to fetch user profile'

   Line 402: "No session returned from refresh"
   Context: throw new Error('No session returned from refresh'

   Line 442: "Invalid refresh token: empty or null"
   Context: throw new Error('Invalid refresh token: empty or null'

   Line 512: "Session refresh failed after all attempts"
   Context: new Error('Session refresh failed after all attempts'

   Line 587: "Session initialization failed"
   Context: new Error('Session initialization failed'

   Line 738: "Sign-in failed"
   Context: new Error('Sign-in failed'

   Line 807: "Sign-out failed"
   Context: new Error('Sign-out failed'

üìÑ lib/smart-memo.ts:
   Line 146: "Deferred computation failed"
   Context: {
        logger.warn('Deferred computation failed', error);
      }

   Line 147: "Deferred computation failed"
   Context: 'Deferred computation failed'

   Line 305: "Use deferred computation for heavy work"
   Context: 'Use deferred computation for heavy work'

üìÑ lib/supabase.ts:
   Line 11: "SecureStore import failed (web or unsupported platform)"
   Context: {
  console.debug('SecureStore import failed (web or unsupported platform)', e);
}

   Line 56: "..."
   Context: {
  const meta = { 
    hasUrl: !!url, 
    hasAnon: !!anon,
    urlLength: url ? url.length : 0,
    anonLength: anon ? anon.length : 0,
    urlStart: url ? url.substring(0, 25) + '...' : 'MISSING',
    anonStart: anon ? anon.substring(0, 20) + '...' : 'MISSING',
    env: envName,
  }

   Line 171: "string"
   Context: {
    const originalConsoleLog = console.log;
    console.log = (...args: any[]) => {
      // Filter out GoTrueClient session management spam
      const msg = args[0];
      if (typeof msg === 'string' && (
        msg.includes('GoTrueClient@') && (
          msg.includes('#_acquireLock') ||
          msg.includes('#__loadSession()') ||
          msg.includes('#_useSession') ||
          msg.includes('#getSession() session from storage')
        )
      )) {
        return; // Suppress
      }

   Line 198: "User signed out"
   Context: {
      logger.info('User signed out');
      // Clear any stale session data
      storage.removeItem('edudash_user_session').catch(() => {}

   Line 222: "undefined"
   Context: {
  if (!client) {
    const isDev = typeof __DEV__ !== 'undefined' && __DEV__;
    const isTest = process.env.NODE_ENV === 'test';
    
    if (isDev || isTest) {
      // Development/test environment - show detailed debugging info
      const url = process.env.EXPO_PUBLIC_SUPABASE_URL || '';
      const anon = process.env.EXPO_PUBLIC_SUPABASE_ANON_KEY || '';
      
      let errorMsg = 'Supabase client not initialized.\n';
      
      if (!url && !anon) {
        errorMsg += 'BOTH environment variables are missing:\n';
        errorMsg += '- EXPO_PUBLIC_SUPABASE_URL\n';
        errorMsg += '- EXPO_PUBLIC_SUPABASE_ANON_KEY\n';
      }

   Line 240: "Missing: EXPO_PUBLIC_SUPABASE_ANON_KEY\n"
   Context: {
        errorMsg += 'Missing: EXPO_PUBLIC_SUPABASE_ANON_KEY\n';
      }

   Line 242: "Environment variables are present but client failed to initialize.\n"
   Context: {
        errorMsg += 'Environment variables are present but client failed to initialize.\n';
        errorMsg += `URL length: ${url.length}

   Line 253: "Unable to connect to the service. Please check your internet connection and try again."
   Context: {
      // Production environment - show user-friendly message
      throw new Error('Unable to connect to the service. Please check your internet connection and try again.');
    }

   Line 197: "Token refreshed successfully"
   Context: 'Token refreshed successfully'

   Line 199: "User signed out"
   Context: 'User signed out'

   Line 255: "Unable to connect to the service. Please check your internet connection and try again."
   Context: throw new Error('Unable to connect to the service. Please check your internet connection and try again.'

üìÑ lib/telemetryDebug.ts:
   Line 4: "Test event from device"
   Context: {
  try {
    Sentry.Native.captureMessage('Test event from device', { level: 'info' as any }

   Line 6: "Test event from device"
   Context: 'Test event from device'

   Line 8: "Sentry test exception"
   Context: 'Sentry test exception'

   Line 8: "Sentry test exception"
   Context: new Error('Sentry test exception'

üìÑ lib/tenant/client.ts:
   Line 121: "Failed to load tenant info"
   Context: {
      const errorMessage = err instanceof Error ? err.message : 'Failed to load tenant info';
      setError(errorMessage);
      console.error('Error fetching tenant info:', err);
      
      track('tenant.load_error', {
        user_id: user.id,
        error: errorMessage,
      }

   Line 184: "super_admin"
   Context: {
  if (userRole === 'super_admin') {
    // Super admins can operate without tenant scope in some cases
    if (!schoolId) {
      throw new Error('School ID required even for super admin operations');
    }

   Line 192: "School ID is required for this operation"
   Context: {
    throw new Error('School ID is required for this operation');
  }

   Line 202: "No school assigned to current user"
   Context: {
  const schoolId = profile?.organization_id;
  
  if (!schoolId) {
    throw new Error('No school assigned to current user');
  }

   Line 124: "Error fetching tenant info:"
   Context: console.error('Error fetching tenant info:'

   Line 122: "Failed to load tenant info"
   Context: 'Failed to load tenant info'

   Line 188: "School ID required even for super admin operations"
   Context: 'School ID required even for super admin operations'

   Line 193: "School ID is required for this operation"
   Context: 'School ID is required for this operation'

   Line 206: "No school assigned to current user"
   Context: 'No school assigned to current user'

   Line 188: "School ID required even for super admin operations"
   Context: throw new Error('School ID required even for super admin operations'

   Line 193: "School ID is required for this operation"
   Context: throw new Error('School ID is required for this operation'

   Line 206: "No school assigned to current user"
   Context: throw new Error('No school assigned to current user'

üìÑ lib/tenant/server.ts:
   Line 26: "No authenticated user found"
   Context: {
      console.warn('No authenticated user found');
      return null;
    }

   Line 43: "Failed to fetch user profile:"
   Context: {
      console.error('Failed to fetch user profile:', profileError);
      return null;
    }

   Line 49: "User has no school assigned"
   Context: {
      console.warn('User has no school assigned');
      return null;
    }

   Line 60: "Error getting tenant context:"
   Context: {
    console.error('Error getting tenant context:', error);
    return null;
  }

   Line 97: "Error validating school access:"
   Context: {
    console.error('Error validating school access:', error);
    return false;
  }

   Line 107: "User not authenticated"
   Context: {
  const context = await getTenantContext();
  
  if (!context) {
    throw new Error('User not authenticated');
  }

   Line 107: "User not authenticated"
   Context: {
  const context = await getTenantContext();
  
  if (!context) {
    throw new Error('User not authenticated');
  }

   Line 275: "Access denied to requested school"
   Context: {
    const hasAccess = await validateSchoolAccess(schoolId);
    if (!hasAccess) {
      throw new Error('Access denied to requested school');
    }

   Line 301: "Tenant context operation failed:"
   Context: {
    console.error('Tenant context operation failed:', error);
    
    // Track error for monitoring
    const context = await getTenantContext();
    if (context) {
      track('tenant.operation_error', {
        user_id: context.userId,
        school_id: schoolId,
        error: error instanceof Error ? error.message : 'Unknown error',
      }

   Line 27: "No authenticated user found"
   Context: console.warn('No authenticated user found'

   Line 44: "Failed to fetch user profile:"
   Context: console.error('Failed to fetch user profile:'

   Line 50: "User has no school assigned"
   Context: console.warn('User has no school assigned'

   Line 61: "Error getting tenant context:"
   Context: console.error('Error getting tenant context:'

   Line 98: "Error validating school access:"
   Context: console.error('Error validating school access:'

   Line 302: "Tenant context operation failed:"
   Context: console.error('Tenant context operation failed:'

   Line 27: "No authenticated user found"
   Context: 'No authenticated user found'

   Line 50: "User has no school assigned"
   Context: 'User has no school assigned'

   Line 111: "User not authenticated"
   Context: 'User not authenticated'

   Line 125: "Access denied to requested school"
   Context: 'Access denied to requested school'

   Line 111: "User not authenticated"
   Context: 'User not authenticated'

   Line 125: "Access denied to requested school"
   Context: 'Access denied to requested school'

   Line 310: "Unknown error"
   Context: 'Unknown error'

   Line 111: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 125: "Access denied to requested school"
   Context: throw new Error('Access denied to requested school'

   Line 111: "User not authenticated"
   Context: throw new Error('User not authenticated'

   Line 125: "Access denied to requested school"
   Context: throw new Error('Access denied to requested school'

üìÑ lib/testing/integrationValidation.ts:
   Line 124: "‚ùå System validation failed:"
   Context: {
      console.error('‚ùå System validation failed:', error);
      healthCheck.overall = 'critical';
      healthCheck.details.errors = [`Validation error: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 151: "Database Connectivity"
   Context: {
        return {
          testName: 'Database Connectivity',
          status: 'failed',
          message: `Database connection failed: ${error.message}

   Line 161: "Database Connectivity"
   Context: {
        testName: 'Database Connectivity',
        status: 'passed',
        message: `Database connected successfully (${latency}

   Line 169: "Database Connectivity"
   Context: {
      return {
        testName: 'Database Connectivity',
        status: 'failed',
        message: `Database test failed: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 182: "üîç Testing business logic services..."
   Context: {
    console.log('üîç Testing business logic services...');
    const startTime = Date.now();
    const results: TestResult[] = [];

    // Test Financial Analytics Service
    try {
      const testStart = Date.now();
      const financialMetrics = await FinancialAnalyticsService.calculateFinancialMetrics(schoolId);
      
      results.push({
        testName: 'Financial Analytics Service',
        status: financialMetrics ? 'passed' : 'failed',
        message: financialMetrics ? 
          `Financial metrics calculated: R${financialMetrics.monthlyRevenue}

   Line 201: "Financial Analytics Service"
   Context: {
      results.push({
        testName: 'Financial Analytics Service',
        status: 'failed',
        message: `Financial service error: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 211: "Attendance Analytics Service"
   Context: {
      const testStart = Date.now();
      const attendanceMetrics = await AttendanceAnalyticsService.calculateAttendanceMetrics(schoolId);
      
      results.push({
        testName: 'Attendance Analytics Service',
        status: attendanceMetrics ? 'passed' : 'failed',
        message: attendanceMetrics ? 
          `Attendance metrics calculated: ${attendanceMetrics.overallRate}

   Line 224: "Attendance Analytics Service"
   Context: {
      results.push({
        testName: 'Attendance Analytics Service',
        status: 'failed',
        message: `Attendance service error: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 234: "Performance Analytics Service"
   Context: {
      const testStart = Date.now();
      const performanceMetrics = await PerformanceAnalyticsService.calculatePerformanceMetrics(schoolId);
      
      results.push({
        testName: 'Performance Analytics Service',
        status: performanceMetrics ? 'passed' : 'failed',
        message: performanceMetrics ? 
          `Performance metrics calculated: ${performanceMetrics.academicPerformance.averageGrade}

   Line 247: "Performance Analytics Service"
   Context: {
      results.push({
        testName: 'Performance Analytics Service',
        status: 'failed',
        message: `Performance service error: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 257: "Student Analytics Service"
   Context: {
      const testStart = Date.now();
      const studentAnalytics = await StudentAnalyticsService.calculateStudentAnalytics(schoolId);
      
      results.push({
        testName: 'Student Analytics Service',
        status: studentAnalytics ? 'passed' : 'failed',
        message: studentAnalytics ? 
          `Student analytics calculated: ${studentAnalytics.totalStudents}

   Line 270: "Student Analytics Service"
   Context: {
      results.push({
        testName: 'Student Analytics Service',
        status: 'failed',
        message: `Student service error: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 280: "Teacher Analytics Service"
   Context: {
      const testStart = Date.now();
      const teacherAnalytics = await TeacherAnalyticsService.calculateTeacherAnalytics(schoolId);
      
      results.push({
        testName: 'Teacher Analytics Service',
        status: teacherAnalytics ? 'passed' : 'failed',
        message: teacherAnalytics ? 
          `Teacher analytics calculated: ${teacherAnalytics.totalTeachers}

   Line 293: "Teacher Analytics Service"
   Context: {
      results.push({
        testName: 'Teacher Analytics Service',
        status: 'failed',
        message: `Teacher service error: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 302: "Business Logic Services"
   Context: {
      suiteName: 'Business Logic Services',
      totalTests: results.length,
      passed: results.filter(r => r.status === 'passed').length,
      failed: results.filter(r => r.status === 'failed').length,
      warnings: results.filter(r => r.status === 'warning').length,
      duration: Date.now() - startTime,
      results
    }

   Line 318: "üîç Testing real-time functionality..."
   Context: {
    const startTime = Date.now();
    
    try {
      console.log('üîç Testing real-time functionality...');

if (!assertSupabase) {
        return {
          testName: 'Real-time Functionality',
          status: 'failed',
          message: 'Supabase client not available for real-time testing',
          duration: Date.now() - startTime
        }

   Line 355: "Real-time subscription test failed (setup)"
   Context: {
        console.debug('Real-time subscription test failed (setup)', error);
        console.error('Real-time subscription test failed:', error);
      }

   Line 360: "Real-time Functionality"
   Context: {
        return {
          testName: 'Real-time Functionality',
          status: 'warning',
          message: 'Real-time subscriptions created but not tested with live data',
          duration: Date.now() - startTime,
          details: { channels: 0, note: 'Live testing skipped to avoid side effects' }

   Line 370: "Real-time Functionality"
   Context: {
        testName: 'Real-time Functionality',
        status: 'passed',
        message: 'Real-time subscription system functional',
        duration: Date.now() - startTime,
        details: { channels, subscriptionTested: true }

   Line 378: "Real-time Functionality"
   Context: {
      return {
        testName: 'Real-time Functionality',
        status: 'failed',
        message: `Real-time test failed: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 391: "üîç Testing dashboard integration..."
   Context: {
    const startTime = Date.now();
    
    try {
      console.log('üîç Testing dashboard integration...');

      const components = [];
      let issues = [];

      // Test that business logic services can be called (which dashboards depend on)
      try {
        const financialData = await FinancialAnalyticsService.calculateFinancialMetrics(schoolId);
        if (financialData) {
          components.push('Financial Metrics');
        }

   Line 406: "Financial dashboard integration issue details"
   Context: {
        console.debug('Financial dashboard integration issue details', error);
        issues.push('Financial dashboard integration issue');
      }

   Line 411: "Attendance Metrics"
   Context: {
        const attendanceData = await AttendanceAnalyticsService.calculateAttendanceMetrics(schoolId);
        if (attendanceData) {
          components.push('Attendance Metrics');
        }

   Line 416: "Attendance dashboard integration issue details"
   Context: {
        console.debug('Attendance dashboard integration issue details', error);
        issues.push('Attendance dashboard integration issue');
      }

   Line 421: "Student Analytics"
   Context: {
        const studentData = await StudentAnalyticsService.calculateStudentAnalytics(schoolId);
        if (studentData) {
          components.push('Student Analytics');
        }

   Line 426: "Student dashboard integration issue details"
   Context: {
        console.debug('Student dashboard integration issue details', error);
        issues.push('Student dashboard integration issue');
      }

   Line 432: "Meeting Room System"
   Context: {
        // Since meeting rooms are UI components, we just check if the service dependencies are available
components.push('Meeting Room System');
      }

   Line 435: "Meeting room system integration issue details"
   Context: {
        console.debug('Meeting room system integration issue details', error);
        issues.push('Meeting room system integration issue');
      }

   Line 443: "Dashboard Integration"
   Context: {
        testName: 'Dashboard Integration',
        status,
        message: `Dashboard integration: ${components.length}

   Line 456: "Dashboard Integration"
   Context: {
      return {
        testName: 'Dashboard Integration',
        status: 'failed',
        message: `Dashboard integration test failed: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 480: "N/A"
   Context: {healthCheck.details.databaseLatency || 'N/A'}

   Line 532: "failed"
   Context: {
    try {
      const dbCheck = await this.validateDatabaseConnectivity();
      
      if (dbCheck.status === 'failed') {
        return {
          status: 'critical',
          message: 'Database connectivity failed',
          timestamp: new Date().toISOString()
        }

   Line 547: "critical"
   Context: {
        return {
          status: 'critical',
          message: 'Multiple business logic services failing',
          timestamp: new Date().toISOString()
        }

   Line 553: "warning"
   Context: {
        return {
          status: 'warning',
          message: 'Some business logic services have issues',
          timestamp: new Date().toISOString()
        }

   Line 561: "healthy"
   Context: {
        status: 'healthy',
        message: 'All systems operational',
        timestamp: new Date().toISOString()
      }

   Line 567: "critical"
   Context: {
      return {
        status: 'critical',
        message: `Health check failed: ${error instanceof Error ? error.message : 'Unknown error'}

   Line 357: "Real-time subscription test failed:"
   Context: console.error('Real-time subscription test failed:'

   Line 127: "Unknown error"
   Context: 'Unknown error'

   Line 153: "Database Connectivity"
   Context: 'Database Connectivity'

   Line 153: "Database Connectivity"
   Context: 'Database Connectivity'

   Line 153: "Database Connectivity"
   Context: 'Database Connectivity'

   Line 127: "Unknown error"
   Context: 'Unknown error'

   Line 193: "Financial Analytics Service"
   Context: 'Financial Analytics Service'

   Line 197: "Failed to calculate financial metrics"
   Context: 'Failed to calculate financial metrics'

   Line 193: "Financial Analytics Service"
   Context: 'Financial Analytics Service'

   Line 127: "Unknown error"
   Context: 'Unknown error'

   Line 216: "Attendance Analytics Service"
   Context: 'Attendance Analytics Service'

   Line 220: "Failed to calculate attendance metrics"
   Context: 'Failed to calculate attendance metrics'

   Line 216: "Attendance Analytics Service"
   Context: 'Attendance Analytics Service'

   Line 127: "Unknown error"
   Context: 'Unknown error'

   Line 239: "Performance Analytics Service"
   Context: 'Performance Analytics Service'

   Line 243: "Failed to calculate performance metrics"
   Context: 'Failed to calculate performance metrics'

   Line 239: "Performance Analytics Service"
   Context: 'Performance Analytics Service'

   Line 127: "Unknown error"
   Context: 'Unknown error'

   Line 262: "Student Analytics Service"
   Context: 'Student Analytics Service'

   Line 266: "Failed to calculate student analytics"
   Context: 'Failed to calculate student analytics'

   Line 262: "Student Analytics Service"
   Context: 'Student Analytics Service'

   Line 127: "Unknown error"
   Context: 'Unknown error'

   Line 285: "Teacher Analytics Service"
   Context: 'Teacher Analytics Service'

   Line 289: "Failed to calculate teacher analytics"
   Context: 'Failed to calculate teacher analytics'

   Line 285: "Teacher Analytics Service"
   Context: 'Teacher Analytics Service'

   Line 127: "Unknown error"
   Context: 'Unknown error'

   Line 303: "Business Logic Services"
   Context: 'Business Logic Services'

   Line 366: "Live testing skipped to avoid side effects"
   Context: 'Live testing skipped to avoid side effects'

   Line 127: "Unknown error"
   Context: 'Unknown error'

   Line 404: "Financial Metrics"
   Context: 'Financial Metrics'

   Line 407: "Financial dashboard integration issue details"
   Context: 'Financial dashboard integration issue details'

   Line 408: "Financial dashboard integration issue"
   Context: 'Financial dashboard integration issue'

   Line 414: "Attendance Metrics"
   Context: 'Attendance Metrics'

   Line 417: "Attendance dashboard integration issue details"
   Context: 'Attendance dashboard integration issue details'

   Line 418: "Attendance dashboard integration issue"
   Context: 'Attendance dashboard integration issue'

   Line 424: "Student Analytics"
   Context: 'Student Analytics'

   Line 427: "Student dashboard integration issue details"
   Context: 'Student dashboard integration issue details'

   Line 428: "Student dashboard integration issue"
   Context: 'Student dashboard integration issue'

   Line 434: "Meeting Room System"
   Context: 'Meeting Room System'

   Line 436: "Meeting room system integration issue details"
   Context: 'Meeting room system integration issue details'

   Line 437: "Meeting room system integration issue"
   Context: 'Meeting room system integration issue'

   Line 444: "Dashboard Integration"
   Context: 'Dashboard Integration'

   Line 444: "Dashboard Integration"
   Context: 'Dashboard Integration'

   Line 127: "Unknown error"
   Context: 'Unknown error'

   Line 497: "No issues detected"
   Context: 'No issues detected'

   Line 539: "Database connectivity failed"
   Context: 'Database connectivity failed'

   Line 550: "Multiple business logic services failing"
   Context: 'Multiple business logic services failing'

   Line 556: "Some business logic services have issues"
   Context: 'Some business logic services have issues'

   Line 563: "All systems operational"
   Context: 'All systems operational'

   Line 127: "Unknown error"
   Context: 'Unknown error'

üìÑ lib/types/invoice.ts:
   Line 517: "#4F46E5"
   Context: {
  primary_color: '#4F46E5',
  secondary_color: '#7C3AED',
  accent_color: '#00f5ff',
  font_family: 'Inter',
  footer_text: 'Thank you for your payment!',
  payment_terms: 'Payment due within 30 days',
  include_qr_code: true,
  include_payment_terms: true,
  show_tax_breakdown: true,
  auto_invoice_numbering: true,
}

   Line 530: "Standard Invoice"
   Context: {
  name: 'Standard Invoice',
  description: 'Default invoice template',
  template_data: {}

   Line 531: "Standard Invoice"
   Context: 'Standard Invoice'

   Line 532: "Default invoice template"
   Context: 'Default invoice template'

   Line 542: "Card Payment"
   Context: 'Card Payment'

   Line 543: "Bank Transfer"
   Context: 'Bank Transfer'

   Line 554: "Partially Paid"
   Context: 'Partially Paid'

   Line 554: "Partially Paid"
   Context: 'Partially Paid'

   Line 562: "Paid in Full"
   Context: 'Paid in Full'

üìÑ lib/types/profile.ts:
   Line 237: "New Invoice Created"
   Context: {
  new_invoice: 'New Invoice Created',
  invoice_sent: 'Invoice Sent',
  overdue_reminder: 'Overdue Reminders',
  payment_confirmed: 'Payment Confirmed',
  invoice_viewed: 'Invoice Viewed',
}

   Line 238: "New Invoice Created"
   Context: 'New Invoice Created'

   Line 239: "Invoice Sent"
   Context: 'Invoice Sent'

   Line 240: "Overdue Reminders"
   Context: 'Overdue Reminders'

   Line 241: "Payment Confirmed"
   Context: 'Payment Confirmed'

   Line 250: "Push Notifications"
   Context: 'Push Notifications'

üìÑ lib/utils/async.ts:
   Line 44: "Operation aborted"
   Context: {
          reject(new Error('Operation aborted'));
        }

   Line 114: "Wait aborted"
   Context: {
  return new Promise<void>((resolve, reject) => {
    if (signal?.aborted) {
      reject(new Error('Wait aborted'));
      return;
    }

   Line 128: "Wait aborted"
   Context: {
      clearTimeout(timeoutId);
      reject(new Error('Wait aborted'));
    }

   Line 167: "Retry aborted"
   Context: {
    if (signal?.aborted) {
      throw new Error('Retry aborted');
    }

   Line 45: "Operation aborted"
   Context: 'Operation aborted'

   Line 117: "Wait aborted"
   Context: 'Wait aborted'

   Line 117: "Wait aborted"
   Context: 'Wait aborted'

   Line 169: "Retry aborted"
   Context: 'Retry aborted'

   Line 185: "Retry failed"
   Context: 'Retry failed'

   Line 45: "Operation aborted"
   Context: new Error('Operation aborted'

   Line 117: "Wait aborted"
   Context: new Error('Wait aborted'

   Line 117: "Wait aborted"
   Context: new Error('Wait aborted'

   Line 169: "Retry aborted"
   Context: throw new Error('Retry aborted'

   Line 185: "Retry failed"
   Context: new Error('Retry failed'

üìÑ lib/utils/eventEmitter.ts:
   Line 10: "EventEmitter3 not available, using custom implementation"
   Context: {
    // Fallback to custom implementation if eventemitter3 is not available
    console.warn('EventEmitter3 not available, using custom implementation');
    
    class WebEventEmitter {
      private listeners: Map<string, Function[]> = new Map();

      addListener(eventName: string, callback: Function) {
        if (!this.listeners.has(eventName)) {
          this.listeners.set(eventName, []);
        }

   Line 12: "EventEmitter3 not available, using custom implementation"
   Context: console.warn('EventEmitter3 not available, using custom implementation'

üìÑ lib/utils/phoneUtils.ts:
   Line 132: "Phone number is too short"
   Context: {
    return 'Phone number is too short';
  }

   Line 136: "Phone number is too long"
   Context: {
    return 'Phone number is too long';
  }

   Line 140: "Invalid mobile number prefix. Must start with 06, 07, or 08"
   Context: {
    const localNumber = digitsOnly.substring(1);
    if (!isValidSAMobileNumber(localNumber)) {
      return 'Invalid mobile number prefix. Must start with 06, 07, or 08';
    }

   Line 129: "Please enter a phone number"
   Context: 'Please enter a phone number'

   Line 133: "Phone number is too short"
   Context: 'Phone number is too short'

   Line 137: "Phone number is too long"
   Context: 'Phone number is too long'

   Line 197: "Phone number is required"
   Context: 'Phone number is required'

üìÑ lib/validation/educational-schemas.ts:
   Line 37: "File name is required"
   Context: {
  id: z.string().uuid().optional(),
  name: z.string().min(1, 'File name is required').max(255, 'File name too long'),
  size: FileSizeSchema,
  type: z.string().regex(/^[a-zA-Z0-9-_\/]+$/, 'Invalid file type'),
  extension: FileExtensionSchema,
  url: z.string().url('Invalid file URL').optional(),
  uploaded_at: z.string().datetime().optional(),
  description: z.string().max(500, 'Description too long').optional(),
}

   Line 51: "Date must be in the future"
   Context: {
  message: 'Date must be in the future'
}

   Line 57: "Date must be in the past or present"
   Context: {
  message: 'Date must be in the past or present'
}

   Line 68: "Academic year must be consecutive years (e.g., 2024-2025)"
   Context: {
  message: 'Academic year must be consecutive years (e.g., 2024-2025)'
}

   Line 82: "Course title must be at least 3 characters"
   Context: {
  // Basic information
  title: z.string()
    .min(3, 'Course title must be at least 3 characters')
    .max(200, 'Course title cannot exceed 200 characters')
    .regex(/^[a-zA-Z0-9\s\-:()&.,!?]+$/, 'Course title contains invalid characters'),
    
  code: z.string()
    .min(2, 'Course code must be at least 2 characters')
    .max(20, 'Course code cannot exceed 20 characters')
    .regex(/^[A-Z0-9\-_]+$/, 'Course code must be uppercase letters, numbers, hyphens, or underscores'),
    
  description: z.string()
    .min(10, 'Course description must be at least 10 characters')
    .max(5000, 'Course description cannot exceed 5000 characters'),
    
  // Academic details
  credits: z.number()
    .min(0.5, 'Credits must be at least 0.5')
    .max(12, 'Credits cannot exceed 12')
    .refine((credits) => credits % 0.5 === 0, {
      message: 'Credits must be in 0.5 increments'
    }

   Line 164: "End date must be after start date"
   Context: {
  message: 'End date must be after start date',
  path: ['end_date']
}

   Line 173: "Join code is required when join code is enabled"
   Context: {
  message: 'Join code is required when join code is enabled',
  path: ['join_code']
}

   Line 182: "Join code expiration must be in the future"
   Context: {
  message: 'Join code expiration must be in the future',
  path: ['join_code_expires_at']
}

   Line 191: "Assignment title must be at least 3 characters"
   Context: {
  // Basic information
  title: z.string()
    .min(3, 'Assignment title must be at least 3 characters')
    .max(200, 'Assignment title cannot exceed 200 characters'),
    
  description: z.string()
    .min(10, 'Assignment description must be at least 10 characters')
    .max(10000, 'Assignment description cannot exceed 10000 characters'),
    
  // Assignment type and settings
  assignment_type: z.enum([
    'homework', 'quiz', 'exam', 'project', 'discussion', 'presentation',
    'lab', 'essay', 'research', 'group_work', 'other'
  ]),
  
  submission_type: z.enum(['text', 'file', 'both', 'none']).default('both'),
  
  // Grading
  max_points: z.number()
    .min(0.5, 'Assignment must be worth at least 0.5 points')
    .max(1000, 'Assignment cannot exceed 1000 points'),
    
  grading_type: z.enum(['points', 'percentage', 'letter_grade', 'pass_fail', 'rubric'])
    .default('points'),
    
  // Timing and availability
  assigned_at: z.string().datetime().optional(),
  due_at: z.string().datetime().optional(),
  available_from: z.string().datetime().optional(),
  available_until: z.string().datetime().optional(),
  
  // Submission settings
  allow_late_submissions: z.boolean().default(true),
  late_penalty_percent: z.number()
    .min(0, 'Late penalty cannot be negative')
    .max(100, 'Late penalty cannot exceed 100%')
    .default(0),
    
  max_attempts: z.number()
    .min(0, 'Max attempts cannot be negative')
    .max(10, 'Cannot allow more than 10 attempts')
    .default(1),
    
  time_limit_minutes: z.number()
    .min(1, 'Time limit must be at least 1 minute')
    .max(480, 'Time limit cannot exceed 8 hours (480 minutes)')
    .optional(),
    
  // File submissions
  allowed_file_types: z.array(FileExtensionSchema)
    .max(20, 'Cannot allow more than 20 file types')
    .default([]),
    
  max_file_size_mb: z.number()
    .min(0.1, 'Minimum file size is 0.1 MB')
    .max(100, 'Maximum file size is 100 MB')
    .default(10),
    
  max_files: z.number()
    .min(1, 'Must allow at least 1 file')
    .max(20, 'Cannot allow more than 20 files')
    .default(5),
    
  // Content and resources
  instructions: z.string().max(20000, 'Instructions cannot exceed 20000 characters').optional(),
  attachments: z.array(AttachmentSchema).max(20, 'Cannot exceed 20 attachments').default([]),
  
  // Rubric and AI
  rubric: z.object({
    criteria: z.array(z.object({
      id: z.string().uuid(),
      name: z.string().min(1).max(100),
      description: z.string().max(500),
      points: z.number().min(0).max(100),
      weight: z.number().min(0).max(5).default(1),
      levels: z.array(z.object({
        id: z.string().uuid(),
        name: z.string().min(1).max(50),
        description: z.string().max(200),
        points: z.number().min(0),
      }

   Line 299: "Due date must be after assigned date"
   Context: {
  message: 'Due date must be after assigned date',
  path: ['due_at']
}

   Line 308: "Available until must be after available from"
   Context: {
  message: 'Available until must be after available from',
  path: ['available_until']
}

   Line 317: "Must specify allowed file types for file submissions"
   Context: {
  message: 'Must specify allowed file types for file submissions',
  path: ['allowed_file_types']
}

   Line 326: "Peer review requires single submission (max_attempts = 1)"
   Context: {
  message: 'Peer review requires single submission (max_attempts = 1)',
  path: ['allow_peer_review']
}

   Line 335: "AI grading prompt is required when AI grading is enabled"
   Context: {
  message: 'AI grading prompt is required when AI grading is enabled',
  path: ['ai_grading_prompt']
}

   Line 344: "Submission content cannot exceed 50000 characters"
   Context: {
  // Basic information
  assignment_id: z.string().uuid(),
  
  // Content
  content: z.string()
    .max(50000, 'Submission content cannot exceed 50000 characters')
    .optional(),
    
  // File submissions
  attachments: z.array(AttachmentSchema)
    .max(20, 'Cannot exceed 20 file attachments')
    .default([]),
    
  // Submission metadata
  submission_type: z.enum(['text', 'file', 'both']).default('both'),
  
  // Timing and attempts
  attempt_number: z.number().min(1).max(10).default(1),
  time_spent_minutes: z.number()
    .min(0, 'Time spent cannot be negative')
    .max(480, 'Time spent cannot exceed 8 hours')
    .optional(),
    
  // Status and workflow
  is_draft: z.boolean().default(false),
  is_final: z.boolean().default(true),
  
  // Collaboration
  collaborators: z.array(z.string().uuid())
    .max(10, 'Cannot have more than 10 collaborators')
    .default([]),
    
  // External integrations
  external_tool_data: z.record(z.string(), z.any()).default({}

   Line 398: "Submission must have content or attachments"
   Context: {
  message: 'Submission must have content or attachments',
  path: ['content', 'attachments']
}

   Line 407: "Final submissions cannot be drafts"
   Context: {
  message: 'Final submissions cannot be drafts',
  path: ['is_final']
}

   Line 416: "Points earned cannot be negative"
   Context: {
  // Basic grading information
  submission_id: z.string().uuid(),
  
  // Points and scoring
  points_earned: z.number()
    .min(0, 'Points earned cannot be negative')
    .max(1000, 'Points earned cannot exceed 1000'),
    
  points_possible: z.number()
    .min(0.5, 'Points possible must be at least 0.5')
    .max(1000, 'Points possible cannot exceed 1000'),
    
  // Letter grade
  letter_grade: z.enum([
    'A+', 'A', 'A-', 'B+', 'B', 'B-', 'C+', 'C', 'C-',
    'D+', 'D', 'D-', 'F', 'Pass', 'Fail', 'Incomplete', 'Withdraw'
  ]).optional(),
  
  // Detailed feedback
  feedback: z.string()
    .max(10000, 'Feedback cannot exceed 10000 characters')
    .optional(),
    
  private_notes: z.string()
    .max(5000, 'Private notes cannot exceed 5000 characters')
    .optional(),
    
  // Rubric scoring
  rubric_scores: z.record(z.string(), z.object({
    criterion_id: z.string().uuid(),
    level_id: z.string().uuid(),
    points: z.number().min(0).max(100),
    comments: z.string().max(500).optional(),
  }

   Line 483: "Points earned cannot significantly exceed points possible"
   Context: {
  message: 'Points earned cannot significantly exceed points possible',
  path: ['points_earned']
}

   Line 492: "Review reason is required when grade needs review"
   Context: {
  message: 'Review reason is required when grade needs review',
  path: ['review_reason']
}

   Line 501: "Published grades must be final"
   Context: {
  message: 'Published grades must be final',
  path: ['is_published']
}

   Line 34: "File cannot be empty"
   Context: 'File cannot be empty'

   Line 39: "File name is required"
   Context: 'File name is required'

   Line 39: "File name too long"
   Context: 'File name too long'

   Line 41: "Invalid file type"
   Context: 'Invalid file type'

   Line 45: "Description too long"
   Context: 'Description too long'

   Line 52: "Date must be in the future"
   Context: 'Date must be in the future'

   Line 58: "Date must be in the past or present"
   Context: 'Date must be in the past or present'

   Line 87: "Course title contains invalid characters"
   Context: 'Course title contains invalid characters'

   Line 111: "Social Studies"
   Context: 'Social Studies'

   Line 112: "Physical Education"
   Context: 'Physical Education'

   Line 112: "Computer Science"
   Context: 'Computer Science'

   Line 112: "Foreign Language"
   Context: 'Foreign Language'

   Line 131: "Late penalty cannot be negative"
   Context: 'Late penalty cannot be negative'

   Line 149: "Join code must be uppercase letters and numbers"
   Context: 'Join code must be uppercase letters and numbers'

   Line 165: "End date must be after start date"
   Context: 'End date must be after start date'

   Line 174: "Join code is required when join code is enabled"
   Context: 'Join code is required when join code is enabled'

   Line 183: "Join code expiration must be in the future"
   Context: 'Join code expiration must be in the future'

   Line 131: "Late penalty cannot be negative"
   Context: 'Late penalty cannot be negative'

   Line 231: "Max attempts cannot be negative"
   Context: 'Max attempts cannot be negative'

   Line 277: "AI grading prompt too long"
   Context: 'AI grading prompt too long'

   Line 300: "Due date must be after assigned date"
   Context: 'Due date must be after assigned date'

   Line 309: "Available until must be after available from"
   Context: 'Available until must be after available from'

   Line 318: "Must specify allowed file types for file submissions"
   Context: 'Must specify allowed file types for file submissions'

   Line 336: "AI grading prompt is required when AI grading is enabled"
   Context: 'AI grading prompt is required when AI grading is enabled'

   Line 364: "Time spent cannot be negative"
   Context: 'Time spent cannot be negative'

   Line 399: "Submission must have content or attachments"
   Context: 'Submission must have content or attachments'

   Line 408: "Final submissions cannot be drafts"
   Context: 'Final submissions cannot be drafts'

   Line 422: "Points earned cannot be negative"
   Context: 'Points earned cannot be negative'

   Line 463: "Grading time cannot be negative"
   Context: 'Grading time cannot be negative'

   Line 484: "Points earned cannot significantly exceed points possible"
   Context: 'Points earned cannot significantly exceed points possible'

   Line 493: "Review reason is required when grade needs review"
   Context: 'Review reason is required when grade needs review'

   Line 502: "Published grades must be final"
   Context: 'Published grades must be final'

üìÑ lib/visibilityHandler.ts:
   Line 102: "Session refresh failed on visibility change:"
   Context: {
        console.error('Session refresh failed on visibility change:', error);
      }

   Line 115: "Session validation failed:"
   Context: {
      console.error('Session validation failed:', error);
      return false;
    }

   Line 135: "Failed to refresh session:"
   Context: {
      console.error('Failed to refresh session:', error);
      throw error;
    }

   Line 103: "Session refresh failed on visibility change:"
   Context: console.error('Session refresh failed on visibility change:'

   Line 116: "Session validation failed:"
   Context: console.error('Session validation failed:'

   Line 136: "Failed to refresh session:"
   Context: console.error('Failed to refresh session:'

üìÑ lib/voice-pipeline.ts:
   Line 234: "Voice pipeline pre-warm failed"
   Context: {
        logger.warn('Voice pipeline pre-warm failed', error);
      }

   Line 248: "recording"
   Context: {
    if (this.state === 'recording') {
      logger.warn('Recording already in progress');
      return false;
    }

   Line 284: "Failed to start recording"
   Context: {
        logger.error('Failed to start recording', error);
        this.setState('error');
        return false;
      }

   Line 313: "recording"
   Context: {
    if (!this.recording || this.state !== 'recording') {
      logger.warn('No active recording to stop');
      return null;
    }

   Line 322: "No recording URI available"
   Context: {
      // Stop recording
      await this.recording.stopAndUnloadAsync();
      const uri = this.recording.getURI();
      const status = await this.recording.getStatusAsync();
      
      if (!uri) {
        throw new Error('No recording URI available');
      }

   Line 354: "Failed to stop recording"
   Context: {
      logger.error('Failed to stop recording', error);
      this.setState('error');
      return null;
    }

   Line 375: "Failed to pause recording"
   Context: {
      logger.error('Failed to pause recording', error);
      return false;
    }

   Line 395: "Failed to resume recording"
   Context: {
      logger.error('Failed to resume recording', error);
      return false;
    }

   Line 416: "Failed to cancel recording"
   Context: {
        logger.error('Failed to cancel recording', error);
      }

   Line 459: "Failed to get audio metering"
   Context: {
      logger.debug('Failed to get audio metering', error);
    }

   Line 546: "Audio compression requested"
   Context: {
  // In a real implementation, use FFmpeg or native compression
  // For now, return the original URI
  logger.debug('Audio compression requested', { uri, targetBitrate }

   Line 560: "audio_upload"
   Context: {
  try {
    mark('audio_upload');
    
    const uploadResult = await FileSystem.uploadAsync(uploadUrl, uri, {
      httpMethod: 'PUT',
      uploadType: FileSystem.FileSystemUploadType.BINARY_CONTENT,
    }

   Line 578: "Failed to upload audio"
   Context: {
    logger.error('Failed to upload audio', error);
    throw error;
  }

   Line 587: "Audio queued for offline upload"
   Context: {
  // Store in local queue for later upload
  logger.info('Audio queued for offline upload', { uri, metadata }

   Line 607: "Failed to get audio duration"
   Context: {
    logger.error('Failed to get audio duration', error);
    return 0;
  }

   Line 250: "Recording already in progress"
   Context: 'Recording already in progress'

   Line 285: "Failed to start recording"
   Context: 'Failed to start recording'

   Line 315: "No active recording to stop"
   Context: 'No active recording to stop'

   Line 329: "No recording URI available"
   Context: 'No recording URI available'

   Line 355: "Failed to stop recording"
   Context: 'Failed to stop recording'

   Line 376: "Failed to pause recording"
   Context: 'Failed to pause recording'

   Line 396: "Failed to resume recording"
   Context: 'Failed to resume recording'

   Line 417: "Failed to cancel recording"
   Context: 'Failed to cancel recording'

   Line 460: "Failed to get audio metering"
   Context: 'Failed to get audio metering'

   Line 549: "Audio compression requested"
   Context: 'Audio compression requested'

   Line 579: "Failed to upload audio"
   Context: 'Failed to upload audio'

   Line 589: "Audio queued for offline upload"
   Context: 'Audio queued for offline upload'

   Line 608: "Failed to get audio duration"
   Context: 'Failed to get audio duration'

   Line 329: "No recording URI available"
   Context: throw new Error('No recording URI available'

üìÑ lib/voice/webrtcProvider.ts:
   Line 146: "Received empty SDP answer from server"
   Context: {
          throw new Error('Received empty SDP answer from server');
        }

   Line 147: "Received empty SDP answer from server"
   Context: 'Received empty SDP answer from server'

   Line 147: "Received empty SDP answer from server"
   Context: throw new Error('Received empty SDP answer from server'

üìÑ lib/webSEO.ts:
   Line 85: "Failed to set SEO metadata:"
   Context: {
    console.warn('Failed to set SEO metadata:', error);
  }

   Line 90: "EduDash Pro - AI-Powered Educational Platform for Preschools"
   Context: {
  title: 'EduDash Pro - AI-Powered Educational Platform for Preschools',
  description: 'Revolutionary AI-powered educational platform transforming preschool learning. Create lessons, track progress, and engage parents with cutting-edge Society 5.0 technology.',
  keywords: [
    'education platform',
    'preschool management',
    'AI education',
    'educational technology',
    'teacher dashboard',
    'parent portal',
    'lesson planning',
    'student progress',
    'educational AI',
    'preschool software',
    'edtech',
    'learning management system'
  ],
  ogTitle: 'EduDash Pro - Transform Education with AI',
  ogDescription: 'Join thousands of educators using AI-powered tools for next-generation preschool learning. Create engaging lessons, track student progress, and connect with parents seamlessly.',
  twitterCard: 'summary_large_image'
}

   Line 112: "EduDash Pro Pricing - Flexible Plans for Every Preschool"
   Context: {
  title: 'EduDash Pro Pricing - Flexible Plans for Every Preschool',
  description: 'Affordable AI-powered education platform pricing. Start free with up to 50 students. Professional and Enterprise plans available. Transparent pricing, no hidden fees.',
  keywords: [
    'education pricing',
    'preschool software pricing',
    'edtech pricing',
    'educational platform cost',
    'school management pricing',
    'AI education cost',
    'free education platform',
    'preschool management cost'
  ],
  ogTitle: 'EduDash Pro Pricing - Start Free, Scale as You Grow',
  ogDescription: 'Transparent pricing for AI-powered preschool management. Free tier available. Professional plans from R299/month. Enterprise solutions for large organizations.',
  twitterCard: 'summary_large_image'
}

   Line 86: "Failed to set SEO metadata:"
   Context: console.warn('Failed to set SEO metadata:'

   Line 96: "AI education"
   Context: 'AI education'

   Line 121: "AI education cost"
   Context: 'AI education cost'

üéØ NEXT STEPS:
1. Replace hardcoded strings with useTranslation() hooks
2. Add missing keys to locales/en/common.json
3. Translate all keys to: af, zu, st, es, fr, pt, de
4. Test language switching end-to-end

üí° Example fix:
  BEFORE: <Text>Plans & Pricing</Text>
  AFTER:  <Text>{t("pricing.title")}</Text>

üìã COMPLIANCE CHECK:
- ‚úÖ WARP.md Golden Rule: Multi-language support for global education
- ‚úÖ Implementation Plan Phase 1: I18N audit requirement
- ‚ùå Zero hardcoded strings in codebase
